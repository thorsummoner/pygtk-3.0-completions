{
    "scope": "source.python",

    "completions":
    [
        { "trigger": "Gtk.accel_groups_activate",                "contents": "Gtk.accel_groups_activate(object, accel_key, accel_mods)"                                                                  },
        { "trigger": "Gtk.accel_groups_from_object",             "contents": "Gtk.accel_groups_from_object(object)"                                                                                      },
        { "trigger": "Gtk.accelerator_get_default_mod_mask",     "contents": "Gtk.accelerator_get_default_mod_mask()"                                                                                    },
        { "trigger": "Gtk.accelerator_get_label",                "contents": "Gtk.accelerator_get_label(accelerator_key, accelerator_mods)"                                                              },
        { "trigger": "Gtk.accelerator_get_label_with_keycode",   "contents": "Gtk.accelerator_get_label_with_keycode(display, accelerator_key, keycode, accelerator_mods)"                               },
        { "trigger": "Gtk.accelerator_name",                     "contents": "Gtk.accelerator_name(accelerator_key, accelerator_mods)"                                                                   },
        { "trigger": "Gtk.accelerator_name_with_keycode",        "contents": "Gtk.accelerator_name_with_keycode(display, accelerator_key, keycode, accelerator_mods)"                                    },
        { "trigger": "Gtk.accelerator_parse",                    "contents": "Gtk.accelerator_parse(accelerator)"                                                                                        },
        { "trigger": "Gtk.accelerator_parse_with_keycode",       "contents": "Gtk.accelerator_parse_with_keycode(accelerator)"                                                                           },
        { "trigger": "Gtk.accelerator_set_default_mod_mask",     "contents": "Gtk.accelerator_set_default_mod_mask(default_mod_mask)"                                                                    },
        { "trigger": "Gtk.accelerator_valid",                    "contents": "Gtk.accelerator_valid(keyval, modifiers)"                                                                                  },
        { "trigger": "Gtk.alternative_dialog_button_order",      "contents": "Gtk.alternative_dialog_button_order(screen)"                                                                               },
        { "trigger": "Gtk.binding_entry_add_signal_from_string", "contents": "Gtk.binding_entry_add_signal_from_string(binding_set, signal_desc)"                                                        },
        { "trigger": "Gtk.binding_entry_add_signall",            "contents": "Gtk.binding_entry_add_signall(binding_set, keyval, modifiers, signal_name, binding_args)"                                  },
        { "trigger": "Gtk.binding_entry_remove",                 "contents": "Gtk.binding_entry_remove(binding_set, keyval, modifiers)"                                                                  },
        { "trigger": "Gtk.binding_entry_skip",                   "contents": "Gtk.binding_entry_skip(binding_set, keyval, modifiers)"                                                                    },
        { "trigger": "Gtk.binding_set_find",                     "contents": "Gtk.binding_set_find(set_name)"                                                                                            },
        { "trigger": "Gtk.bindings_activate",                    "contents": "Gtk.bindings_activate(object, keyval, modifiers)"                                                                          },
        { "trigger": "Gtk.bindings_activate_event",              "contents": "Gtk.bindings_activate_event(object, event)"                                                                                },
        { "trigger": "Gtk.builder_error_quark",                  "contents": "Gtk.builder_error_quark()"                                                                                                 },
        { "trigger": "Gtk.cairo_should_draw_window",             "contents": "Gtk.cairo_should_draw_window(cr, window)"                                                                                  },
        { "trigger": "Gtk.cairo_transform_to_window",            "contents": "Gtk.cairo_transform_to_window(cr, widget, window)"                                                                         },
        { "trigger": "Gtk.check_version",                        "contents": "Gtk.check_version(required_major, required_minor, required_micro)"                                                         },
        { "trigger": "Gtk.css_provider_error_quark",             "contents": "Gtk.css_provider_error_quark()"                                                                                            },
        { "trigger": "Gtk.device_grab_add",                      "contents": "Gtk.device_grab_add(widget, device, block_others)"                                                                         },
        { "trigger": "Gtk.device_grab_remove",                   "contents": "Gtk.device_grab_remove(widget, device)"                                                                                    },
        { "trigger": "Gtk.disable_setlocale",                    "contents": "Gtk.disable_setlocale()"                                                                                                   },
        { "trigger": "Gtk.distribute_natural_allocation",        "contents": "Gtk.distribute_natural_allocation(extra_space, n_requested_sizes, sizes)"                                                  },
        { "trigger": "Gtk.drag_cancel",                          "contents": "Gtk.drag_cancel(context)"                                                                                                  },
        { "trigger": "Gtk.drag_finish",                          "contents": "Gtk.drag_finish(context, success, del_, time_)"                                                                            },
        { "trigger": "Gtk.drag_get_source_widget",               "contents": "Gtk.drag_get_source_widget(context)"                                                                                       },
        { "trigger": "Gtk.drag_set_icon_default",                "contents": "Gtk.drag_set_icon_default(context)"                                                                                        },
        { "trigger": "Gtk.drag_set_icon_gicon",                  "contents": "Gtk.drag_set_icon_gicon(context, icon, hot_x, hot_y)"                                                                      },
        { "trigger": "Gtk.drag_set_icon_name",                   "contents": "Gtk.drag_set_icon_name(context, icon_name, hot_x, hot_y)"                                                                  },
        { "trigger": "Gtk.drag_set_icon_pixbuf",                 "contents": "Gtk.drag_set_icon_pixbuf(context, pixbuf, hot_x, hot_y)"                                                                   },
        { "trigger": "Gtk.drag_set_icon_stock",                  "contents": "Gtk.drag_set_icon_stock(context, stock_id, hot_x, hot_y)"                                                                  },
        { "trigger": "Gtk.drag_set_icon_surface",                "contents": "Gtk.drag_set_icon_surface(context, surface)"                                                                               },
        { "trigger": "Gtk.drag_set_icon_widget",                 "contents": "Gtk.drag_set_icon_widget(context, widget, hot_x, hot_y)"                                                                   },
        { "trigger": "Gtk.draw_insertion_cursor",                "contents": "Gtk.draw_insertion_cursor(widget, cr, location, is_primary, direction, draw_arrow)"                                        },
        { "trigger": "Gtk.events_pending",                       "contents": "Gtk.events_pending()"                                                                                                      },
        { "trigger": "Gtk.false",                                "contents": "Gtk.false()"                                                                                                               },
        { "trigger": "Gtk.file_chooser_error_quark",             "contents": "Gtk.file_chooser_error_quark()"                                                                                            },
        { "trigger": "Gtk.get_binary_age",                       "contents": "Gtk.get_binary_age()"                                                                                                      },
        { "trigger": "Gtk.get_current_event",                    "contents": "Gtk.get_current_event()"                                                                                                   },
        { "trigger": "Gtk.get_current_event_device",             "contents": "Gtk.get_current_event_device()"                                                                                            },
        { "trigger": "Gtk.get_current_event_state",              "contents": "Gtk.get_current_event_state()"                                                                                             },
        { "trigger": "Gtk.get_current_event_time",               "contents": "Gtk.get_current_event_time()"                                                                                              },
        { "trigger": "Gtk.get_debug_flags",                      "contents": "Gtk.get_debug_flags()"                                                                                                     },
        { "trigger": "Gtk.get_default_language",                 "contents": "Gtk.get_default_language()"                                                                                                },
        { "trigger": "Gtk.get_event_widget",                     "contents": "Gtk.get_event_widget(event)"                                                                                               },
        { "trigger": "Gtk.get_interface_age",                    "contents": "Gtk.get_interface_age()"                                                                                                   },
        { "trigger": "Gtk.get_locale_direction",                 "contents": "Gtk.get_locale_direction()"                                                                                                },
        { "trigger": "Gtk.get_major_version",                    "contents": "Gtk.get_major_version()"                                                                                                   },
        { "trigger": "Gtk.get_micro_version",                    "contents": "Gtk.get_micro_version()"                                                                                                   },
        { "trigger": "Gtk.get_minor_version",                    "contents": "Gtk.get_minor_version()"                                                                                                   },
        { "trigger": "Gtk.get_option_group",                     "contents": "Gtk.get_option_group(open_default_display)"                                                                                },
        { "trigger": "Gtk.grab_get_current",                     "contents": "Gtk.grab_get_current()"                                                                                                    },
        { "trigger": "Gtk.icon_size_from_name",                  "contents": "Gtk.icon_size_from_name(name)"                                                                                             },
        { "trigger": "Gtk.icon_size_get_name",                   "contents": "Gtk.icon_size_get_name(size)"                                                                                              },
        { "trigger": "Gtk.icon_size_lookup",                     "contents": "Gtk.icon_size_lookup(size)"                                                                                                },
        { "trigger": "Gtk.icon_size_lookup_for_settings",        "contents": "Gtk.icon_size_lookup_for_settings(settings, size)"                                                                         },
        { "trigger": "Gtk.icon_size_register",                   "contents": "Gtk.icon_size_register(name, width, height)"                                                                               },
        { "trigger": "Gtk.icon_size_register_alias",             "contents": "Gtk.icon_size_register_alias(alias, target)"                                                                               },
        { "trigger": "Gtk.icon_theme_error_quark",               "contents": "Gtk.icon_theme_error_quark()"                                                                                              },
        { "trigger": "Gtk.init",                                 "contents": "Gtk.init(argv)"                                                                                                            },
        { "trigger": "Gtk.init_check",                           "contents": "Gtk.init_check(argv)"                                                                                                      },
        { "trigger": "Gtk.init_with_args",                       "contents": "Gtk.init_with_args(argv, parameter_string, entries, translation_domain)"                                                   },
        { "trigger": "Gtk.key_snooper_remove",                   "contents": "Gtk.key_snooper_remove(snooper_handler_id)"                                                                                },
        { "trigger": "Gtk.main",                                 "contents": "Gtk.main()"                                                                                                                },
        { "trigger": "Gtk.main_do_event",                        "contents": "Gtk.main_do_event(event)"                                                                                                  },
        { "trigger": "Gtk.main_iteration",                       "contents": "Gtk.main_iteration()"                                                                                                      },
        { "trigger": "Gtk.main_iteration_do",                    "contents": "Gtk.main_iteration_do(blocking)"                                                                                           },
        { "trigger": "Gtk.main_level",                           "contents": "Gtk.main_level()"                                                                                                          },
        { "trigger": "Gtk.main_quit",                            "contents": "Gtk.main_quit()"                                                                                                           },
        { "trigger": "Gtk.paint_arrow",                          "contents": "Gtk.paint_arrow(style, cr, state_type, shadow_type, widget, detail, arrow_type, fill, x, y, width, height)"                },
        { "trigger": "Gtk.paint_box",                            "contents": "Gtk.paint_box(style, cr, state_type, shadow_type, widget, detail, x, y, width, height)"                                    },
        { "trigger": "Gtk.paint_box_gap",                        "contents": "Gtk.paint_box_gap(style, cr, state_type, shadow_type, widget, detail, x, y, width, height, gap_side, gap_x, gap_width)"    },
        { "trigger": "Gtk.paint_check",                          "contents": "Gtk.paint_check(style, cr, state_type, shadow_type, widget, detail, x, y, width, height)"                                  },
        { "trigger": "Gtk.paint_diamond",                        "contents": "Gtk.paint_diamond(style, cr, state_type, shadow_type, widget, detail, x, y, width, height)"                                },
        { "trigger": "Gtk.paint_expander",                       "contents": "Gtk.paint_expander(style, cr, state_type, widget, detail, x, y, expander_style)"                                           },
        { "trigger": "Gtk.paint_extension",                      "contents": "Gtk.paint_extension(style, cr, state_type, shadow_type, widget, detail, x, y, width, height, gap_side)"                    },
        { "trigger": "Gtk.paint_flat_box",                       "contents": "Gtk.paint_flat_box(style, cr, state_type, shadow_type, widget, detail, x, y, width, height)"                               },
        { "trigger": "Gtk.paint_focus",                          "contents": "Gtk.paint_focus(style, cr, state_type, widget, detail, x, y, width, height)"                                               },
        { "trigger": "Gtk.paint_handle",                         "contents": "Gtk.paint_handle(style, cr, state_type, shadow_type, widget, detail, x, y, width, height, orientation)"                    },
        { "trigger": "Gtk.paint_hline",                          "contents": "Gtk.paint_hline(style, cr, state_type, widget, detail, x1, x2, y)"                                                         },
        { "trigger": "Gtk.paint_layout",                         "contents": "Gtk.paint_layout(style, cr, state_type, use_text, widget, detail, x, y, layout)"                                           },
        { "trigger": "Gtk.paint_option",                         "contents": "Gtk.paint_option(style, cr, state_type, shadow_type, widget, detail, x, y, width, height)"                                 },
        { "trigger": "Gtk.paint_resize_grip",                    "contents": "Gtk.paint_resize_grip(style, cr, state_type, widget, detail, edge, x, y, width, height)"                                   },
        { "trigger": "Gtk.paint_shadow",                         "contents": "Gtk.paint_shadow(style, cr, state_type, shadow_type, widget, detail, x, y, width, height)"                                 },
        { "trigger": "Gtk.paint_shadow_gap",                     "contents": "Gtk.paint_shadow_gap(style, cr, state_type, shadow_type, widget, detail, x, y, width, height, gap_side, gap_x, gap_width)" },
        { "trigger": "Gtk.paint_slider",                         "contents": "Gtk.paint_slider(style, cr, state_type, shadow_type, widget, detail, x, y, width, height, orientation)"                    },
        { "trigger": "Gtk.paint_spinner",                        "contents": "Gtk.paint_spinner(style, cr, state_type, widget, detail, step, x, y, width, height)"                                       },
        { "trigger": "Gtk.paint_tab",                            "contents": "Gtk.paint_tab(style, cr, state_type, shadow_type, widget, detail, x, y, width, height)"                                    },
        { "trigger": "Gtk.paint_vline",                          "contents": "Gtk.paint_vline(style, cr, state_type, widget, detail, y1_, y2_, x)"                                                       },
        { "trigger": "Gtk.paper_size_get_default",               "contents": "Gtk.paper_size_get_default()"                                                                                              },
        { "trigger": "Gtk.paper_size_get_paper_sizes",           "contents": "Gtk.paper_size_get_paper_sizes(include_custom)"                                                                            },
        { "trigger": "Gtk.parse_args",                           "contents": "Gtk.parse_args(argv)"                                                                                                      },
        { "trigger": "Gtk.print_error_quark",                    "contents": "Gtk.print_error_quark()"                                                                                                   },
        { "trigger": "Gtk.print_run_page_setup_dialog",          "contents": "Gtk.print_run_page_setup_dialog(parent, page_setup, settings)"                                                             },
        { "trigger": "Gtk.print_run_page_setup_dialog_async",    "contents": "Gtk.print_run_page_setup_dialog_async(parent, page_setup, settings, done_cb, *data)"                                       },
        { "trigger": "Gtk.propagate_event",                      "contents": "Gtk.propagate_event(widget, event)"                                                                                        },
        { "trigger": "Gtk.rc_add_default_file",                  "contents": "Gtk.rc_add_default_file(filename)"                                                                                         },
        { "trigger": "Gtk.rc_find_module_in_path",               "contents": "Gtk.rc_find_module_in_path(module_file)"                                                                                   },
        { "trigger": "Gtk.rc_find_pixmap_in_path",               "contents": "Gtk.rc_find_pixmap_in_path(settings, scanner, pixmap_file)"                                                                },
        { "trigger": "Gtk.rc_get_default_files",                 "contents": "Gtk.rc_get_default_files()"                                                                                                },
        { "trigger": "Gtk.rc_get_im_module_file",                "contents": "Gtk.rc_get_im_module_file()"                                                                                               },
        { "trigger": "Gtk.rc_get_im_module_path",                "contents": "Gtk.rc_get_im_module_path()"                                                                                               },
        { "trigger": "Gtk.rc_get_module_dir",                    "contents": "Gtk.rc_get_module_dir()"                                                                                                   },
        { "trigger": "Gtk.rc_get_style",                         "contents": "Gtk.rc_get_style(widget)"                                                                                                  },
        { "trigger": "Gtk.rc_get_style_by_paths",                "contents": "Gtk.rc_get_style_by_paths(settings, widget_path, class_path, type)"                                                        },
        { "trigger": "Gtk.rc_get_theme_dir",                     "contents": "Gtk.rc_get_theme_dir()"                                                                                                    },
        { "trigger": "Gtk.rc_parse",                             "contents": "Gtk.rc_parse(filename)"                                                                                                    },
        { "trigger": "Gtk.rc_parse_color",                       "contents": "Gtk.rc_parse_color(scanner)"                                                                                               },
        { "trigger": "Gtk.rc_parse_color_full",                  "contents": "Gtk.rc_parse_color_full(scanner, style)"                                                                                   },
        { "trigger": "Gtk.rc_parse_priority",                    "contents": "Gtk.rc_parse_priority(scanner, priority)"                                                                                  },
        { "trigger": "Gtk.rc_parse_state",                       "contents": "Gtk.rc_parse_state(scanner)"                                                                                               },
        { "trigger": "Gtk.rc_parse_string",                      "contents": "Gtk.rc_parse_string(rc_string)"                                                                                            },
        { "trigger": "Gtk.rc_property_parse_border",             "contents": "Gtk.rc_property_parse_border(pspec, gstring, property_value)"                                                              },
        { "trigger": "Gtk.rc_property_parse_color",              "contents": "Gtk.rc_property_parse_color(pspec, gstring, property_value)"                                                               },
        { "trigger": "Gtk.rc_property_parse_enum",               "contents": "Gtk.rc_property_parse_enum(pspec, gstring, property_value)"                                                                },
        { "trigger": "Gtk.rc_property_parse_flags",              "contents": "Gtk.rc_property_parse_flags(pspec, gstring, property_value)"                                                               },
        { "trigger": "Gtk.rc_property_parse_requisition",        "contents": "Gtk.rc_property_parse_requisition(pspec, gstring, property_value)"                                                         },
        { "trigger": "Gtk.rc_reparse_all",                       "contents": "Gtk.rc_reparse_all()"                                                                                                      },
        { "trigger": "Gtk.rc_reparse_all_for_settings",          "contents": "Gtk.rc_reparse_all_for_settings(settings, force_load)"                                                                     },
        { "trigger": "Gtk.rc_reset_styles",                      "contents": "Gtk.rc_reset_styles(settings)"                                                                                             },
        { "trigger": "Gtk.rc_set_default_files",                 "contents": "Gtk.rc_set_default_files(filenames)"                                                                                       },
        { "trigger": "Gtk.recent_chooser_error_quark",           "contents": "Gtk.recent_chooser_error_quark()"                                                                                          },
        { "trigger": "Gtk.recent_manager_error_quark",           "contents": "Gtk.recent_manager_error_quark()"                                                                                          },
        { "trigger": "Gtk.render_activity",                      "contents": "Gtk.render_activity(context, cr, x, y, width, height)"                                                                     },
        { "trigger": "Gtk.render_arrow",                         "contents": "Gtk.render_arrow(context, cr, angle, x, y, size)"                                                                          },
        { "trigger": "Gtk.render_background",                    "contents": "Gtk.render_background(context, cr, x, y, width, height)"                                                                   },
        { "trigger": "Gtk.render_check",                         "contents": "Gtk.render_check(context, cr, x, y, width, height)"                                                                        },
        { "trigger": "Gtk.render_expander",                      "contents": "Gtk.render_expander(context, cr, x, y, width, height)"                                                                     },
        { "trigger": "Gtk.render_extension",                     "contents": "Gtk.render_extension(context, cr, x, y, width, height, gap_side)"                                                          },
        { "trigger": "Gtk.render_focus",                         "contents": "Gtk.render_focus(context, cr, x, y, width, height)"                                                                        },
        { "trigger": "Gtk.render_frame",                         "contents": "Gtk.render_frame(context, cr, x, y, width, height)"                                                                        },
        { "trigger": "Gtk.render_frame_gap",                     "contents": "Gtk.render_frame_gap(context, cr, x, y, width, height, gap_side, xy0_gap, xy1_gap)"                                        },
        { "trigger": "Gtk.render_handle",                        "contents": "Gtk.render_handle(context, cr, x, y, width, height)"                                                                       },
        { "trigger": "Gtk.render_icon",                          "contents": "Gtk.render_icon(context, cr, pixbuf, x, y)"                                                                                },
        { "trigger": "Gtk.render_icon_pixbuf",                   "contents": "Gtk.render_icon_pixbuf(context, source, size)"                                                                             },
        { "trigger": "Gtk.render_icon_surface",                  "contents": "Gtk.render_icon_surface(context, cr, surface, x, y)"                                                                       },
        { "trigger": "Gtk.render_insertion_cursor",              "contents": "Gtk.render_insertion_cursor(context, cr, x, y, layout, index, direction)"                                                  },
        { "trigger": "Gtk.render_layout",                        "contents": "Gtk.render_layout(context, cr, x, y, layout)"                                                                              },
        { "trigger": "Gtk.render_line",                          "contents": "Gtk.render_line(context, cr, x0, y0, x1, y1)"                                                                              },
        { "trigger": "Gtk.render_option",                        "contents": "Gtk.render_option(context, cr, x, y, width, height)"                                                                       },
        { "trigger": "Gtk.render_slider",                        "contents": "Gtk.render_slider(context, cr, x, y, width, height, orientation)"                                                          },
        { "trigger": "Gtk.rgb_to_hsv",                           "contents": "Gtk.rgb_to_hsv(r, g, b)"                                                                                                   },
        { "trigger": "Gtk.selection_add_target",                 "contents": "Gtk.selection_add_target(widget, selection, target, info)"                                                                 },
        { "trigger": "Gtk.selection_add_targets",                "contents": "Gtk.selection_add_targets(widget, selection, targets)"                                                                     },
        { "trigger": "Gtk.selection_clear_targets",              "contents": "Gtk.selection_clear_targets(widget, selection)"                                                                            },
        { "trigger": "Gtk.selection_convert",                    "contents": "Gtk.selection_convert(widget, selection, target, time_)"                                                                   },
        { "trigger": "Gtk.selection_owner_set",                  "contents": "Gtk.selection_owner_set(widget, selection, time_)"                                                                         },
        { "trigger": "Gtk.selection_owner_set_for_display",      "contents": "Gtk.selection_owner_set_for_display(display, widget, selection, time_)"                                                    },
        { "trigger": "Gtk.selection_remove_all",                 "contents": "Gtk.selection_remove_all(widget)"                                                                                          },
        { "trigger": "Gtk.set_debug_flags",                      "contents": "Gtk.set_debug_flags(flags)"                                                                                                },
        { "trigger": "Gtk.show_uri",                             "contents": "Gtk.show_uri(screen, uri, timestamp)"                                                                                      },
        { "trigger": "Gtk.stock_add",                            "contents": "Gtk.stock_add(items)"                                                                                                      },
        { "trigger": "Gtk.stock_add_static",                     "contents": "Gtk.stock_add_static(items)"                                                                                               },
        { "trigger": "Gtk.stock_list_ids",                       "contents": "Gtk.stock_list_ids()"                                                                                                      },
        { "trigger": "Gtk.stock_lookup",                         "contents": "Gtk.stock_lookup(stock_id)"                                                                                                },
        { "trigger": "Gtk.stock_set_translate_func",             "contents": "Gtk.stock_set_translate_func(domain, func, *data)"                                                                         },
        { "trigger": "Gtk.target_table_free",                    "contents": "Gtk.target_table_free(targets)"                                                                                            },
        { "trigger": "Gtk.target_table_new_from_list",           "contents": "Gtk.target_table_new_from_list(list)"                                                                                      },
        { "trigger": "Gtk.targets_include_image",                "contents": "Gtk.targets_include_image(targets, writable)"                                                                              },
        { "trigger": "Gtk.targets_include_rich_text",            "contents": "Gtk.targets_include_rich_text(targets, buffer)"                                                                            },
        { "trigger": "Gtk.targets_include_text",                 "contents": "Gtk.targets_include_text(targets)"                                                                                         },
        { "trigger": "Gtk.targets_include_uri",                  "contents": "Gtk.targets_include_uri(targets)"                                                                                          },
        { "trigger": "Gtk.test_create_simple_window",            "contents": "Gtk.test_create_simple_window(window_title, dialog_text)"                                                                  },
        { "trigger": "Gtk.test_find_label",                      "contents": "Gtk.test_find_label(widget, label_pattern)"                                                                                },
        { "trigger": "Gtk.test_find_sibling",                    "contents": "Gtk.test_find_sibling(base_widget, widget_type)"                                                                           },
        { "trigger": "Gtk.test_find_widget",                     "contents": "Gtk.test_find_widget(widget, label_pattern, widget_type)"                                                                  },
        { "trigger": "Gtk.test_list_all_types",                  "contents": "Gtk.test_list_all_types()"                                                                                                 },
        { "trigger": "Gtk.test_register_all_types",              "contents": "Gtk.test_register_all_types()"                                                                                             },
        { "trigger": "Gtk.test_slider_get_value",                "contents": "Gtk.test_slider_get_value(widget)"                                                                                         },
        { "trigger": "Gtk.test_slider_set_perc",                 "contents": "Gtk.test_slider_set_perc(widget, percentage)"                                                                              },
        { "trigger": "Gtk.test_spin_button_click",               "contents": "Gtk.test_spin_button_click(spinner, button, upwards)"                                                                      },
        { "trigger": "Gtk.test_text_get",                        "contents": "Gtk.test_text_get(widget)"                                                                                                 },
        { "trigger": "Gtk.test_text_set",                        "contents": "Gtk.test_text_set(widget, string)"                                                                                         },
        { "trigger": "Gtk.test_widget_click",                    "contents": "Gtk.test_widget_click(widget, button, modifiers)"                                                                          },
        { "trigger": "Gtk.test_widget_send_key",                 "contents": "Gtk.test_widget_send_key(widget, keyval, modifiers)"                                                                       },
        { "trigger": "Gtk.test_widget_wait_for_draw",            "contents": "Gtk.test_widget_wait_for_draw(widget)"                                                                                     },
        { "trigger": "Gtk.tree_get_row_drag_data",               "contents": "Gtk.tree_get_row_drag_data(selection_data)"                                                                                },
        { "trigger": "Gtk.tree_row_reference_deleted",           "contents": "Gtk.tree_row_reference_deleted(proxy, path)"                                                                               },
        { "trigger": "Gtk.tree_row_reference_inserted",          "contents": "Gtk.tree_row_reference_inserted(proxy, path)"                                                                              },
        { "trigger": "Gtk.tree_set_row_drag_data",               "contents": "Gtk.tree_set_row_drag_data(selection_data, tree_model, path)"                                                              },
        { "trigger": "Gtk.true",                                 "contents": "Gtk.true()"                                                                                                                },
    ]
}

