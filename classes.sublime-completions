{
    "scope": "source.python",

    "completions":
    [
        { "trigger": "Gtk.AboutDialog", "contents": "Gtk.AboutDialog(*args, **kwargs)" },
        { "trigger": "Gtk.AboutDialog.new", "contents": "Gtk.AboutDialog.new()" },
        { "trigger": "Gtk.AboutDialog.add_credit_section", "contents": "Gtk.AboutDialog.add_credit_section(section_name, people)" },
        { "trigger": "Gtk.AboutDialog.get_artists", "contents": "Gtk.AboutDialog.get_artists()" },
        { "trigger": "Gtk.AboutDialog.get_authors", "contents": "Gtk.AboutDialog.get_authors()" },
        { "trigger": "Gtk.AboutDialog.get_comments", "contents": "Gtk.AboutDialog.get_comments()" },
        { "trigger": "Gtk.AboutDialog.get_copyright", "contents": "Gtk.AboutDialog.get_copyright()" },
        { "trigger": "Gtk.AboutDialog.get_documenters", "contents": "Gtk.AboutDialog.get_documenters()" },
        { "trigger": "Gtk.AboutDialog.get_license", "contents": "Gtk.AboutDialog.get_license()" },
        { "trigger": "Gtk.AboutDialog.get_license_type", "contents": "Gtk.AboutDialog.get_license_type()" },
        { "trigger": "Gtk.AboutDialog.get_logo", "contents": "Gtk.AboutDialog.get_logo()" },
        { "trigger": "Gtk.AboutDialog.get_logo_icon_name", "contents": "Gtk.AboutDialog.get_logo_icon_name()" },
        { "trigger": "Gtk.AboutDialog.get_program_name", "contents": "Gtk.AboutDialog.get_program_name()" },
        { "trigger": "Gtk.AboutDialog.get_translator_credits", "contents": "Gtk.AboutDialog.get_translator_credits()" },
        { "trigger": "Gtk.AboutDialog.get_version", "contents": "Gtk.AboutDialog.get_version()" },
        { "trigger": "Gtk.AboutDialog.get_website", "contents": "Gtk.AboutDialog.get_website()" },
        { "trigger": "Gtk.AboutDialog.get_website_label", "contents": "Gtk.AboutDialog.get_website_label()" },
        { "trigger": "Gtk.AboutDialog.get_wrap_license", "contents": "Gtk.AboutDialog.get_wrap_license()" },
        { "trigger": "Gtk.AboutDialog.set_artists", "contents": "Gtk.AboutDialog.set_artists(artists)" },
        { "trigger": "Gtk.AboutDialog.set_authors", "contents": "Gtk.AboutDialog.set_authors(authors)" },
        { "trigger": "Gtk.AboutDialog.set_comments", "contents": "Gtk.AboutDialog.set_comments(comments)" },
        { "trigger": "Gtk.AboutDialog.set_copyright", "contents": "Gtk.AboutDialog.set_copyright(copyright)" },
        { "trigger": "Gtk.AboutDialog.set_documenters", "contents": "Gtk.AboutDialog.set_documenters(documenters)" },
        { "trigger": "Gtk.AboutDialog.set_license", "contents": "Gtk.AboutDialog.set_license(license)" },
        { "trigger": "Gtk.AboutDialog.set_license_type", "contents": "Gtk.AboutDialog.set_license_type(license_type)" },
        { "trigger": "Gtk.AboutDialog.set_logo", "contents": "Gtk.AboutDialog.set_logo(logo)" },
        { "trigger": "Gtk.AboutDialog.set_logo_icon_name", "contents": "Gtk.AboutDialog.set_logo_icon_name(icon_name)" },
        { "trigger": "Gtk.AboutDialog.set_program_name", "contents": "Gtk.AboutDialog.set_program_name(name)" },
        { "trigger": "Gtk.AboutDialog.set_translator_credits", "contents": "Gtk.AboutDialog.set_translator_credits(translator_credits)" },
        { "trigger": "Gtk.AboutDialog.set_version", "contents": "Gtk.AboutDialog.set_version(version)" },
        { "trigger": "Gtk.AboutDialog.set_website", "contents": "Gtk.AboutDialog.set_website(website)" },
        { "trigger": "Gtk.AboutDialog.set_website_label", "contents": "Gtk.AboutDialog.set_website_label(website_label)" },
        { "trigger": "Gtk.AboutDialog.set_wrap_license", "contents": "Gtk.AboutDialog.set_wrap_license(wrap_license)" },
        { "trigger": "Gtk.AboutDialog.do_activate_link", "contents": "Gtk.AboutDialog.do_activate_link(uri)" },
        { "trigger": "Gtk.AboutDialog.signals.activate_link", "contents": "Gtk.AboutDialog.signals.activate_link(about_dialog, uri)" },
        { "trigger": "Gtk.AboutDialog.props.artists", "contents": "Gtk.AboutDialog.props.artists" },
        { "trigger": "Gtk.AboutDialog.props.authors", "contents": "Gtk.AboutDialog.props.authors" },
        { "trigger": "Gtk.AboutDialog.props.comments", "contents": "Gtk.AboutDialog.props.comments" },
        { "trigger": "Gtk.AboutDialog.props.copyright", "contents": "Gtk.AboutDialog.props.copyright" },
        { "trigger": "Gtk.AboutDialog.props.documenters", "contents": "Gtk.AboutDialog.props.documenters" },
        { "trigger": "Gtk.AboutDialog.props.license", "contents": "Gtk.AboutDialog.props.license" },
        { "trigger": "Gtk.AboutDialog.props.license_type", "contents": "Gtk.AboutDialog.props.license_type" },
        { "trigger": "Gtk.AboutDialog.props.logo", "contents": "Gtk.AboutDialog.props.logo" },
        { "trigger": "Gtk.AboutDialog.props.logo_icon_name", "contents": "Gtk.AboutDialog.props.logo_icon_name" },
        { "trigger": "Gtk.AboutDialog.props.program_name", "contents": "Gtk.AboutDialog.props.program_name" },
        { "trigger": "Gtk.AboutDialog.props.translator_credits", "contents": "Gtk.AboutDialog.props.translator_credits" },
        { "trigger": "Gtk.AboutDialog.props.version", "contents": "Gtk.AboutDialog.props.version" },
        { "trigger": "Gtk.AboutDialog.props.website", "contents": "Gtk.AboutDialog.props.website" },
        { "trigger": "Gtk.AboutDialog.props.website_label", "contents": "Gtk.AboutDialog.props.website_label" },
        { "trigger": "Gtk.AboutDialog.props.wrap_license", "contents": "Gtk.AboutDialog.props.wrap_license" },
        { "trigger": "Gtk.AccelGroup", "contents": "Gtk.AccelGroup(**kwargs)" },
        { "trigger": "Gtk.AccelGroup.from_accel_closure", "contents": "Gtk.AccelGroup.from_accel_closure(closure)" },
        { "trigger": "Gtk.AccelGroup.new", "contents": "Gtk.AccelGroup.new()" },
        { "trigger": "Gtk.AccelGroup.activate", "contents": "Gtk.AccelGroup.activate(accel_quark, acceleratable, accel_key, accel_mods)" },
        { "trigger": "Gtk.AccelGroup.connect", "contents": "Gtk.AccelGroup.connect(accel_key, accel_mods, accel_flags, closure)" },
        { "trigger": "Gtk.AccelGroup.connect_by_path", "contents": "Gtk.AccelGroup.connect_by_path(accel_path, closure)" },
        { "trigger": "Gtk.AccelGroup.disconnect", "contents": "Gtk.AccelGroup.disconnect(closure)" },
        { "trigger": "Gtk.AccelGroup.disconnect_key", "contents": "Gtk.AccelGroup.disconnect_key(accel_key, accel_mods)" },
        { "trigger": "Gtk.AccelGroup.find", "contents": "Gtk.AccelGroup.find(find_func, *data)" },
        { "trigger": "Gtk.AccelGroup.get_is_locked", "contents": "Gtk.AccelGroup.get_is_locked()" },
        { "trigger": "Gtk.AccelGroup.get_modifier_mask", "contents": "Gtk.AccelGroup.get_modifier_mask()" },
        { "trigger": "Gtk.AccelGroup.lock", "contents": "Gtk.AccelGroup.lock()" },
        { "trigger": "Gtk.AccelGroup.query", "contents": "Gtk.AccelGroup.query(accel_key, accel_mods)" },
        { "trigger": "Gtk.AccelGroup.unlock", "contents": "Gtk.AccelGroup.unlock()" },
        { "trigger": "Gtk.AccelGroup.do_accel_changed", "contents": "Gtk.AccelGroup.do_accel_changed(keyval, modifier, accel_closure)" },
        { "trigger": "Gtk.AccelGroup.signals.accel_activate", "contents": "Gtk.AccelGroup.signals.accel_activate(accel_group, acceleratable, keyval, modifier)" },
        { "trigger": "Gtk.AccelGroup.signals.accel_changed", "contents": "Gtk.AccelGroup.signals.accel_changed(accel_group, keyval, modifier, accel_closure)" },
        { "trigger": "Gtk.AccelGroup.props.is_locked", "contents": "Gtk.AccelGroup.props.is_locked" },
        { "trigger": "Gtk.AccelGroup.props.modifier_mask", "contents": "Gtk.AccelGroup.props.modifier_mask" },
        { "trigger": "Gtk.AccelLabel", "contents": "Gtk.AccelLabel(*args, **kwargs)" },
        { "trigger": "Gtk.AccelLabel.new", "contents": "Gtk.AccelLabel.new(string)" },
        { "trigger": "Gtk.AccelLabel.get_accel", "contents": "Gtk.AccelLabel.get_accel()" },
        { "trigger": "Gtk.AccelLabel.get_accel_widget", "contents": "Gtk.AccelLabel.get_accel_widget()" },
        { "trigger": "Gtk.AccelLabel.get_accel_width", "contents": "Gtk.AccelLabel.get_accel_width()" },
        { "trigger": "Gtk.AccelLabel.refetch", "contents": "Gtk.AccelLabel.refetch()" },
        { "trigger": "Gtk.AccelLabel.set_accel", "contents": "Gtk.AccelLabel.set_accel(accelerator_key, accelerator_mods)" },
        { "trigger": "Gtk.AccelLabel.set_accel_closure", "contents": "Gtk.AccelLabel.set_accel_closure(accel_closure)" },
        { "trigger": "Gtk.AccelLabel.set_accel_widget", "contents": "Gtk.AccelLabel.set_accel_widget(accel_widget)" },
        { "trigger": "Gtk.AccelLabel.props.accel_closure", "contents": "Gtk.AccelLabel.props.accel_closure" },
        { "trigger": "Gtk.AccelLabel.props.accel_widget", "contents": "Gtk.AccelLabel.props.accel_widget" },
        { "trigger": "Gtk.AccelMap", "contents": "Gtk.AccelMap(**kwargs)" },
        { "trigger": "Gtk.AccelMap.add_entry", "contents": "Gtk.AccelMap.add_entry(accel_path, accel_key, accel_mods)" },
        { "trigger": "Gtk.AccelMap.add_filter", "contents": "Gtk.AccelMap.add_filter(filter_pattern)" },
        { "trigger": "Gtk.AccelMap.change_entry", "contents": "Gtk.AccelMap.change_entry(accel_path, accel_key, accel_mods, replace)" },
        { "trigger": "Gtk.AccelMap.foreach", "contents": "Gtk.AccelMap.foreach(data, foreach_func)" },
        { "trigger": "Gtk.AccelMap.foreach_unfiltered", "contents": "Gtk.AccelMap.foreach_unfiltered(data, foreach_func)" },
        { "trigger": "Gtk.AccelMap.get", "contents": "Gtk.AccelMap.get()" },
        { "trigger": "Gtk.AccelMap.load", "contents": "Gtk.AccelMap.load(file_name)" },
        { "trigger": "Gtk.AccelMap.load_fd", "contents": "Gtk.AccelMap.load_fd(fd)" },
        { "trigger": "Gtk.AccelMap.load_scanner", "contents": "Gtk.AccelMap.load_scanner(scanner)" },
        { "trigger": "Gtk.AccelMap.lock_path", "contents": "Gtk.AccelMap.lock_path(accel_path)" },
        { "trigger": "Gtk.AccelMap.lookup_entry", "contents": "Gtk.AccelMap.lookup_entry(accel_path)" },
        { "trigger": "Gtk.AccelMap.save", "contents": "Gtk.AccelMap.save(file_name)" },
        { "trigger": "Gtk.AccelMap.save_fd", "contents": "Gtk.AccelMap.save_fd(fd)" },
        { "trigger": "Gtk.AccelMap.unlock_path", "contents": "Gtk.AccelMap.unlock_path(accel_path)" },
        { "trigger": "Gtk.AccelMap.signals.changed", "contents": "Gtk.AccelMap.signals.changed(accel_map, accel_path, accel_key, accel_mods)" },
        { "trigger": "Gtk.Accessible", "contents": "Gtk.Accessible(**kwargs)" },
        { "trigger": "Gtk.Accessible.connect_widget_destroyed", "contents": "Gtk.Accessible.connect_widget_destroyed()" },
        { "trigger": "Gtk.Accessible.get_widget", "contents": "Gtk.Accessible.get_widget()" },
        { "trigger": "Gtk.Accessible.set_widget", "contents": "Gtk.Accessible.set_widget(widget)" },
        { "trigger": "Gtk.Accessible.do_connect_widget_destroyed", "contents": "Gtk.Accessible.do_connect_widget_destroyed()" },
        { "trigger": "Gtk.Accessible.do_widget_set", "contents": "Gtk.Accessible.do_widget_set()" },
        { "trigger": "Gtk.Accessible.do_widget_unset", "contents": "Gtk.Accessible.do_widget_unset()" },
        { "trigger": "Gtk.Accessible.props.widget", "contents": "Gtk.Accessible.props.widget" },
        { "trigger": "Gtk.ActionBar", "contents": "Gtk.ActionBar(**kwargs)" },
        { "trigger": "Gtk.ActionBar.new", "contents": "Gtk.ActionBar.new()" },
        { "trigger": "Gtk.ActionBar.get_center_widget", "contents": "Gtk.ActionBar.get_center_widget()" },
        { "trigger": "Gtk.ActionBar.pack_end", "contents": "Gtk.ActionBar.pack_end(child)" },
        { "trigger": "Gtk.ActionBar.pack_start", "contents": "Gtk.ActionBar.pack_start(child)" },
        { "trigger": "Gtk.ActionBar.set_center_widget", "contents": "Gtk.ActionBar.set_center_widget(center_widget)" },
        { "trigger": "Gtk.ActionGroup", "contents": "Gtk.ActionGroup(*args, **kwargs)" },
        { "trigger": "Gtk.ActionGroup.new", "contents": "Gtk.ActionGroup.new(name)" },
        { "trigger": "Gtk.ActionGroup.add_action", "contents": "Gtk.ActionGroup.add_action(action)" },
        { "trigger": "Gtk.ActionGroup.add_action_with_accel", "contents": "Gtk.ActionGroup.add_action_with_accel(action, accelerator)" },
        { "trigger": "Gtk.ActionGroup.add_actions", "contents": "Gtk.ActionGroup.add_actions(entries, user_data=None)" },
        { "trigger": "Gtk.ActionGroup.add_radio_actions", "contents": "Gtk.ActionGroup.add_radio_actions(entries, value=None, on_change=None, user_data=None)" },
        { "trigger": "Gtk.ActionGroup.add_toggle_actions", "contents": "Gtk.ActionGroup.add_toggle_actions(entries, user_data=None)" },
        { "trigger": "Gtk.ActionGroup.get_accel_group", "contents": "Gtk.ActionGroup.get_accel_group()" },
        { "trigger": "Gtk.ActionGroup.get_action", "contents": "Gtk.ActionGroup.get_action(action_name)" },
        { "trigger": "Gtk.ActionGroup.get_name", "contents": "Gtk.ActionGroup.get_name()" },
        { "trigger": "Gtk.ActionGroup.get_sensitive", "contents": "Gtk.ActionGroup.get_sensitive()" },
        { "trigger": "Gtk.ActionGroup.get_visible", "contents": "Gtk.ActionGroup.get_visible()" },
        { "trigger": "Gtk.ActionGroup.list_actions", "contents": "Gtk.ActionGroup.list_actions()" },
        { "trigger": "Gtk.ActionGroup.remove_action", "contents": "Gtk.ActionGroup.remove_action(action)" },
        { "trigger": "Gtk.ActionGroup.set_accel_group", "contents": "Gtk.ActionGroup.set_accel_group(accel_group)" },
        { "trigger": "Gtk.ActionGroup.set_sensitive", "contents": "Gtk.ActionGroup.set_sensitive(sensitive)" },
        { "trigger": "Gtk.ActionGroup.set_translate_func", "contents": "Gtk.ActionGroup.set_translate_func(func, *data)" },
        { "trigger": "Gtk.ActionGroup.set_translation_domain", "contents": "Gtk.ActionGroup.set_translation_domain(domain)" },
        { "trigger": "Gtk.ActionGroup.set_visible", "contents": "Gtk.ActionGroup.set_visible(visible)" },
        { "trigger": "Gtk.ActionGroup.translate_string", "contents": "Gtk.ActionGroup.translate_string(string)" },
        { "trigger": "Gtk.ActionGroup.do_get_action", "contents": "Gtk.ActionGroup.do_get_action(action_name)" },
        { "trigger": "Gtk.ActionGroup.signals.connect_proxy", "contents": "Gtk.ActionGroup.signals.connect_proxy(action_group, action, proxy)" },
        { "trigger": "Gtk.ActionGroup.signals.disconnect_proxy", "contents": "Gtk.ActionGroup.signals.disconnect_proxy(action_group, action, proxy)" },
        { "trigger": "Gtk.ActionGroup.signals.post_activate", "contents": "Gtk.ActionGroup.signals.post_activate(action_group, action)" },
        { "trigger": "Gtk.ActionGroup.signals.pre_activate", "contents": "Gtk.ActionGroup.signals.pre_activate(action_group, action)" },
        { "trigger": "Gtk.ActionGroup.props.accel_group", "contents": "Gtk.ActionGroup.props.accel_group" },
        { "trigger": "Gtk.ActionGroup.props.name", "contents": "Gtk.ActionGroup.props.name" },
        { "trigger": "Gtk.ActionGroup.props.sensitive", "contents": "Gtk.ActionGroup.props.sensitive" },
        { "trigger": "Gtk.ActionGroup.props.visible", "contents": "Gtk.ActionGroup.props.visible" },
        { "trigger": "Gtk.Action", "contents": "Gtk.Action(*args, **kwargs)" },
        { "trigger": "Gtk.Action.new", "contents": "Gtk.Action.new(name, label, tooltip, stock_id)" },
        { "trigger": "Gtk.Action.activate", "contents": "Gtk.Action.activate()" },
        { "trigger": "Gtk.Action.block_activate", "contents": "Gtk.Action.block_activate()" },
        { "trigger": "Gtk.Action.connect_accelerator", "contents": "Gtk.Action.connect_accelerator()" },
        { "trigger": "Gtk.Action.create_icon", "contents": "Gtk.Action.create_icon(icon_size)" },
        { "trigger": "Gtk.Action.create_menu", "contents": "Gtk.Action.create_menu()" },
        { "trigger": "Gtk.Action.create_menu_item", "contents": "Gtk.Action.create_menu_item()" },
        { "trigger": "Gtk.Action.create_tool_item", "contents": "Gtk.Action.create_tool_item()" },
        { "trigger": "Gtk.Action.disconnect_accelerator", "contents": "Gtk.Action.disconnect_accelerator()" },
        { "trigger": "Gtk.Action.get_accel_closure", "contents": "Gtk.Action.get_accel_closure()" },
        { "trigger": "Gtk.Action.get_accel_path", "contents": "Gtk.Action.get_accel_path()" },
        { "trigger": "Gtk.Action.get_always_show_image", "contents": "Gtk.Action.get_always_show_image()" },
        { "trigger": "Gtk.Action.get_gicon", "contents": "Gtk.Action.get_gicon()" },
        { "trigger": "Gtk.Action.get_icon_name", "contents": "Gtk.Action.get_icon_name()" },
        { "trigger": "Gtk.Action.get_is_important", "contents": "Gtk.Action.get_is_important()" },
        { "trigger": "Gtk.Action.get_label", "contents": "Gtk.Action.get_label()" },
        { "trigger": "Gtk.Action.get_name", "contents": "Gtk.Action.get_name()" },
        { "trigger": "Gtk.Action.get_proxies", "contents": "Gtk.Action.get_proxies()" },
        { "trigger": "Gtk.Action.get_sensitive", "contents": "Gtk.Action.get_sensitive()" },
        { "trigger": "Gtk.Action.get_short_label", "contents": "Gtk.Action.get_short_label()" },
        { "trigger": "Gtk.Action.get_stock_id", "contents": "Gtk.Action.get_stock_id()" },
        { "trigger": "Gtk.Action.get_tooltip", "contents": "Gtk.Action.get_tooltip()" },
        { "trigger": "Gtk.Action.get_visible", "contents": "Gtk.Action.get_visible()" },
        { "trigger": "Gtk.Action.get_visible_horizontal", "contents": "Gtk.Action.get_visible_horizontal()" },
        { "trigger": "Gtk.Action.get_visible_vertical", "contents": "Gtk.Action.get_visible_vertical()" },
        { "trigger": "Gtk.Action.is_sensitive", "contents": "Gtk.Action.is_sensitive()" },
        { "trigger": "Gtk.Action.is_visible", "contents": "Gtk.Action.is_visible()" },
        { "trigger": "Gtk.Action.set_accel_group", "contents": "Gtk.Action.set_accel_group(accel_group)" },
        { "trigger": "Gtk.Action.set_accel_path", "contents": "Gtk.Action.set_accel_path(accel_path)" },
        { "trigger": "Gtk.Action.set_always_show_image", "contents": "Gtk.Action.set_always_show_image(always_show)" },
        { "trigger": "Gtk.Action.set_gicon", "contents": "Gtk.Action.set_gicon(icon)" },
        { "trigger": "Gtk.Action.set_icon_name", "contents": "Gtk.Action.set_icon_name(icon_name)" },
        { "trigger": "Gtk.Action.set_is_important", "contents": "Gtk.Action.set_is_important(is_important)" },
        { "trigger": "Gtk.Action.set_label", "contents": "Gtk.Action.set_label(label)" },
        { "trigger": "Gtk.Action.set_sensitive", "contents": "Gtk.Action.set_sensitive(sensitive)" },
        { "trigger": "Gtk.Action.set_short_label", "contents": "Gtk.Action.set_short_label(short_label)" },
        { "trigger": "Gtk.Action.set_stock_id", "contents": "Gtk.Action.set_stock_id(stock_id)" },
        { "trigger": "Gtk.Action.set_tooltip", "contents": "Gtk.Action.set_tooltip(tooltip)" },
        { "trigger": "Gtk.Action.set_visible", "contents": "Gtk.Action.set_visible(visible)" },
        { "trigger": "Gtk.Action.set_visible_horizontal", "contents": "Gtk.Action.set_visible_horizontal(visible_horizontal)" },
        { "trigger": "Gtk.Action.set_visible_vertical", "contents": "Gtk.Action.set_visible_vertical(visible_vertical)" },
        { "trigger": "Gtk.Action.unblock_activate", "contents": "Gtk.Action.unblock_activate()" },
        { "trigger": "Gtk.Action.do_activate", "contents": "Gtk.Action.do_activate()" },
        { "trigger": "Gtk.Action.do_connect_proxy", "contents": "Gtk.Action.do_connect_proxy(proxy)" },
        { "trigger": "Gtk.Action.do_create_menu", "contents": "Gtk.Action.do_create_menu()" },
        { "trigger": "Gtk.Action.do_create_menu_item", "contents": "Gtk.Action.do_create_menu_item()" },
        { "trigger": "Gtk.Action.do_create_tool_item", "contents": "Gtk.Action.do_create_tool_item()" },
        { "trigger": "Gtk.Action.do_disconnect_proxy", "contents": "Gtk.Action.do_disconnect_proxy(proxy)" },
        { "trigger": "Gtk.Action.signals.activate", "contents": "Gtk.Action.signals.activate(action)" },
        { "trigger": "Gtk.Action.props.action_group", "contents": "Gtk.Action.props.action_group" },
        { "trigger": "Gtk.Action.props.always_show_image", "contents": "Gtk.Action.props.always_show_image" },
        { "trigger": "Gtk.Action.props.gicon", "contents": "Gtk.Action.props.gicon" },
        { "trigger": "Gtk.Action.props.hide_if_empty", "contents": "Gtk.Action.props.hide_if_empty" },
        { "trigger": "Gtk.Action.props.icon_name", "contents": "Gtk.Action.props.icon_name" },
        { "trigger": "Gtk.Action.props.is_important", "contents": "Gtk.Action.props.is_important" },
        { "trigger": "Gtk.Action.props.label", "contents": "Gtk.Action.props.label" },
        { "trigger": "Gtk.Action.props.name", "contents": "Gtk.Action.props.name" },
        { "trigger": "Gtk.Action.props.sensitive", "contents": "Gtk.Action.props.sensitive" },
        { "trigger": "Gtk.Action.props.short_label", "contents": "Gtk.Action.props.short_label" },
        { "trigger": "Gtk.Action.props.stock_id", "contents": "Gtk.Action.props.stock_id" },
        { "trigger": "Gtk.Action.props.tooltip", "contents": "Gtk.Action.props.tooltip" },
        { "trigger": "Gtk.Action.props.visible", "contents": "Gtk.Action.props.visible" },
        { "trigger": "Gtk.Action.props.visible_horizontal", "contents": "Gtk.Action.props.visible_horizontal" },
        { "trigger": "Gtk.Action.props.visible_overflown", "contents": "Gtk.Action.props.visible_overflown" },
        { "trigger": "Gtk.Action.props.visible_vertical", "contents": "Gtk.Action.props.visible_vertical" },
        { "trigger": "Gtk.Adjustment", "contents": "Gtk.Adjustment(*args, **kwargs)" },
        { "trigger": "Gtk.Adjustment.new", "contents": "Gtk.Adjustment.new(value, lower, upper, step_increment, page_increment, page_size)" },
        { "trigger": "Gtk.Adjustment.changed", "contents": "Gtk.Adjustment.changed()" },
        { "trigger": "Gtk.Adjustment.clamp_page", "contents": "Gtk.Adjustment.clamp_page(lower, upper)" },
        { "trigger": "Gtk.Adjustment.configure", "contents": "Gtk.Adjustment.configure(value, lower, upper, step_increment, page_increment, page_size)" },
        { "trigger": "Gtk.Adjustment.get_lower", "contents": "Gtk.Adjustment.get_lower()" },
        { "trigger": "Gtk.Adjustment.get_minimum_increment", "contents": "Gtk.Adjustment.get_minimum_increment()" },
        { "trigger": "Gtk.Adjustment.get_page_increment", "contents": "Gtk.Adjustment.get_page_increment()" },
        { "trigger": "Gtk.Adjustment.get_page_size", "contents": "Gtk.Adjustment.get_page_size()" },
        { "trigger": "Gtk.Adjustment.get_step_increment", "contents": "Gtk.Adjustment.get_step_increment()" },
        { "trigger": "Gtk.Adjustment.get_upper", "contents": "Gtk.Adjustment.get_upper()" },
        { "trigger": "Gtk.Adjustment.get_value", "contents": "Gtk.Adjustment.get_value()" },
        { "trigger": "Gtk.Adjustment.set_lower", "contents": "Gtk.Adjustment.set_lower(lower)" },
        { "trigger": "Gtk.Adjustment.set_page_increment", "contents": "Gtk.Adjustment.set_page_increment(page_increment)" },
        { "trigger": "Gtk.Adjustment.set_page_size", "contents": "Gtk.Adjustment.set_page_size(page_size)" },
        { "trigger": "Gtk.Adjustment.set_step_increment", "contents": "Gtk.Adjustment.set_step_increment(step_increment)" },
        { "trigger": "Gtk.Adjustment.set_upper", "contents": "Gtk.Adjustment.set_upper(upper)" },
        { "trigger": "Gtk.Adjustment.set_value", "contents": "Gtk.Adjustment.set_value(value)" },
        { "trigger": "Gtk.Adjustment.value_changed", "contents": "Gtk.Adjustment.value_changed()" },
        { "trigger": "Gtk.Adjustment.do_changed", "contents": "Gtk.Adjustment.do_changed()" },
        { "trigger": "Gtk.Adjustment.do_value_changed", "contents": "Gtk.Adjustment.do_value_changed()" },
        { "trigger": "Gtk.Adjustment.signals.changed", "contents": "Gtk.Adjustment.signals.changed(adjustment)" },
        { "trigger": "Gtk.Adjustment.signals.value_changed", "contents": "Gtk.Adjustment.signals.value_changed(adjustment)" },
        { "trigger": "Gtk.Adjustment.props.lower", "contents": "Gtk.Adjustment.props.lower" },
        { "trigger": "Gtk.Adjustment.props.page_increment", "contents": "Gtk.Adjustment.props.page_increment" },
        { "trigger": "Gtk.Adjustment.props.page_size", "contents": "Gtk.Adjustment.props.page_size" },
        { "trigger": "Gtk.Adjustment.props.step_increment", "contents": "Gtk.Adjustment.props.step_increment" },
        { "trigger": "Gtk.Adjustment.props.upper", "contents": "Gtk.Adjustment.props.upper" },
        { "trigger": "Gtk.Adjustment.props.value", "contents": "Gtk.Adjustment.props.value" },
        { "trigger": "Gtk.Alignment", "contents": "Gtk.Alignment(**kwargs)" },
        { "trigger": "Gtk.Alignment.new", "contents": "Gtk.Alignment.new(xalign, yalign, xscale, yscale)" },
        { "trigger": "Gtk.Alignment.get_padding", "contents": "Gtk.Alignment.get_padding()" },
        { "trigger": "Gtk.Alignment.set", "contents": "Gtk.Alignment.set(xalign, yalign, xscale, yscale)" },
        { "trigger": "Gtk.Alignment.set_padding", "contents": "Gtk.Alignment.set_padding(padding_top, padding_bottom, padding_left, padding_right)" },
        { "trigger": "Gtk.Alignment.props.bottom_padding", "contents": "Gtk.Alignment.props.bottom_padding" },
        { "trigger": "Gtk.Alignment.props.left_padding", "contents": "Gtk.Alignment.props.left_padding" },
        { "trigger": "Gtk.Alignment.props.right_padding", "contents": "Gtk.Alignment.props.right_padding" },
        { "trigger": "Gtk.Alignment.props.top_padding", "contents": "Gtk.Alignment.props.top_padding" },
        { "trigger": "Gtk.Alignment.props.xalign", "contents": "Gtk.Alignment.props.xalign" },
        { "trigger": "Gtk.Alignment.props.xscale", "contents": "Gtk.Alignment.props.xscale" },
        { "trigger": "Gtk.Alignment.props.yalign", "contents": "Gtk.Alignment.props.yalign" },
        { "trigger": "Gtk.Alignment.props.yscale", "contents": "Gtk.Alignment.props.yscale" },
        { "trigger": "Gtk.AppChooserButton", "contents": "Gtk.AppChooserButton(**kwargs)" },
        { "trigger": "Gtk.AppChooserButton.new", "contents": "Gtk.AppChooserButton.new(content_type)" },
        { "trigger": "Gtk.AppChooserButton.append_custom_item", "contents": "Gtk.AppChooserButton.append_custom_item(name, label, icon)" },
        { "trigger": "Gtk.AppChooserButton.append_separator", "contents": "Gtk.AppChooserButton.append_separator()" },
        { "trigger": "Gtk.AppChooserButton.get_heading", "contents": "Gtk.AppChooserButton.get_heading()" },
        { "trigger": "Gtk.AppChooserButton.get_show_default_item", "contents": "Gtk.AppChooserButton.get_show_default_item()" },
        { "trigger": "Gtk.AppChooserButton.get_show_dialog_item", "contents": "Gtk.AppChooserButton.get_show_dialog_item()" },
        { "trigger": "Gtk.AppChooserButton.set_active_custom_item", "contents": "Gtk.AppChooserButton.set_active_custom_item(name)" },
        { "trigger": "Gtk.AppChooserButton.set_heading", "contents": "Gtk.AppChooserButton.set_heading(heading)" },
        { "trigger": "Gtk.AppChooserButton.set_show_default_item", "contents": "Gtk.AppChooserButton.set_show_default_item(setting)" },
        { "trigger": "Gtk.AppChooserButton.set_show_dialog_item", "contents": "Gtk.AppChooserButton.set_show_dialog_item(setting)" },
        { "trigger": "Gtk.AppChooserButton.do_custom_item_activated", "contents": "Gtk.AppChooserButton.do_custom_item_activated(item_name)" },
        { "trigger": "Gtk.AppChooserButton.signals.custom_item_activated", "contents": "Gtk.AppChooserButton.signals.custom_item_activated(app_chooser_button, item_name)" },
        { "trigger": "Gtk.AppChooserButton.props.heading", "contents": "Gtk.AppChooserButton.props.heading" },
        { "trigger": "Gtk.AppChooserButton.props.show_default_item", "contents": "Gtk.AppChooserButton.props.show_default_item" },
        { "trigger": "Gtk.AppChooserButton.props.show_dialog_item", "contents": "Gtk.AppChooserButton.props.show_dialog_item" },
        { "trigger": "Gtk.AppChooserDialog", "contents": "Gtk.AppChooserDialog(*args, **kwargs)" },
        { "trigger": "Gtk.AppChooserDialog.new", "contents": "Gtk.AppChooserDialog.new(parent, flags, file)" },
        { "trigger": "Gtk.AppChooserDialog.new_for_content_type", "contents": "Gtk.AppChooserDialog.new_for_content_type(parent, flags, content_type)" },
        { "trigger": "Gtk.AppChooserDialog.get_heading", "contents": "Gtk.AppChooserDialog.get_heading()" },
        { "trigger": "Gtk.AppChooserDialog.get_widget", "contents": "Gtk.AppChooserDialog.get_widget()" },
        { "trigger": "Gtk.AppChooserDialog.set_heading", "contents": "Gtk.AppChooserDialog.set_heading(heading)" },
        { "trigger": "Gtk.AppChooserDialog.props.gfile", "contents": "Gtk.AppChooserDialog.props.gfile" },
        { "trigger": "Gtk.AppChooserDialog.props.heading", "contents": "Gtk.AppChooserDialog.props.heading" },
        { "trigger": "Gtk.AppChooserWidget", "contents": "Gtk.AppChooserWidget(*args, **kwargs)" },
        { "trigger": "Gtk.AppChooserWidget.new", "contents": "Gtk.AppChooserWidget.new(content_type)" },
        { "trigger": "Gtk.AppChooserWidget.get_default_text", "contents": "Gtk.AppChooserWidget.get_default_text()" },
        { "trigger": "Gtk.AppChooserWidget.get_show_all", "contents": "Gtk.AppChooserWidget.get_show_all()" },
        { "trigger": "Gtk.AppChooserWidget.get_show_default", "contents": "Gtk.AppChooserWidget.get_show_default()" },
        { "trigger": "Gtk.AppChooserWidget.get_show_fallback", "contents": "Gtk.AppChooserWidget.get_show_fallback()" },
        { "trigger": "Gtk.AppChooserWidget.get_show_other", "contents": "Gtk.AppChooserWidget.get_show_other()" },
        { "trigger": "Gtk.AppChooserWidget.get_show_recommended", "contents": "Gtk.AppChooserWidget.get_show_recommended()" },
        { "trigger": "Gtk.AppChooserWidget.set_default_text", "contents": "Gtk.AppChooserWidget.set_default_text(text)" },
        { "trigger": "Gtk.AppChooserWidget.set_show_all", "contents": "Gtk.AppChooserWidget.set_show_all(setting)" },
        { "trigger": "Gtk.AppChooserWidget.set_show_default", "contents": "Gtk.AppChooserWidget.set_show_default(setting)" },
        { "trigger": "Gtk.AppChooserWidget.set_show_fallback", "contents": "Gtk.AppChooserWidget.set_show_fallback(setting)" },
        { "trigger": "Gtk.AppChooserWidget.set_show_other", "contents": "Gtk.AppChooserWidget.set_show_other(setting)" },
        { "trigger": "Gtk.AppChooserWidget.set_show_recommended", "contents": "Gtk.AppChooserWidget.set_show_recommended(setting)" },
        { "trigger": "Gtk.AppChooserWidget.do_application_activated", "contents": "Gtk.AppChooserWidget.do_application_activated(app_info)" },
        { "trigger": "Gtk.AppChooserWidget.do_application_selected", "contents": "Gtk.AppChooserWidget.do_application_selected(app_info)" },
        { "trigger": "Gtk.AppChooserWidget.do_populate_popup", "contents": "Gtk.AppChooserWidget.do_populate_popup(menu, app_info)" },
        { "trigger": "Gtk.AppChooserWidget.signals.application_activated", "contents": "Gtk.AppChooserWidget.signals.application_activated(app_chooser_widget, application)" },
        { "trigger": "Gtk.AppChooserWidget.signals.application_selected", "contents": "Gtk.AppChooserWidget.signals.application_selected(app_chooser_widget, application)" },
        { "trigger": "Gtk.AppChooserWidget.signals.populate_popup", "contents": "Gtk.AppChooserWidget.signals.populate_popup(app_chooser_widget, menu, application)" },
        { "trigger": "Gtk.AppChooserWidget.props.default_text", "contents": "Gtk.AppChooserWidget.props.default_text" },
        { "trigger": "Gtk.AppChooserWidget.props.show_all", "contents": "Gtk.AppChooserWidget.props.show_all" },
        { "trigger": "Gtk.AppChooserWidget.props.show_default", "contents": "Gtk.AppChooserWidget.props.show_default" },
        { "trigger": "Gtk.AppChooserWidget.props.show_fallback", "contents": "Gtk.AppChooserWidget.props.show_fallback" },
        { "trigger": "Gtk.AppChooserWidget.props.show_other", "contents": "Gtk.AppChooserWidget.props.show_other" },
        { "trigger": "Gtk.AppChooserWidget.props.show_recommended", "contents": "Gtk.AppChooserWidget.props.show_recommended" },
        { "trigger": "Gtk.Application", "contents": "Gtk.Application(**kwargs)" },
        { "trigger": "Gtk.Application.new", "contents": "Gtk.Application.new(application_id, flags)" },
        { "trigger": "Gtk.Application.add_accelerator", "contents": "Gtk.Application.add_accelerator(accelerator, action_name, parameter)" },
        { "trigger": "Gtk.Application.add_window", "contents": "Gtk.Application.add_window(window)" },
        { "trigger": "Gtk.Application.get_accels_for_action", "contents": "Gtk.Application.get_accels_for_action(detailed_action_name)" },
        { "trigger": "Gtk.Application.get_actions_for_accel", "contents": "Gtk.Application.get_actions_for_accel(accel)" },
        { "trigger": "Gtk.Application.get_active_window", "contents": "Gtk.Application.get_active_window()" },
        { "trigger": "Gtk.Application.get_app_menu", "contents": "Gtk.Application.get_app_menu()" },
        { "trigger": "Gtk.Application.get_menu_by_id", "contents": "Gtk.Application.get_menu_by_id(id)" },
        { "trigger": "Gtk.Application.get_menubar", "contents": "Gtk.Application.get_menubar()" },
        { "trigger": "Gtk.Application.get_window_by_id", "contents": "Gtk.Application.get_window_by_id(id)" },
        { "trigger": "Gtk.Application.get_windows", "contents": "Gtk.Application.get_windows()" },
        { "trigger": "Gtk.Application.inhibit", "contents": "Gtk.Application.inhibit(window, flags, reason)" },
        { "trigger": "Gtk.Application.is_inhibited", "contents": "Gtk.Application.is_inhibited(flags)" },
        { "trigger": "Gtk.Application.list_action_descriptions", "contents": "Gtk.Application.list_action_descriptions()" },
        { "trigger": "Gtk.Application.prefers_app_menu", "contents": "Gtk.Application.prefers_app_menu()" },
        { "trigger": "Gtk.Application.remove_accelerator", "contents": "Gtk.Application.remove_accelerator(action_name, parameter)" },
        { "trigger": "Gtk.Application.remove_window", "contents": "Gtk.Application.remove_window(window)" },
        { "trigger": "Gtk.Application.set_accels_for_action", "contents": "Gtk.Application.set_accels_for_action(detailed_action_name, accels)" },
        { "trigger": "Gtk.Application.set_app_menu", "contents": "Gtk.Application.set_app_menu(app_menu)" },
        { "trigger": "Gtk.Application.set_menubar", "contents": "Gtk.Application.set_menubar(menubar)" },
        { "trigger": "Gtk.Application.uninhibit", "contents": "Gtk.Application.uninhibit(cookie)" },
        { "trigger": "Gtk.Application.do_window_added", "contents": "Gtk.Application.do_window_added(window)" },
        { "trigger": "Gtk.Application.do_window_removed", "contents": "Gtk.Application.do_window_removed(window)" },
        { "trigger": "Gtk.Application.signals.window_added", "contents": "Gtk.Application.signals.window_added(application, window)" },
        { "trigger": "Gtk.Application.signals.window_removed", "contents": "Gtk.Application.signals.window_removed(application, window)" },
        { "trigger": "Gtk.Application.props.active_window", "contents": "Gtk.Application.props.active_window" },
        { "trigger": "Gtk.Application.props.app_menu", "contents": "Gtk.Application.props.app_menu" },
        { "trigger": "Gtk.Application.props.menubar", "contents": "Gtk.Application.props.menubar" },
        { "trigger": "Gtk.Application.props.register_session", "contents": "Gtk.Application.props.register_session" },
        { "trigger": "Gtk.ApplicationWindow", "contents": "Gtk.ApplicationWindow(*args, **kwargs)" },
        { "trigger": "Gtk.ApplicationWindow.new", "contents": "Gtk.ApplicationWindow.new(application)" },
        { "trigger": "Gtk.ApplicationWindow.get_id", "contents": "Gtk.ApplicationWindow.get_id()" },
        { "trigger": "Gtk.ApplicationWindow.get_show_menubar", "contents": "Gtk.ApplicationWindow.get_show_menubar()" },
        { "trigger": "Gtk.ApplicationWindow.set_show_menubar", "contents": "Gtk.ApplicationWindow.set_show_menubar(show_menubar)" },
        { "trigger": "Gtk.ApplicationWindow.props.show_menubar", "contents": "Gtk.ApplicationWindow.props.show_menubar" },
        { "trigger": "Gtk.ArrowAccessible", "contents": "Gtk.ArrowAccessible(**kwargs)" },
        { "trigger": "Gtk.Arrow", "contents": "Gtk.Arrow(*args, **kwargs)" },
        { "trigger": "Gtk.Arrow.new", "contents": "Gtk.Arrow.new(arrow_type, shadow_type)" },
        { "trigger": "Gtk.Arrow.set", "contents": "Gtk.Arrow.set(arrow_type, shadow_type)" },
        { "trigger": "Gtk.Arrow.props.arrow_type", "contents": "Gtk.Arrow.props.arrow_type" },
        { "trigger": "Gtk.Arrow.props.shadow_type", "contents": "Gtk.Arrow.props.shadow_type" },
        { "trigger": "Gtk.AspectFrame", "contents": "Gtk.AspectFrame(**kwargs)" },
        { "trigger": "Gtk.AspectFrame.new", "contents": "Gtk.AspectFrame.new(label, xalign, yalign, ratio, obey_child)" },
        { "trigger": "Gtk.AspectFrame.set", "contents": "Gtk.AspectFrame.set(xalign, yalign, ratio, obey_child)" },
        { "trigger": "Gtk.AspectFrame.props.obey_child", "contents": "Gtk.AspectFrame.props.obey_child" },
        { "trigger": "Gtk.AspectFrame.props.ratio", "contents": "Gtk.AspectFrame.props.ratio" },
        { "trigger": "Gtk.AspectFrame.props.xalign", "contents": "Gtk.AspectFrame.props.xalign" },
        { "trigger": "Gtk.AspectFrame.props.yalign", "contents": "Gtk.AspectFrame.props.yalign" },
        { "trigger": "Gtk.Assistant", "contents": "Gtk.Assistant(*args, **kwargs)" },
        { "trigger": "Gtk.Assistant.new", "contents": "Gtk.Assistant.new()" },
        { "trigger": "Gtk.Assistant.add_action_widget", "contents": "Gtk.Assistant.add_action_widget(child)" },
        { "trigger": "Gtk.Assistant.append_page", "contents": "Gtk.Assistant.append_page(page)" },
        { "trigger": "Gtk.Assistant.commit", "contents": "Gtk.Assistant.commit()" },
        { "trigger": "Gtk.Assistant.get_current_page", "contents": "Gtk.Assistant.get_current_page()" },
        { "trigger": "Gtk.Assistant.get_n_pages", "contents": "Gtk.Assistant.get_n_pages()" },
        { "trigger": "Gtk.Assistant.get_nth_page", "contents": "Gtk.Assistant.get_nth_page(page_num)" },
        { "trigger": "Gtk.Assistant.get_page_complete", "contents": "Gtk.Assistant.get_page_complete(page)" },
        { "trigger": "Gtk.Assistant.get_page_has_padding", "contents": "Gtk.Assistant.get_page_has_padding(page)" },
        { "trigger": "Gtk.Assistant.get_page_header_image", "contents": "Gtk.Assistant.get_page_header_image(page)" },
        { "trigger": "Gtk.Assistant.get_page_side_image", "contents": "Gtk.Assistant.get_page_side_image(page)" },
        { "trigger": "Gtk.Assistant.get_page_title", "contents": "Gtk.Assistant.get_page_title(page)" },
        { "trigger": "Gtk.Assistant.get_page_type", "contents": "Gtk.Assistant.get_page_type(page)" },
        { "trigger": "Gtk.Assistant.insert_page", "contents": "Gtk.Assistant.insert_page(page, position)" },
        { "trigger": "Gtk.Assistant.next_page", "contents": "Gtk.Assistant.next_page()" },
        { "trigger": "Gtk.Assistant.prepend_page", "contents": "Gtk.Assistant.prepend_page(page)" },
        { "trigger": "Gtk.Assistant.previous_page", "contents": "Gtk.Assistant.previous_page()" },
        { "trigger": "Gtk.Assistant.remove_action_widget", "contents": "Gtk.Assistant.remove_action_widget(child)" },
        { "trigger": "Gtk.Assistant.remove_page", "contents": "Gtk.Assistant.remove_page(page_num)" },
        { "trigger": "Gtk.Assistant.set_current_page", "contents": "Gtk.Assistant.set_current_page(page_num)" },
        { "trigger": "Gtk.Assistant.set_forward_page_func", "contents": "Gtk.Assistant.set_forward_page_func(page_func, *data)" },
        { "trigger": "Gtk.Assistant.set_page_complete", "contents": "Gtk.Assistant.set_page_complete(page, complete)" },
        { "trigger": "Gtk.Assistant.set_page_has_padding", "contents": "Gtk.Assistant.set_page_has_padding(page, has_padding)" },
        { "trigger": "Gtk.Assistant.set_page_header_image", "contents": "Gtk.Assistant.set_page_header_image(page, pixbuf)" },
        { "trigger": "Gtk.Assistant.set_page_side_image", "contents": "Gtk.Assistant.set_page_side_image(page, pixbuf)" },
        { "trigger": "Gtk.Assistant.set_page_title", "contents": "Gtk.Assistant.set_page_title(page, title)" },
        { "trigger": "Gtk.Assistant.set_page_type", "contents": "Gtk.Assistant.set_page_type(page, type)" },
        { "trigger": "Gtk.Assistant.update_buttons_state", "contents": "Gtk.Assistant.update_buttons_state()" },
        { "trigger": "Gtk.Assistant.do_apply", "contents": "Gtk.Assistant.do_apply()" },
        { "trigger": "Gtk.Assistant.do_cancel", "contents": "Gtk.Assistant.do_cancel()" },
        { "trigger": "Gtk.Assistant.do_close", "contents": "Gtk.Assistant.do_close()" },
        { "trigger": "Gtk.Assistant.do_prepare", "contents": "Gtk.Assistant.do_prepare(page)" },
        { "trigger": "Gtk.Assistant.signals.apply", "contents": "Gtk.Assistant.signals.apply(assistant)" },
        { "trigger": "Gtk.Assistant.signals.cancel", "contents": "Gtk.Assistant.signals.cancel(assistant)" },
        { "trigger": "Gtk.Assistant.signals.close", "contents": "Gtk.Assistant.signals.close(assistant)" },
        { "trigger": "Gtk.Assistant.signals.escape", "contents": "Gtk.Assistant.signals.escape(assistant)" },
        { "trigger": "Gtk.Assistant.signals.prepare", "contents": "Gtk.Assistant.signals.prepare(assistant, page)" },
        { "trigger": "Gtk.Assistant.props.use_header_bar", "contents": "Gtk.Assistant.props.use_header_bar" },
        { "trigger": "Gtk.Bin", "contents": "Gtk.Bin(**kwargs)" },
        { "trigger": "Gtk.Bin.get_child", "contents": "Gtk.Bin.get_child()" },
        { "trigger": "Gtk.BooleanCellAccessible", "contents": "Gtk.BooleanCellAccessible(**kwargs)" },
        { "trigger": "Gtk.Box", "contents": "Gtk.Box(*args, **kwargs)" },
        { "trigger": "Gtk.Box.new", "contents": "Gtk.Box.new(orientation, spacing)" },
        { "trigger": "Gtk.Box.get_baseline_position", "contents": "Gtk.Box.get_baseline_position()" },
        { "trigger": "Gtk.Box.get_center_widget", "contents": "Gtk.Box.get_center_widget()" },
        { "trigger": "Gtk.Box.get_homogeneous", "contents": "Gtk.Box.get_homogeneous()" },
        { "trigger": "Gtk.Box.get_spacing", "contents": "Gtk.Box.get_spacing()" },
        { "trigger": "Gtk.Box.pack_end", "contents": "Gtk.Box.pack_end(child, expand, fill, padding)" },
        { "trigger": "Gtk.Box.pack_start", "contents": "Gtk.Box.pack_start(child, expand, fill, padding)" },
        { "trigger": "Gtk.Box.query_child_packing", "contents": "Gtk.Box.query_child_packing(child)" },
        { "trigger": "Gtk.Box.reorder_child", "contents": "Gtk.Box.reorder_child(child, position)" },
        { "trigger": "Gtk.Box.set_baseline_position", "contents": "Gtk.Box.set_baseline_position(position)" },
        { "trigger": "Gtk.Box.set_center_widget", "contents": "Gtk.Box.set_center_widget(widget)" },
        { "trigger": "Gtk.Box.set_child_packing", "contents": "Gtk.Box.set_child_packing(child, expand, fill, padding, pack_type)" },
        { "trigger": "Gtk.Box.set_homogeneous", "contents": "Gtk.Box.set_homogeneous(homogeneous)" },
        { "trigger": "Gtk.Box.set_spacing", "contents": "Gtk.Box.set_spacing(spacing)" },
        { "trigger": "Gtk.Box.props.baseline_position", "contents": "Gtk.Box.props.baseline_position" },
        { "trigger": "Gtk.Box.props.homogeneous", "contents": "Gtk.Box.props.homogeneous" },
        { "trigger": "Gtk.Box.props.spacing", "contents": "Gtk.Box.props.spacing" },
        { "trigger": "Gtk.Builder", "contents": "Gtk.Builder(**kwargs)" },
        { "trigger": "Gtk.Builder.new", "contents": "Gtk.Builder.new()" },
        { "trigger": "Gtk.Builder.new_from_file", "contents": "Gtk.Builder.new_from_file(filename)" },
        { "trigger": "Gtk.Builder.new_from_resource", "contents": "Gtk.Builder.new_from_resource(resource_path)" },
        { "trigger": "Gtk.Builder.new_from_string", "contents": "Gtk.Builder.new_from_string(string, length)" },
        { "trigger": "Gtk.Builder.add_callback_symbol", "contents": "Gtk.Builder.add_callback_symbol(callback_name, callback_symbol)" },
        { "trigger": "Gtk.Builder.add_from_file", "contents": "Gtk.Builder.add_from_file(filename)" },
        { "trigger": "Gtk.Builder.add_from_resource", "contents": "Gtk.Builder.add_from_resource(resource_path)" },
        { "trigger": "Gtk.Builder.add_from_string", "contents": "Gtk.Builder.add_from_string(buffer, length=-1)" },
        { "trigger": "Gtk.Builder.add_objects_from_file", "contents": "Gtk.Builder.add_objects_from_file(filename, object_ids)" },
        { "trigger": "Gtk.Builder.add_objects_from_resource", "contents": "Gtk.Builder.add_objects_from_resource(resource_path, object_ids)" },
        { "trigger": "Gtk.Builder.add_objects_from_string", "contents": "Gtk.Builder.add_objects_from_string(buffer, object_ids)" },
        { "trigger": "Gtk.Builder.connect_signals", "contents": "Gtk.Builder.connect_signals(self, obj_or_map)" },
        { "trigger": "Gtk.Builder.connect_signals_full", "contents": "Gtk.Builder.connect_signals_full(func, *user_data)" },
        { "trigger": "Gtk.Builder.expose_object", "contents": "Gtk.Builder.expose_object(name, object)" },
        { "trigger": "Gtk.Builder.get_application", "contents": "Gtk.Builder.get_application()" },
        { "trigger": "Gtk.Builder.get_object", "contents": "Gtk.Builder.get_object(name)" },
        { "trigger": "Gtk.Builder.get_objects", "contents": "Gtk.Builder.get_objects()" },
        { "trigger": "Gtk.Builder.get_translation_domain", "contents": "Gtk.Builder.get_translation_domain()" },
        { "trigger": "Gtk.Builder.get_type_from_name", "contents": "Gtk.Builder.get_type_from_name(type_name)" },
        { "trigger": "Gtk.Builder.set_application", "contents": "Gtk.Builder.set_application(application)" },
        { "trigger": "Gtk.Builder.set_translation_domain", "contents": "Gtk.Builder.set_translation_domain(domain)" },
        { "trigger": "Gtk.Builder.value_from_string", "contents": "Gtk.Builder.value_from_string(pspec, string)" },
        { "trigger": "Gtk.Builder.value_from_string_type", "contents": "Gtk.Builder.value_from_string_type(type, string)" },
        { "trigger": "Gtk.Builder.do_get_type_from_name", "contents": "Gtk.Builder.do_get_type_from_name(type_name)" },
        { "trigger": "Gtk.Builder.props.translation_domain", "contents": "Gtk.Builder.props.translation_domain" },
        { "trigger": "Gtk.ButtonAccessible", "contents": "Gtk.ButtonAccessible(**kwargs)" },
        { "trigger": "Gtk.ButtonBox", "contents": "Gtk.ButtonBox(*args, **kwargs)" },
        { "trigger": "Gtk.ButtonBox.new", "contents": "Gtk.ButtonBox.new(orientation)" },
        { "trigger": "Gtk.ButtonBox.get_child_non_homogeneous", "contents": "Gtk.ButtonBox.get_child_non_homogeneous(child)" },
        { "trigger": "Gtk.ButtonBox.get_child_secondary", "contents": "Gtk.ButtonBox.get_child_secondary(child)" },
        { "trigger": "Gtk.ButtonBox.get_layout", "contents": "Gtk.ButtonBox.get_layout()" },
        { "trigger": "Gtk.ButtonBox.set_child_non_homogeneous", "contents": "Gtk.ButtonBox.set_child_non_homogeneous(child, non_homogeneous)" },
        { "trigger": "Gtk.ButtonBox.set_child_secondary", "contents": "Gtk.ButtonBox.set_child_secondary(child, is_secondary)" },
        { "trigger": "Gtk.ButtonBox.set_layout", "contents": "Gtk.ButtonBox.set_layout(layout_style)" },
        { "trigger": "Gtk.ButtonBox.props.layout_style", "contents": "Gtk.ButtonBox.props.layout_style" },
        { "trigger": "Gtk.Button", "contents": "Gtk.Button(*args, **kwargs)" },
        { "trigger": "Gtk.Button.new", "contents": "Gtk.Button.new()" },
        { "trigger": "Gtk.Button.new_from_icon_name", "contents": "Gtk.Button.new_from_icon_name(icon_name, size)" },
        { "trigger": "Gtk.Button.new_from_stock", "contents": "Gtk.Button.new_from_stock(stock_id)" },
        { "trigger": "Gtk.Button.new_with_label", "contents": "Gtk.Button.new_with_label(label)" },
        { "trigger": "Gtk.Button.new_with_mnemonic", "contents": "Gtk.Button.new_with_mnemonic(label)" },
        { "trigger": "Gtk.Button.clicked", "contents": "Gtk.Button.clicked()" },
        { "trigger": "Gtk.Button.enter", "contents": "Gtk.Button.enter()" },
        { "trigger": "Gtk.Button.get_alignment", "contents": "Gtk.Button.get_alignment()" },
        { "trigger": "Gtk.Button.get_always_show_image", "contents": "Gtk.Button.get_always_show_image()" },
        { "trigger": "Gtk.Button.get_event_window", "contents": "Gtk.Button.get_event_window()" },
        { "trigger": "Gtk.Button.get_focus_on_click", "contents": "Gtk.Button.get_focus_on_click()" },
        { "trigger": "Gtk.Button.get_image", "contents": "Gtk.Button.get_image()" },
        { "trigger": "Gtk.Button.get_image_position", "contents": "Gtk.Button.get_image_position()" },
        { "trigger": "Gtk.Button.get_label", "contents": "Gtk.Button.get_label()" },
        { "trigger": "Gtk.Button.get_relief", "contents": "Gtk.Button.get_relief()" },
        { "trigger": "Gtk.Button.get_use_stock", "contents": "Gtk.Button.get_use_stock()" },
        { "trigger": "Gtk.Button.get_use_underline", "contents": "Gtk.Button.get_use_underline()" },
        { "trigger": "Gtk.Button.leave", "contents": "Gtk.Button.leave()" },
        { "trigger": "Gtk.Button.pressed", "contents": "Gtk.Button.pressed()" },
        { "trigger": "Gtk.Button.released", "contents": "Gtk.Button.released()" },
        { "trigger": "Gtk.Button.set_alignment", "contents": "Gtk.Button.set_alignment(xalign, yalign)" },
        { "trigger": "Gtk.Button.set_always_show_image", "contents": "Gtk.Button.set_always_show_image(always_show)" },
        { "trigger": "Gtk.Button.set_focus_on_click", "contents": "Gtk.Button.set_focus_on_click(focus_on_click)" },
        { "trigger": "Gtk.Button.set_image", "contents": "Gtk.Button.set_image(image)" },
        { "trigger": "Gtk.Button.set_image_position", "contents": "Gtk.Button.set_image_position(position)" },
        { "trigger": "Gtk.Button.set_label", "contents": "Gtk.Button.set_label(label)" },
        { "trigger": "Gtk.Button.set_relief", "contents": "Gtk.Button.set_relief(relief)" },
        { "trigger": "Gtk.Button.set_use_stock", "contents": "Gtk.Button.set_use_stock(use_stock)" },
        { "trigger": "Gtk.Button.set_use_underline", "contents": "Gtk.Button.set_use_underline(use_underline)" },
        { "trigger": "Gtk.Button.do_activate", "contents": "Gtk.Button.do_activate()" },
        { "trigger": "Gtk.Button.do_clicked", "contents": "Gtk.Button.do_clicked()" },
        { "trigger": "Gtk.Button.do_enter", "contents": "Gtk.Button.do_enter()" },
        { "trigger": "Gtk.Button.do_leave", "contents": "Gtk.Button.do_leave()" },
        { "trigger": "Gtk.Button.do_pressed", "contents": "Gtk.Button.do_pressed()" },
        { "trigger": "Gtk.Button.do_released", "contents": "Gtk.Button.do_released()" },
        { "trigger": "Gtk.Button.signals.activate", "contents": "Gtk.Button.signals.activate(button)" },
        { "trigger": "Gtk.Button.signals.clicked", "contents": "Gtk.Button.signals.clicked(button)" },
        { "trigger": "Gtk.Button.signals.enter", "contents": "Gtk.Button.signals.enter(button)" },
        { "trigger": "Gtk.Button.signals.leave", "contents": "Gtk.Button.signals.leave(button)" },
        { "trigger": "Gtk.Button.signals.pressed", "contents": "Gtk.Button.signals.pressed(button)" },
        { "trigger": "Gtk.Button.signals.released", "contents": "Gtk.Button.signals.released(button)" },
        { "trigger": "Gtk.Button.props.always_show_image", "contents": "Gtk.Button.props.always_show_image" },
        { "trigger": "Gtk.Button.props.focus_on_click", "contents": "Gtk.Button.props.focus_on_click" },
        { "trigger": "Gtk.Button.props.image", "contents": "Gtk.Button.props.image" },
        { "trigger": "Gtk.Button.props.image_position", "contents": "Gtk.Button.props.image_position" },
        { "trigger": "Gtk.Button.props.label", "contents": "Gtk.Button.props.label" },
        { "trigger": "Gtk.Button.props.relief", "contents": "Gtk.Button.props.relief" },
        { "trigger": "Gtk.Button.props.use_stock", "contents": "Gtk.Button.props.use_stock" },
        { "trigger": "Gtk.Button.props.use_underline", "contents": "Gtk.Button.props.use_underline" },
        { "trigger": "Gtk.Button.props.xalign", "contents": "Gtk.Button.props.xalign" },
        { "trigger": "Gtk.Button.props.yalign", "contents": "Gtk.Button.props.yalign" },
        { "trigger": "Gtk.Calendar", "contents": "Gtk.Calendar(**kwargs)" },
        { "trigger": "Gtk.Calendar.new", "contents": "Gtk.Calendar.new()" },
        { "trigger": "Gtk.Calendar.clear_marks", "contents": "Gtk.Calendar.clear_marks()" },
        { "trigger": "Gtk.Calendar.get_date", "contents": "Gtk.Calendar.get_date()" },
        { "trigger": "Gtk.Calendar.get_day_is_marked", "contents": "Gtk.Calendar.get_day_is_marked(day)" },
        { "trigger": "Gtk.Calendar.get_detail_height_rows", "contents": "Gtk.Calendar.get_detail_height_rows()" },
        { "trigger": "Gtk.Calendar.get_detail_width_chars", "contents": "Gtk.Calendar.get_detail_width_chars()" },
        { "trigger": "Gtk.Calendar.get_display_options", "contents": "Gtk.Calendar.get_display_options()" },
        { "trigger": "Gtk.Calendar.mark_day", "contents": "Gtk.Calendar.mark_day(day)" },
        { "trigger": "Gtk.Calendar.select_day", "contents": "Gtk.Calendar.select_day(day)" },
        { "trigger": "Gtk.Calendar.select_month", "contents": "Gtk.Calendar.select_month(month, year)" },
        { "trigger": "Gtk.Calendar.set_detail_func", "contents": "Gtk.Calendar.set_detail_func(func, *data)" },
        { "trigger": "Gtk.Calendar.set_detail_height_rows", "contents": "Gtk.Calendar.set_detail_height_rows(rows)" },
        { "trigger": "Gtk.Calendar.set_detail_width_chars", "contents": "Gtk.Calendar.set_detail_width_chars(chars)" },
        { "trigger": "Gtk.Calendar.set_display_options", "contents": "Gtk.Calendar.set_display_options(flags)" },
        { "trigger": "Gtk.Calendar.unmark_day", "contents": "Gtk.Calendar.unmark_day(day)" },
        { "trigger": "Gtk.Calendar.do_day_selected", "contents": "Gtk.Calendar.do_day_selected()" },
        { "trigger": "Gtk.Calendar.do_day_selected_double_click", "contents": "Gtk.Calendar.do_day_selected_double_click()" },
        { "trigger": "Gtk.Calendar.do_month_changed", "contents": "Gtk.Calendar.do_month_changed()" },
        { "trigger": "Gtk.Calendar.do_next_month", "contents": "Gtk.Calendar.do_next_month()" },
        { "trigger": "Gtk.Calendar.do_next_year", "contents": "Gtk.Calendar.do_next_year()" },
        { "trigger": "Gtk.Calendar.do_prev_month", "contents": "Gtk.Calendar.do_prev_month()" },
        { "trigger": "Gtk.Calendar.do_prev_year", "contents": "Gtk.Calendar.do_prev_year()" },
        { "trigger": "Gtk.Calendar.signals.day_selected", "contents": "Gtk.Calendar.signals.day_selected(calendar)" },
        { "trigger": "Gtk.Calendar.signals.day_selected_double_click", "contents": "Gtk.Calendar.signals.day_selected_double_click(calendar)" },
        { "trigger": "Gtk.Calendar.signals.month_changed", "contents": "Gtk.Calendar.signals.month_changed(calendar)" },
        { "trigger": "Gtk.Calendar.signals.next_month", "contents": "Gtk.Calendar.signals.next_month(calendar)" },
        { "trigger": "Gtk.Calendar.signals.next_year", "contents": "Gtk.Calendar.signals.next_year(calendar)" },
        { "trigger": "Gtk.Calendar.signals.prev_month", "contents": "Gtk.Calendar.signals.prev_month(calendar)" },
        { "trigger": "Gtk.Calendar.signals.prev_year", "contents": "Gtk.Calendar.signals.prev_year(calendar)" },
        { "trigger": "Gtk.Calendar.props.day", "contents": "Gtk.Calendar.props.day" },
        { "trigger": "Gtk.Calendar.props.detail_height_rows", "contents": "Gtk.Calendar.props.detail_height_rows" },
        { "trigger": "Gtk.Calendar.props.detail_width_chars", "contents": "Gtk.Calendar.props.detail_width_chars" },
        { "trigger": "Gtk.Calendar.props.month", "contents": "Gtk.Calendar.props.month" },
        { "trigger": "Gtk.Calendar.props.no_month_change", "contents": "Gtk.Calendar.props.no_month_change" },
        { "trigger": "Gtk.Calendar.props.show_day_names", "contents": "Gtk.Calendar.props.show_day_names" },
        { "trigger": "Gtk.Calendar.props.show_details", "contents": "Gtk.Calendar.props.show_details" },
        { "trigger": "Gtk.Calendar.props.show_heading", "contents": "Gtk.Calendar.props.show_heading" },
        { "trigger": "Gtk.Calendar.props.show_week_numbers", "contents": "Gtk.Calendar.props.show_week_numbers" },
        { "trigger": "Gtk.Calendar.props.year", "contents": "Gtk.Calendar.props.year" },
        { "trigger": "Gtk.CellAccessible", "contents": "Gtk.CellAccessible(**kwargs)" },
        { "trigger": "Gtk.CellAccessible.do_update_cache", "contents": "Gtk.CellAccessible.do_update_cache(emit_signal)" },
        { "trigger": "Gtk.CellAreaBox", "contents": "Gtk.CellAreaBox(**kwargs)" },
        { "trigger": "Gtk.CellAreaBox.new", "contents": "Gtk.CellAreaBox.new()" },
        { "trigger": "Gtk.CellAreaBox.get_spacing", "contents": "Gtk.CellAreaBox.get_spacing()" },
        { "trigger": "Gtk.CellAreaBox.pack_end", "contents": "Gtk.CellAreaBox.pack_end(renderer, expand, align, fixed)" },
        { "trigger": "Gtk.CellAreaBox.pack_start", "contents": "Gtk.CellAreaBox.pack_start(renderer, expand, align, fixed)" },
        { "trigger": "Gtk.CellAreaBox.set_spacing", "contents": "Gtk.CellAreaBox.set_spacing(spacing)" },
        { "trigger": "Gtk.CellAreaBox.props.spacing", "contents": "Gtk.CellAreaBox.props.spacing" },
        { "trigger": "Gtk.CellAreaContext", "contents": "Gtk.CellAreaContext(**kwargs)" },
        { "trigger": "Gtk.CellAreaContext.allocate", "contents": "Gtk.CellAreaContext.allocate(width, height)" },
        { "trigger": "Gtk.CellAreaContext.get_allocation", "contents": "Gtk.CellAreaContext.get_allocation()" },
        { "trigger": "Gtk.CellAreaContext.get_area", "contents": "Gtk.CellAreaContext.get_area()" },
        { "trigger": "Gtk.CellAreaContext.get_preferred_height", "contents": "Gtk.CellAreaContext.get_preferred_height()" },
        { "trigger": "Gtk.CellAreaContext.get_preferred_height_for_width", "contents": "Gtk.CellAreaContext.get_preferred_height_for_width(width)" },
        { "trigger": "Gtk.CellAreaContext.get_preferred_width", "contents": "Gtk.CellAreaContext.get_preferred_width()" },
        { "trigger": "Gtk.CellAreaContext.get_preferred_width_for_height", "contents": "Gtk.CellAreaContext.get_preferred_width_for_height(height)" },
        { "trigger": "Gtk.CellAreaContext.push_preferred_height", "contents": "Gtk.CellAreaContext.push_preferred_height(minimum_height, natural_height)" },
        { "trigger": "Gtk.CellAreaContext.push_preferred_width", "contents": "Gtk.CellAreaContext.push_preferred_width(minimum_width, natural_width)" },
        { "trigger": "Gtk.CellAreaContext.reset", "contents": "Gtk.CellAreaContext.reset()" },
        { "trigger": "Gtk.CellAreaContext.do_allocate", "contents": "Gtk.CellAreaContext.do_allocate(width, height)" },
        { "trigger": "Gtk.CellAreaContext.do_get_preferred_height_for_width", "contents": "Gtk.CellAreaContext.do_get_preferred_height_for_width(width)" },
        { "trigger": "Gtk.CellAreaContext.do_get_preferred_width_for_height", "contents": "Gtk.CellAreaContext.do_get_preferred_width_for_height(height)" },
        { "trigger": "Gtk.CellAreaContext.do_reset", "contents": "Gtk.CellAreaContext.do_reset()" },
        { "trigger": "Gtk.CellAreaContext.props.area", "contents": "Gtk.CellAreaContext.props.area" },
        { "trigger": "Gtk.CellAreaContext.props.minimum_height", "contents": "Gtk.CellAreaContext.props.minimum_height" },
        { "trigger": "Gtk.CellAreaContext.props.minimum_width", "contents": "Gtk.CellAreaContext.props.minimum_width" },
        { "trigger": "Gtk.CellAreaContext.props.natural_height", "contents": "Gtk.CellAreaContext.props.natural_height" },
        { "trigger": "Gtk.CellAreaContext.props.natural_width", "contents": "Gtk.CellAreaContext.props.natural_width" },
        { "trigger": "Gtk.CellArea", "contents": "Gtk.CellArea(**kwargs)" },
        { "trigger": "Gtk.CellArea.activate", "contents": "Gtk.CellArea.activate(context, widget, cell_area, flags, edit_only)" },
        { "trigger": "Gtk.CellArea.activate_cell", "contents": "Gtk.CellArea.activate_cell(widget, renderer, event, cell_area, flags)" },
        { "trigger": "Gtk.CellArea.add", "contents": "Gtk.CellArea.add(renderer)" },
        { "trigger": "Gtk.CellArea.add_focus_sibling", "contents": "Gtk.CellArea.add_focus_sibling(renderer, sibling)" },
        { "trigger": "Gtk.CellArea.apply_attributes", "contents": "Gtk.CellArea.apply_attributes(tree_model, iter, is_expander, is_expanded)" },
        { "trigger": "Gtk.CellArea.attribute_connect", "contents": "Gtk.CellArea.attribute_connect(renderer, attribute, column)" },
        { "trigger": "Gtk.CellArea.attribute_disconnect", "contents": "Gtk.CellArea.attribute_disconnect(renderer, attribute)" },
        { "trigger": "Gtk.CellArea.attribute_get_column", "contents": "Gtk.CellArea.attribute_get_column(renderer, attribute)" },
        { "trigger": "Gtk.CellArea.cell_get_property", "contents": "Gtk.CellArea.cell_get_property(renderer, property_name, value)" },
        { "trigger": "Gtk.CellArea.cell_set_property", "contents": "Gtk.CellArea.cell_set_property(renderer, property_name, value)" },
        { "trigger": "Gtk.CellArea.copy_context", "contents": "Gtk.CellArea.copy_context(context)" },
        { "trigger": "Gtk.CellArea.create_context", "contents": "Gtk.CellArea.create_context()" },
        { "trigger": "Gtk.CellArea.event", "contents": "Gtk.CellArea.event(context, widget, event, cell_area, flags)" },
        { "trigger": "Gtk.CellArea.focus", "contents": "Gtk.CellArea.focus(direction)" },
        { "trigger": "Gtk.CellArea.foreach", "contents": "Gtk.CellArea.foreach(callback, *callback_data)" },
        { "trigger": "Gtk.CellArea.foreach_alloc", "contents": "Gtk.CellArea.foreach_alloc(context, widget, cell_area, background_area, callback, *callback_data)" },
        { "trigger": "Gtk.CellArea.get_cell_allocation", "contents": "Gtk.CellArea.get_cell_allocation(context, widget, renderer, cell_area)" },
        { "trigger": "Gtk.CellArea.get_cell_at_position", "contents": "Gtk.CellArea.get_cell_at_position(context, widget, cell_area, x, y)" },
        { "trigger": "Gtk.CellArea.get_current_path_string", "contents": "Gtk.CellArea.get_current_path_string()" },
        { "trigger": "Gtk.CellArea.get_edit_widget", "contents": "Gtk.CellArea.get_edit_widget()" },
        { "trigger": "Gtk.CellArea.get_edited_cell", "contents": "Gtk.CellArea.get_edited_cell()" },
        { "trigger": "Gtk.CellArea.get_focus_cell", "contents": "Gtk.CellArea.get_focus_cell()" },
        { "trigger": "Gtk.CellArea.get_focus_from_sibling", "contents": "Gtk.CellArea.get_focus_from_sibling(renderer)" },
        { "trigger": "Gtk.CellArea.get_focus_siblings", "contents": "Gtk.CellArea.get_focus_siblings(renderer)" },
        { "trigger": "Gtk.CellArea.get_preferred_height", "contents": "Gtk.CellArea.get_preferred_height(context, widget)" },
        { "trigger": "Gtk.CellArea.get_preferred_height_for_width", "contents": "Gtk.CellArea.get_preferred_height_for_width(context, widget, width)" },
        { "trigger": "Gtk.CellArea.get_preferred_width", "contents": "Gtk.CellArea.get_preferred_width(context, widget)" },
        { "trigger": "Gtk.CellArea.get_preferred_width_for_height", "contents": "Gtk.CellArea.get_preferred_width_for_height(context, widget, height)" },
        { "trigger": "Gtk.CellArea.get_request_mode", "contents": "Gtk.CellArea.get_request_mode()" },
        { "trigger": "Gtk.CellArea.has_renderer", "contents": "Gtk.CellArea.has_renderer(renderer)" },
        { "trigger": "Gtk.CellArea.inner_cell_area", "contents": "Gtk.CellArea.inner_cell_area(widget, cell_area)" },
        { "trigger": "Gtk.CellArea.is_activatable", "contents": "Gtk.CellArea.is_activatable()" },
        { "trigger": "Gtk.CellArea.is_focus_sibling", "contents": "Gtk.CellArea.is_focus_sibling(renderer, sibling)" },
        { "trigger": "Gtk.CellArea.remove", "contents": "Gtk.CellArea.remove(renderer)" },
        { "trigger": "Gtk.CellArea.remove_focus_sibling", "contents": "Gtk.CellArea.remove_focus_sibling(renderer, sibling)" },
        { "trigger": "Gtk.CellArea.render", "contents": "Gtk.CellArea.render(context, widget, cr, background_area, cell_area, flags, paint_focus)" },
        { "trigger": "Gtk.CellArea.request_renderer", "contents": "Gtk.CellArea.request_renderer(renderer, orientation, widget, for_size)" },
        { "trigger": "Gtk.CellArea.set_focus_cell", "contents": "Gtk.CellArea.set_focus_cell(renderer)" },
        { "trigger": "Gtk.CellArea.stop_editing", "contents": "Gtk.CellArea.stop_editing(canceled)" },
        { "trigger": "Gtk.CellArea.do_activate", "contents": "Gtk.CellArea.do_activate(context, widget, cell_area, flags, edit_only)" },
        { "trigger": "Gtk.CellArea.do_add", "contents": "Gtk.CellArea.do_add(renderer)" },
        { "trigger": "Gtk.CellArea.do_apply_attributes", "contents": "Gtk.CellArea.do_apply_attributes(tree_model, iter, is_expander, is_expanded)" },
        { "trigger": "Gtk.CellArea.do_copy_context", "contents": "Gtk.CellArea.do_copy_context(context)" },
        { "trigger": "Gtk.CellArea.do_create_context", "contents": "Gtk.CellArea.do_create_context()" },
        { "trigger": "Gtk.CellArea.do_event", "contents": "Gtk.CellArea.do_event(context, widget, event, cell_area, flags)" },
        { "trigger": "Gtk.CellArea.do_focus", "contents": "Gtk.CellArea.do_focus(direction)" },
        { "trigger": "Gtk.CellArea.do_foreach", "contents": "Gtk.CellArea.do_foreach(callback, callback_data)" },
        { "trigger": "Gtk.CellArea.do_foreach_alloc", "contents": "Gtk.CellArea.do_foreach_alloc(context, widget, cell_area, background_area, callback, callback_data)" },
        { "trigger": "Gtk.CellArea.do_get_cell_property", "contents": "Gtk.CellArea.do_get_cell_property(renderer, property_id, value, pspec)" },
        { "trigger": "Gtk.CellArea.do_get_preferred_height", "contents": "Gtk.CellArea.do_get_preferred_height(context, widget)" },
        { "trigger": "Gtk.CellArea.do_get_preferred_height_for_width", "contents": "Gtk.CellArea.do_get_preferred_height_for_width(context, widget, width)" },
        { "trigger": "Gtk.CellArea.do_get_preferred_width", "contents": "Gtk.CellArea.do_get_preferred_width(context, widget)" },
        { "trigger": "Gtk.CellArea.do_get_preferred_width_for_height", "contents": "Gtk.CellArea.do_get_preferred_width_for_height(context, widget, height)" },
        { "trigger": "Gtk.CellArea.do_get_request_mode", "contents": "Gtk.CellArea.do_get_request_mode()" },
        { "trigger": "Gtk.CellArea.do_is_activatable", "contents": "Gtk.CellArea.do_is_activatable()" },
        { "trigger": "Gtk.CellArea.do_remove", "contents": "Gtk.CellArea.do_remove(renderer)" },
        { "trigger": "Gtk.CellArea.do_render", "contents": "Gtk.CellArea.do_render(context, widget, cr, background_area, cell_area, flags, paint_focus)" },
        { "trigger": "Gtk.CellArea.do_set_cell_property", "contents": "Gtk.CellArea.do_set_cell_property(renderer, property_id, value, pspec)" },
        { "trigger": "Gtk.CellArea.signals.add_editable", "contents": "Gtk.CellArea.signals.add_editable(cell_area, renderer, editable, cell_area, path)" },
        { "trigger": "Gtk.CellArea.signals.apply_attributes", "contents": "Gtk.CellArea.signals.apply_attributes(cell_area, model, iter, is_expander, is_expanded)" },
        { "trigger": "Gtk.CellArea.signals.focus_changed", "contents": "Gtk.CellArea.signals.focus_changed(cell_area, renderer, path)" },
        { "trigger": "Gtk.CellArea.signals.remove_editable", "contents": "Gtk.CellArea.signals.remove_editable(cell_area, renderer, editable)" },
        { "trigger": "Gtk.CellArea.props.edit_widget", "contents": "Gtk.CellArea.props.edit_widget" },
        { "trigger": "Gtk.CellArea.props.edited_cell", "contents": "Gtk.CellArea.props.edited_cell" },
        { "trigger": "Gtk.CellArea.props.focus_cell", "contents": "Gtk.CellArea.props.focus_cell" },
        { "trigger": "Gtk.CellRendererAccel", "contents": "Gtk.CellRendererAccel(**kwargs)" },
        { "trigger": "Gtk.CellRendererAccel.new", "contents": "Gtk.CellRendererAccel.new()" },
        { "trigger": "Gtk.CellRendererAccel.do_accel_cleared", "contents": "Gtk.CellRendererAccel.do_accel_cleared(path_string)" },
        { "trigger": "Gtk.CellRendererAccel.do_accel_edited", "contents": "Gtk.CellRendererAccel.do_accel_edited(path_string, accel_key, accel_mods, hardware_keycode)" },
        { "trigger": "Gtk.CellRendererAccel.signals.accel_cleared", "contents": "Gtk.CellRendererAccel.signals.accel_cleared(cell_renderer_accel, path_string)" },
        { "trigger": "Gtk.CellRendererAccel.signals.accel_edited", "contents": "Gtk.CellRendererAccel.signals.accel_edited(cell_renderer_accel, path_string, accel_key, accel_mods, hardware_keycode)" },
        { "trigger": "Gtk.CellRendererAccel.props.accel_key", "contents": "Gtk.CellRendererAccel.props.accel_key" },
        { "trigger": "Gtk.CellRendererAccel.props.accel_mode", "contents": "Gtk.CellRendererAccel.props.accel_mode" },
        { "trigger": "Gtk.CellRendererAccel.props.accel_mods", "contents": "Gtk.CellRendererAccel.props.accel_mods" },
        { "trigger": "Gtk.CellRendererAccel.props.keycode", "contents": "Gtk.CellRendererAccel.props.keycode" },
        { "trigger": "Gtk.CellRendererCombo", "contents": "Gtk.CellRendererCombo(**kwargs)" },
        { "trigger": "Gtk.CellRendererCombo.new", "contents": "Gtk.CellRendererCombo.new()" },
        { "trigger": "Gtk.CellRendererCombo.signals.changed", "contents": "Gtk.CellRendererCombo.signals.changed(cell_renderer_combo, path_string, new_iter)" },
        { "trigger": "Gtk.CellRendererCombo.props.has_entry", "contents": "Gtk.CellRendererCombo.props.has_entry" },
        { "trigger": "Gtk.CellRendererCombo.props.model", "contents": "Gtk.CellRendererCombo.props.model" },
        { "trigger": "Gtk.CellRendererCombo.props.text_column", "contents": "Gtk.CellRendererCombo.props.text_column" },
        { "trigger": "Gtk.CellRenderer", "contents": "Gtk.CellRenderer(**kwargs)" },
        { "trigger": "Gtk.CellRenderer.activate", "contents": "Gtk.CellRenderer.activate(event, widget, path, background_area, cell_area, flags)" },
        { "trigger": "Gtk.CellRenderer.get_aligned_area", "contents": "Gtk.CellRenderer.get_aligned_area(widget, flags, cell_area)" },
        { "trigger": "Gtk.CellRenderer.get_alignment", "contents": "Gtk.CellRenderer.get_alignment()" },
        { "trigger": "Gtk.CellRenderer.get_fixed_size", "contents": "Gtk.CellRenderer.get_fixed_size()" },
        { "trigger": "Gtk.CellRenderer.get_padding", "contents": "Gtk.CellRenderer.get_padding()" },
        { "trigger": "Gtk.CellRenderer.get_preferred_height", "contents": "Gtk.CellRenderer.get_preferred_height(widget)" },
        { "trigger": "Gtk.CellRenderer.get_preferred_height_for_width", "contents": "Gtk.CellRenderer.get_preferred_height_for_width(widget, width)" },
        { "trigger": "Gtk.CellRenderer.get_preferred_size", "contents": "Gtk.CellRenderer.get_preferred_size(widget)" },
        { "trigger": "Gtk.CellRenderer.get_preferred_width", "contents": "Gtk.CellRenderer.get_preferred_width(widget)" },
        { "trigger": "Gtk.CellRenderer.get_preferred_width_for_height", "contents": "Gtk.CellRenderer.get_preferred_width_for_height(widget, height)" },
        { "trigger": "Gtk.CellRenderer.get_request_mode", "contents": "Gtk.CellRenderer.get_request_mode()" },
        { "trigger": "Gtk.CellRenderer.get_sensitive", "contents": "Gtk.CellRenderer.get_sensitive()" },
        { "trigger": "Gtk.CellRenderer.get_size", "contents": "Gtk.CellRenderer.get_size(widget, cell_area)" },
        { "trigger": "Gtk.CellRenderer.get_state", "contents": "Gtk.CellRenderer.get_state(widget, cell_state)" },
        { "trigger": "Gtk.CellRenderer.get_visible", "contents": "Gtk.CellRenderer.get_visible()" },
        { "trigger": "Gtk.CellRenderer.is_activatable", "contents": "Gtk.CellRenderer.is_activatable()" },
        { "trigger": "Gtk.CellRenderer.render", "contents": "Gtk.CellRenderer.render(cr, widget, background_area, cell_area, flags)" },
        { "trigger": "Gtk.CellRenderer.set_alignment", "contents": "Gtk.CellRenderer.set_alignment(xalign, yalign)" },
        { "trigger": "Gtk.CellRenderer.set_fixed_size", "contents": "Gtk.CellRenderer.set_fixed_size(width, height)" },
        { "trigger": "Gtk.CellRenderer.set_padding", "contents": "Gtk.CellRenderer.set_padding(xpad, ypad)" },
        { "trigger": "Gtk.CellRenderer.set_sensitive", "contents": "Gtk.CellRenderer.set_sensitive(sensitive)" },
        { "trigger": "Gtk.CellRenderer.set_visible", "contents": "Gtk.CellRenderer.set_visible(visible)" },
        { "trigger": "Gtk.CellRenderer.start_editing", "contents": "Gtk.CellRenderer.start_editing(event, widget, path, background_area, cell_area, flags)" },
        { "trigger": "Gtk.CellRenderer.stop_editing", "contents": "Gtk.CellRenderer.stop_editing(canceled)" },
        { "trigger": "Gtk.CellRenderer.do_activate", "contents": "Gtk.CellRenderer.do_activate(event, widget, path, background_area, cell_area, flags)" },
        { "trigger": "Gtk.CellRenderer.do_editing_canceled", "contents": "Gtk.CellRenderer.do_editing_canceled()" },
        { "trigger": "Gtk.CellRenderer.do_editing_started", "contents": "Gtk.CellRenderer.do_editing_started(editable, path)" },
        { "trigger": "Gtk.CellRenderer.do_get_aligned_area", "contents": "Gtk.CellRenderer.do_get_aligned_area(widget, flags, cell_area)" },
        { "trigger": "Gtk.CellRenderer.do_get_preferred_height", "contents": "Gtk.CellRenderer.do_get_preferred_height(widget)" },
        { "trigger": "Gtk.CellRenderer.do_get_preferred_height_for_width", "contents": "Gtk.CellRenderer.do_get_preferred_height_for_width(widget, width)" },
        { "trigger": "Gtk.CellRenderer.do_get_preferred_width", "contents": "Gtk.CellRenderer.do_get_preferred_width(widget)" },
        { "trigger": "Gtk.CellRenderer.do_get_preferred_width_for_height", "contents": "Gtk.CellRenderer.do_get_preferred_width_for_height(widget, height)" },
        { "trigger": "Gtk.CellRenderer.do_get_request_mode", "contents": "Gtk.CellRenderer.do_get_request_mode()" },
        { "trigger": "Gtk.CellRenderer.do_get_size", "contents": "Gtk.CellRenderer.do_get_size(widget, cell_area)" },
        { "trigger": "Gtk.CellRenderer.do_render", "contents": "Gtk.CellRenderer.do_render(cr, widget, background_area, cell_area, flags)" },
        { "trigger": "Gtk.CellRenderer.do_start_editing", "contents": "Gtk.CellRenderer.do_start_editing(event, widget, path, background_area, cell_area, flags)" },
        { "trigger": "Gtk.CellRenderer.signals.editing_canceled", "contents": "Gtk.CellRenderer.signals.editing_canceled(cell_renderer)" },
        { "trigger": "Gtk.CellRenderer.signals.editing_started", "contents": "Gtk.CellRenderer.signals.editing_started(cell_renderer, editable, path)" },
        { "trigger": "Gtk.CellRenderer.props.cell_background", "contents": "Gtk.CellRenderer.props.cell_background" },
        { "trigger": "Gtk.CellRenderer.props.cell_background_gdk", "contents": "Gtk.CellRenderer.props.cell_background_gdk" },
        { "trigger": "Gtk.CellRenderer.props.cell_background_rgba", "contents": "Gtk.CellRenderer.props.cell_background_rgba" },
        { "trigger": "Gtk.CellRenderer.props.cell_background_set", "contents": "Gtk.CellRenderer.props.cell_background_set" },
        { "trigger": "Gtk.CellRenderer.props.editing", "contents": "Gtk.CellRenderer.props.editing" },
        { "trigger": "Gtk.CellRenderer.props.height", "contents": "Gtk.CellRenderer.props.height" },
        { "trigger": "Gtk.CellRenderer.props.is_expanded", "contents": "Gtk.CellRenderer.props.is_expanded" },
        { "trigger": "Gtk.CellRenderer.props.is_expander", "contents": "Gtk.CellRenderer.props.is_expander" },
        { "trigger": "Gtk.CellRenderer.props.mode", "contents": "Gtk.CellRenderer.props.mode" },
        { "trigger": "Gtk.CellRenderer.props.sensitive", "contents": "Gtk.CellRenderer.props.sensitive" },
        { "trigger": "Gtk.CellRenderer.props.visible", "contents": "Gtk.CellRenderer.props.visible" },
        { "trigger": "Gtk.CellRenderer.props.width", "contents": "Gtk.CellRenderer.props.width" },
        { "trigger": "Gtk.CellRenderer.props.xalign", "contents": "Gtk.CellRenderer.props.xalign" },
        { "trigger": "Gtk.CellRenderer.props.xpad", "contents": "Gtk.CellRenderer.props.xpad" },
        { "trigger": "Gtk.CellRenderer.props.yalign", "contents": "Gtk.CellRenderer.props.yalign" },
        { "trigger": "Gtk.CellRenderer.props.ypad", "contents": "Gtk.CellRenderer.props.ypad" },
        { "trigger": "Gtk.CellRendererPixbuf", "contents": "Gtk.CellRendererPixbuf(**kwargs)" },
        { "trigger": "Gtk.CellRendererPixbuf.new", "contents": "Gtk.CellRendererPixbuf.new()" },
        { "trigger": "Gtk.CellRendererPixbuf.props.follow_state", "contents": "Gtk.CellRendererPixbuf.props.follow_state" },
        { "trigger": "Gtk.CellRendererPixbuf.props.gicon", "contents": "Gtk.CellRendererPixbuf.props.gicon" },
        { "trigger": "Gtk.CellRendererPixbuf.props.icon_name", "contents": "Gtk.CellRendererPixbuf.props.icon_name" },
        { "trigger": "Gtk.CellRendererPixbuf.props.pixbuf", "contents": "Gtk.CellRendererPixbuf.props.pixbuf" },
        { "trigger": "Gtk.CellRendererPixbuf.props.pixbuf_expander_closed", "contents": "Gtk.CellRendererPixbuf.props.pixbuf_expander_closed" },
        { "trigger": "Gtk.CellRendererPixbuf.props.pixbuf_expander_open", "contents": "Gtk.CellRendererPixbuf.props.pixbuf_expander_open" },
        { "trigger": "Gtk.CellRendererPixbuf.props.stock_detail", "contents": "Gtk.CellRendererPixbuf.props.stock_detail" },
        { "trigger": "Gtk.CellRendererPixbuf.props.stock_id", "contents": "Gtk.CellRendererPixbuf.props.stock_id" },
        { "trigger": "Gtk.CellRendererPixbuf.props.stock_size", "contents": "Gtk.CellRendererPixbuf.props.stock_size" },
        { "trigger": "Gtk.CellRendererPixbuf.props.surface", "contents": "Gtk.CellRendererPixbuf.props.surface" },
        { "trigger": "Gtk.CellRendererProgress", "contents": "Gtk.CellRendererProgress(**kwargs)" },
        { "trigger": "Gtk.CellRendererProgress.new", "contents": "Gtk.CellRendererProgress.new()" },
        { "trigger": "Gtk.CellRendererProgress.props.inverted", "contents": "Gtk.CellRendererProgress.props.inverted" },
        { "trigger": "Gtk.CellRendererProgress.props.pulse", "contents": "Gtk.CellRendererProgress.props.pulse" },
        { "trigger": "Gtk.CellRendererProgress.props.text", "contents": "Gtk.CellRendererProgress.props.text" },
        { "trigger": "Gtk.CellRendererProgress.props.text_xalign", "contents": "Gtk.CellRendererProgress.props.text_xalign" },
        { "trigger": "Gtk.CellRendererProgress.props.text_yalign", "contents": "Gtk.CellRendererProgress.props.text_yalign" },
        { "trigger": "Gtk.CellRendererProgress.props.value", "contents": "Gtk.CellRendererProgress.props.value" },
        { "trigger": "Gtk.CellRendererSpin", "contents": "Gtk.CellRendererSpin(**kwargs)" },
        { "trigger": "Gtk.CellRendererSpin.new", "contents": "Gtk.CellRendererSpin.new()" },
        { "trigger": "Gtk.CellRendererSpin.props.adjustment", "contents": "Gtk.CellRendererSpin.props.adjustment" },
        { "trigger": "Gtk.CellRendererSpin.props.climb_rate", "contents": "Gtk.CellRendererSpin.props.climb_rate" },
        { "trigger": "Gtk.CellRendererSpin.props.digits", "contents": "Gtk.CellRendererSpin.props.digits" },
        { "trigger": "Gtk.CellRendererSpinner", "contents": "Gtk.CellRendererSpinner(**kwargs)" },
        { "trigger": "Gtk.CellRendererSpinner.new", "contents": "Gtk.CellRendererSpinner.new()" },
        { "trigger": "Gtk.CellRendererSpinner.props.active", "contents": "Gtk.CellRendererSpinner.props.active" },
        { "trigger": "Gtk.CellRendererSpinner.props.pulse", "contents": "Gtk.CellRendererSpinner.props.pulse" },
        { "trigger": "Gtk.CellRendererSpinner.props.size", "contents": "Gtk.CellRendererSpinner.props.size" },
        { "trigger": "Gtk.CellRendererText", "contents": "Gtk.CellRendererText(**kwargs)" },
        { "trigger": "Gtk.CellRendererText.new", "contents": "Gtk.CellRendererText.new()" },
        { "trigger": "Gtk.CellRendererText.set_fixed_height_from_font", "contents": "Gtk.CellRendererText.set_fixed_height_from_font(number_of_rows)" },
        { "trigger": "Gtk.CellRendererText.do_edited", "contents": "Gtk.CellRendererText.do_edited(path, new_text)" },
        { "trigger": "Gtk.CellRendererText.signals.edited", "contents": "Gtk.CellRendererText.signals.edited(cell_renderer_text, path, new_text)" },
        { "trigger": "Gtk.CellRendererText.props.align_set", "contents": "Gtk.CellRendererText.props.align_set" },
        { "trigger": "Gtk.CellRendererText.props.alignment", "contents": "Gtk.CellRendererText.props.alignment" },
        { "trigger": "Gtk.CellRendererText.props.attributes", "contents": "Gtk.CellRendererText.props.attributes" },
        { "trigger": "Gtk.CellRendererText.props.background", "contents": "Gtk.CellRendererText.props.background" },
        { "trigger": "Gtk.CellRendererText.props.background_gdk", "contents": "Gtk.CellRendererText.props.background_gdk" },
        { "trigger": "Gtk.CellRendererText.props.background_rgba", "contents": "Gtk.CellRendererText.props.background_rgba" },
        { "trigger": "Gtk.CellRendererText.props.background_set", "contents": "Gtk.CellRendererText.props.background_set" },
        { "trigger": "Gtk.CellRendererText.props.editable", "contents": "Gtk.CellRendererText.props.editable" },
        { "trigger": "Gtk.CellRendererText.props.editable_set", "contents": "Gtk.CellRendererText.props.editable_set" },
        { "trigger": "Gtk.CellRendererText.props.ellipsize", "contents": "Gtk.CellRendererText.props.ellipsize" },
        { "trigger": "Gtk.CellRendererText.props.ellipsize_set", "contents": "Gtk.CellRendererText.props.ellipsize_set" },
        { "trigger": "Gtk.CellRendererText.props.family", "contents": "Gtk.CellRendererText.props.family" },
        { "trigger": "Gtk.CellRendererText.props.family_set", "contents": "Gtk.CellRendererText.props.family_set" },
        { "trigger": "Gtk.CellRendererText.props.font", "contents": "Gtk.CellRendererText.props.font" },
        { "trigger": "Gtk.CellRendererText.props.font_desc", "contents": "Gtk.CellRendererText.props.font_desc" },
        { "trigger": "Gtk.CellRendererText.props.foreground", "contents": "Gtk.CellRendererText.props.foreground" },
        { "trigger": "Gtk.CellRendererText.props.foreground_gdk", "contents": "Gtk.CellRendererText.props.foreground_gdk" },
        { "trigger": "Gtk.CellRendererText.props.foreground_rgba", "contents": "Gtk.CellRendererText.props.foreground_rgba" },
        { "trigger": "Gtk.CellRendererText.props.foreground_set", "contents": "Gtk.CellRendererText.props.foreground_set" },
        { "trigger": "Gtk.CellRendererText.props.language", "contents": "Gtk.CellRendererText.props.language" },
        { "trigger": "Gtk.CellRendererText.props.language_set", "contents": "Gtk.CellRendererText.props.language_set" },
        { "trigger": "Gtk.CellRendererText.props.markup", "contents": "Gtk.CellRendererText.props.markup" },
        { "trigger": "Gtk.CellRendererText.props.max_width_chars", "contents": "Gtk.CellRendererText.props.max_width_chars" },
        { "trigger": "Gtk.CellRendererText.props.placeholder_text", "contents": "Gtk.CellRendererText.props.placeholder_text" },
        { "trigger": "Gtk.CellRendererText.props.rise", "contents": "Gtk.CellRendererText.props.rise" },
        { "trigger": "Gtk.CellRendererText.props.rise_set", "contents": "Gtk.CellRendererText.props.rise_set" },
        { "trigger": "Gtk.CellRendererText.props.scale", "contents": "Gtk.CellRendererText.props.scale" },
        { "trigger": "Gtk.CellRendererText.props.scale_set", "contents": "Gtk.CellRendererText.props.scale_set" },
        { "trigger": "Gtk.CellRendererText.props.single_paragraph_mode", "contents": "Gtk.CellRendererText.props.single_paragraph_mode" },
        { "trigger": "Gtk.CellRendererText.props.size", "contents": "Gtk.CellRendererText.props.size" },
        { "trigger": "Gtk.CellRendererText.props.size_points", "contents": "Gtk.CellRendererText.props.size_points" },
        { "trigger": "Gtk.CellRendererText.props.size_set", "contents": "Gtk.CellRendererText.props.size_set" },
        { "trigger": "Gtk.CellRendererText.props.stretch", "contents": "Gtk.CellRendererText.props.stretch" },
        { "trigger": "Gtk.CellRendererText.props.stretch_set", "contents": "Gtk.CellRendererText.props.stretch_set" },
        { "trigger": "Gtk.CellRendererText.props.strikethrough", "contents": "Gtk.CellRendererText.props.strikethrough" },
        { "trigger": "Gtk.CellRendererText.props.strikethrough_set", "contents": "Gtk.CellRendererText.props.strikethrough_set" },
        { "trigger": "Gtk.CellRendererText.props.style", "contents": "Gtk.CellRendererText.props.style" },
        { "trigger": "Gtk.CellRendererText.props.style_set", "contents": "Gtk.CellRendererText.props.style_set" },
        { "trigger": "Gtk.CellRendererText.props.text", "contents": "Gtk.CellRendererText.props.text" },
        { "trigger": "Gtk.CellRendererText.props.underline", "contents": "Gtk.CellRendererText.props.underline" },
        { "trigger": "Gtk.CellRendererText.props.underline_set", "contents": "Gtk.CellRendererText.props.underline_set" },
        { "trigger": "Gtk.CellRendererText.props.variant", "contents": "Gtk.CellRendererText.props.variant" },
        { "trigger": "Gtk.CellRendererText.props.variant_set", "contents": "Gtk.CellRendererText.props.variant_set" },
        { "trigger": "Gtk.CellRendererText.props.weight", "contents": "Gtk.CellRendererText.props.weight" },
        { "trigger": "Gtk.CellRendererText.props.weight_set", "contents": "Gtk.CellRendererText.props.weight_set" },
        { "trigger": "Gtk.CellRendererText.props.width_chars", "contents": "Gtk.CellRendererText.props.width_chars" },
        { "trigger": "Gtk.CellRendererText.props.wrap_mode", "contents": "Gtk.CellRendererText.props.wrap_mode" },
        { "trigger": "Gtk.CellRendererText.props.wrap_width", "contents": "Gtk.CellRendererText.props.wrap_width" },
        { "trigger": "Gtk.CellRendererToggle", "contents": "Gtk.CellRendererToggle(**kwargs)" },
        { "trigger": "Gtk.CellRendererToggle.new", "contents": "Gtk.CellRendererToggle.new()" },
        { "trigger": "Gtk.CellRendererToggle.get_activatable", "contents": "Gtk.CellRendererToggle.get_activatable()" },
        { "trigger": "Gtk.CellRendererToggle.get_active", "contents": "Gtk.CellRendererToggle.get_active()" },
        { "trigger": "Gtk.CellRendererToggle.get_radio", "contents": "Gtk.CellRendererToggle.get_radio()" },
        { "trigger": "Gtk.CellRendererToggle.set_activatable", "contents": "Gtk.CellRendererToggle.set_activatable(setting)" },
        { "trigger": "Gtk.CellRendererToggle.set_active", "contents": "Gtk.CellRendererToggle.set_active(setting)" },
        { "trigger": "Gtk.CellRendererToggle.set_radio", "contents": "Gtk.CellRendererToggle.set_radio(radio)" },
        { "trigger": "Gtk.CellRendererToggle.do_toggled", "contents": "Gtk.CellRendererToggle.do_toggled(path)" },
        { "trigger": "Gtk.CellRendererToggle.signals.toggled", "contents": "Gtk.CellRendererToggle.signals.toggled(cell_renderer_toggle, path)" },
        { "trigger": "Gtk.CellRendererToggle.props.activatable", "contents": "Gtk.CellRendererToggle.props.activatable" },
        { "trigger": "Gtk.CellRendererToggle.props.active", "contents": "Gtk.CellRendererToggle.props.active" },
        { "trigger": "Gtk.CellRendererToggle.props.inconsistent", "contents": "Gtk.CellRendererToggle.props.inconsistent" },
        { "trigger": "Gtk.CellRendererToggle.props.indicator_size", "contents": "Gtk.CellRendererToggle.props.indicator_size" },
        { "trigger": "Gtk.CellRendererToggle.props.radio", "contents": "Gtk.CellRendererToggle.props.radio" },
        { "trigger": "Gtk.CellView", "contents": "Gtk.CellView(**kwargs)" },
        { "trigger": "Gtk.CellView.new", "contents": "Gtk.CellView.new()" },
        { "trigger": "Gtk.CellView.new_with_context", "contents": "Gtk.CellView.new_with_context(area, context)" },
        { "trigger": "Gtk.CellView.new_with_markup", "contents": "Gtk.CellView.new_with_markup(markup)" },
        { "trigger": "Gtk.CellView.new_with_pixbuf", "contents": "Gtk.CellView.new_with_pixbuf(pixbuf)" },
        { "trigger": "Gtk.CellView.new_with_text", "contents": "Gtk.CellView.new_with_text(text)" },
        { "trigger": "Gtk.CellView.get_displayed_row", "contents": "Gtk.CellView.get_displayed_row()" },
        { "trigger": "Gtk.CellView.get_draw_sensitive", "contents": "Gtk.CellView.get_draw_sensitive()" },
        { "trigger": "Gtk.CellView.get_fit_model", "contents": "Gtk.CellView.get_fit_model()" },
        { "trigger": "Gtk.CellView.get_model", "contents": "Gtk.CellView.get_model()" },
        { "trigger": "Gtk.CellView.get_size_of_row", "contents": "Gtk.CellView.get_size_of_row(path)" },
        { "trigger": "Gtk.CellView.set_background_color", "contents": "Gtk.CellView.set_background_color(color)" },
        { "trigger": "Gtk.CellView.set_background_rgba", "contents": "Gtk.CellView.set_background_rgba(rgba)" },
        { "trigger": "Gtk.CellView.set_displayed_row", "contents": "Gtk.CellView.set_displayed_row(path)" },
        { "trigger": "Gtk.CellView.set_draw_sensitive", "contents": "Gtk.CellView.set_draw_sensitive(draw_sensitive)" },
        { "trigger": "Gtk.CellView.set_fit_model", "contents": "Gtk.CellView.set_fit_model(fit_model)" },
        { "trigger": "Gtk.CellView.set_model", "contents": "Gtk.CellView.set_model(model)" },
        { "trigger": "Gtk.CellView.props.background", "contents": "Gtk.CellView.props.background" },
        { "trigger": "Gtk.CellView.props.background_gdk", "contents": "Gtk.CellView.props.background_gdk" },
        { "trigger": "Gtk.CellView.props.background_rgba", "contents": "Gtk.CellView.props.background_rgba" },
        { "trigger": "Gtk.CellView.props.background_set", "contents": "Gtk.CellView.props.background_set" },
        { "trigger": "Gtk.CellView.props.cell_area", "contents": "Gtk.CellView.props.cell_area" },
        { "trigger": "Gtk.CellView.props.cell_area_context", "contents": "Gtk.CellView.props.cell_area_context" },
        { "trigger": "Gtk.CellView.props.draw_sensitive", "contents": "Gtk.CellView.props.draw_sensitive" },
        { "trigger": "Gtk.CellView.props.fit_model", "contents": "Gtk.CellView.props.fit_model" },
        { "trigger": "Gtk.CellView.props.model", "contents": "Gtk.CellView.props.model" },
        { "trigger": "Gtk.CheckButton", "contents": "Gtk.CheckButton(*args, **kwargs)" },
        { "trigger": "Gtk.CheckButton.new", "contents": "Gtk.CheckButton.new()" },
        { "trigger": "Gtk.CheckButton.new_with_label", "contents": "Gtk.CheckButton.new_with_label(label)" },
        { "trigger": "Gtk.CheckButton.new_with_mnemonic", "contents": "Gtk.CheckButton.new_with_mnemonic(label)" },
        { "trigger": "Gtk.CheckButton.do_draw_indicator", "contents": "Gtk.CheckButton.do_draw_indicator(cr)" },
        { "trigger": "Gtk.CheckMenuItemAccessible", "contents": "Gtk.CheckMenuItemAccessible(**kwargs)" },
        { "trigger": "Gtk.CheckMenuItem", "contents": "Gtk.CheckMenuItem(*args, **kwargs)" },
        { "trigger": "Gtk.CheckMenuItem.new", "contents": "Gtk.CheckMenuItem.new()" },
        { "trigger": "Gtk.CheckMenuItem.new_with_label", "contents": "Gtk.CheckMenuItem.new_with_label(label)" },
        { "trigger": "Gtk.CheckMenuItem.new_with_mnemonic", "contents": "Gtk.CheckMenuItem.new_with_mnemonic(label)" },
        { "trigger": "Gtk.CheckMenuItem.get_active", "contents": "Gtk.CheckMenuItem.get_active()" },
        { "trigger": "Gtk.CheckMenuItem.get_draw_as_radio", "contents": "Gtk.CheckMenuItem.get_draw_as_radio()" },
        { "trigger": "Gtk.CheckMenuItem.get_inconsistent", "contents": "Gtk.CheckMenuItem.get_inconsistent()" },
        { "trigger": "Gtk.CheckMenuItem.set_active", "contents": "Gtk.CheckMenuItem.set_active(is_active)" },
        { "trigger": "Gtk.CheckMenuItem.set_draw_as_radio", "contents": "Gtk.CheckMenuItem.set_draw_as_radio(draw_as_radio)" },
        { "trigger": "Gtk.CheckMenuItem.set_inconsistent", "contents": "Gtk.CheckMenuItem.set_inconsistent(setting)" },
        { "trigger": "Gtk.CheckMenuItem.toggled", "contents": "Gtk.CheckMenuItem.toggled()" },
        { "trigger": "Gtk.CheckMenuItem.do_draw_indicator", "contents": "Gtk.CheckMenuItem.do_draw_indicator(cr)" },
        { "trigger": "Gtk.CheckMenuItem.do_toggled", "contents": "Gtk.CheckMenuItem.do_toggled()" },
        { "trigger": "Gtk.CheckMenuItem.signals.toggled", "contents": "Gtk.CheckMenuItem.signals.toggled(check_menu_item)" },
        { "trigger": "Gtk.CheckMenuItem.props.active", "contents": "Gtk.CheckMenuItem.props.active" },
        { "trigger": "Gtk.CheckMenuItem.props.draw_as_radio", "contents": "Gtk.CheckMenuItem.props.draw_as_radio" },
        { "trigger": "Gtk.CheckMenuItem.props.inconsistent", "contents": "Gtk.CheckMenuItem.props.inconsistent" },
        { "trigger": "Gtk.Clipboard", "contents": "Gtk.Clipboard(**kwargs)" },
        { "trigger": "Gtk.Clipboard.get", "contents": "Gtk.Clipboard.get(selection)" },
        { "trigger": "Gtk.Clipboard.get_default", "contents": "Gtk.Clipboard.get_default(display)" },
        { "trigger": "Gtk.Clipboard.get_for_display", "contents": "Gtk.Clipboard.get_for_display(display, selection)" },
        { "trigger": "Gtk.Clipboard.clear", "contents": "Gtk.Clipboard.clear()" },
        { "trigger": "Gtk.Clipboard.get_display", "contents": "Gtk.Clipboard.get_display()" },
        { "trigger": "Gtk.Clipboard.get_owner", "contents": "Gtk.Clipboard.get_owner()" },
        { "trigger": "Gtk.Clipboard.request_contents", "contents": "Gtk.Clipboard.request_contents(target, callback, *user_data)" },
        { "trigger": "Gtk.Clipboard.request_image", "contents": "Gtk.Clipboard.request_image(callback, *user_data)" },
        { "trigger": "Gtk.Clipboard.request_rich_text", "contents": "Gtk.Clipboard.request_rich_text(buffer, callback, *user_data)" },
        { "trigger": "Gtk.Clipboard.request_targets", "contents": "Gtk.Clipboard.request_targets(callback, *user_data)" },
        { "trigger": "Gtk.Clipboard.request_text", "contents": "Gtk.Clipboard.request_text(callback, *user_data)" },
        { "trigger": "Gtk.Clipboard.request_uris", "contents": "Gtk.Clipboard.request_uris(callback, *user_data)" },
        { "trigger": "Gtk.Clipboard.set_can_store", "contents": "Gtk.Clipboard.set_can_store(targets)" },
        { "trigger": "Gtk.Clipboard.set_image", "contents": "Gtk.Clipboard.set_image(pixbuf)" },
        { "trigger": "Gtk.Clipboard.set_text", "contents": "Gtk.Clipboard.set_text(text, len)" },
        { "trigger": "Gtk.Clipboard.store", "contents": "Gtk.Clipboard.store()" },
        { "trigger": "Gtk.Clipboard.wait_for_contents", "contents": "Gtk.Clipboard.wait_for_contents(target)" },
        { "trigger": "Gtk.Clipboard.wait_for_image", "contents": "Gtk.Clipboard.wait_for_image()" },
        { "trigger": "Gtk.Clipboard.wait_for_rich_text", "contents": "Gtk.Clipboard.wait_for_rich_text(buffer)" },
        { "trigger": "Gtk.Clipboard.wait_for_targets", "contents": "Gtk.Clipboard.wait_for_targets()" },
        { "trigger": "Gtk.Clipboard.wait_for_text", "contents": "Gtk.Clipboard.wait_for_text()" },
        { "trigger": "Gtk.Clipboard.wait_for_uris", "contents": "Gtk.Clipboard.wait_for_uris()" },
        { "trigger": "Gtk.Clipboard.wait_is_image_available", "contents": "Gtk.Clipboard.wait_is_image_available()" },
        { "trigger": "Gtk.Clipboard.wait_is_rich_text_available", "contents": "Gtk.Clipboard.wait_is_rich_text_available(buffer)" },
        { "trigger": "Gtk.Clipboard.wait_is_target_available", "contents": "Gtk.Clipboard.wait_is_target_available(target)" },
        { "trigger": "Gtk.Clipboard.wait_is_text_available", "contents": "Gtk.Clipboard.wait_is_text_available()" },
        { "trigger": "Gtk.Clipboard.wait_is_uris_available", "contents": "Gtk.Clipboard.wait_is_uris_available()" },
        { "trigger": "Gtk.Clipboard.signals.owner_change", "contents": "Gtk.Clipboard.signals.owner_change(clipboard, event)" },
        { "trigger": "Gtk.ColorButton", "contents": "Gtk.ColorButton(*args, **kwargs)" },
        { "trigger": "Gtk.ColorButton.new", "contents": "Gtk.ColorButton.new()" },
        { "trigger": "Gtk.ColorButton.new_with_color", "contents": "Gtk.ColorButton.new_with_color(color)" },
        { "trigger": "Gtk.ColorButton.new_with_rgba", "contents": "Gtk.ColorButton.new_with_rgba(rgba)" },
        { "trigger": "Gtk.ColorButton.get_alpha", "contents": "Gtk.ColorButton.get_alpha()" },
        { "trigger": "Gtk.ColorButton.get_color", "contents": "Gtk.ColorButton.get_color()" },
        { "trigger": "Gtk.ColorButton.get_title", "contents": "Gtk.ColorButton.get_title()" },
        { "trigger": "Gtk.ColorButton.get_use_alpha", "contents": "Gtk.ColorButton.get_use_alpha()" },
        { "trigger": "Gtk.ColorButton.set_alpha", "contents": "Gtk.ColorButton.set_alpha(alpha)" },
        { "trigger": "Gtk.ColorButton.set_color", "contents": "Gtk.ColorButton.set_color(color)" },
        { "trigger": "Gtk.ColorButton.set_title", "contents": "Gtk.ColorButton.set_title(title)" },
        { "trigger": "Gtk.ColorButton.set_use_alpha", "contents": "Gtk.ColorButton.set_use_alpha(use_alpha)" },
        { "trigger": "Gtk.ColorButton.do_color_set", "contents": "Gtk.ColorButton.do_color_set()" },
        { "trigger": "Gtk.ColorButton.signals.color_set", "contents": "Gtk.ColorButton.signals.color_set(color_button)" },
        { "trigger": "Gtk.ColorButton.props.alpha", "contents": "Gtk.ColorButton.props.alpha" },
        { "trigger": "Gtk.ColorButton.props.color", "contents": "Gtk.ColorButton.props.color" },
        { "trigger": "Gtk.ColorButton.props.title", "contents": "Gtk.ColorButton.props.title" },
        { "trigger": "Gtk.ColorChooserDialog", "contents": "Gtk.ColorChooserDialog(*args, **kwargs)" },
        { "trigger": "Gtk.ColorChooserDialog.new", "contents": "Gtk.ColorChooserDialog.new(title, parent)" },
        { "trigger": "Gtk.ColorChooserDialog.props.show_editor", "contents": "Gtk.ColorChooserDialog.props.show_editor" },
        { "trigger": "Gtk.ColorChooserWidget", "contents": "Gtk.ColorChooserWidget(*args, **kwargs)" },
        { "trigger": "Gtk.ColorChooserWidget.new", "contents": "Gtk.ColorChooserWidget.new()" },
        { "trigger": "Gtk.ColorChooserWidget.props.show_editor", "contents": "Gtk.ColorChooserWidget.props.show_editor" },
        { "trigger": "Gtk.ColorSelectionDialog", "contents": "Gtk.ColorSelectionDialog(*args, **kwargs)" },
        { "trigger": "Gtk.ColorSelectionDialog.new", "contents": "Gtk.ColorSelectionDialog.new(title)" },
        { "trigger": "Gtk.ColorSelectionDialog.get_color_selection", "contents": "Gtk.ColorSelectionDialog.get_color_selection()" },
        { "trigger": "Gtk.ColorSelectionDialog.props.cancel_button", "contents": "Gtk.ColorSelectionDialog.props.cancel_button" },
        { "trigger": "Gtk.ColorSelectionDialog.props.color_selection", "contents": "Gtk.ColorSelectionDialog.props.color_selection" },
        { "trigger": "Gtk.ColorSelectionDialog.props.help_button", "contents": "Gtk.ColorSelectionDialog.props.help_button" },
        { "trigger": "Gtk.ColorSelectionDialog.props.ok_button", "contents": "Gtk.ColorSelectionDialog.props.ok_button" },
        { "trigger": "Gtk.ColorSelection", "contents": "Gtk.ColorSelection(*args, **kwargs)" },
        { "trigger": "Gtk.ColorSelection.new", "contents": "Gtk.ColorSelection.new()" },
        { "trigger": "Gtk.ColorSelection.palette_from_string", "contents": "Gtk.ColorSelection.palette_from_string(str)" },
        { "trigger": "Gtk.ColorSelection.palette_to_string", "contents": "Gtk.ColorSelection.palette_to_string(colors)" },
        { "trigger": "Gtk.ColorSelection.get_current_alpha", "contents": "Gtk.ColorSelection.get_current_alpha()" },
        { "trigger": "Gtk.ColorSelection.get_current_color", "contents": "Gtk.ColorSelection.get_current_color()" },
        { "trigger": "Gtk.ColorSelection.get_current_rgba", "contents": "Gtk.ColorSelection.get_current_rgba()" },
        { "trigger": "Gtk.ColorSelection.get_has_opacity_control", "contents": "Gtk.ColorSelection.get_has_opacity_control()" },
        { "trigger": "Gtk.ColorSelection.get_has_palette", "contents": "Gtk.ColorSelection.get_has_palette()" },
        { "trigger": "Gtk.ColorSelection.get_previous_alpha", "contents": "Gtk.ColorSelection.get_previous_alpha()" },
        { "trigger": "Gtk.ColorSelection.get_previous_color", "contents": "Gtk.ColorSelection.get_previous_color()" },
        { "trigger": "Gtk.ColorSelection.get_previous_rgba", "contents": "Gtk.ColorSelection.get_previous_rgba()" },
        { "trigger": "Gtk.ColorSelection.is_adjusting", "contents": "Gtk.ColorSelection.is_adjusting()" },
        { "trigger": "Gtk.ColorSelection.set_current_alpha", "contents": "Gtk.ColorSelection.set_current_alpha(alpha)" },
        { "trigger": "Gtk.ColorSelection.set_current_color", "contents": "Gtk.ColorSelection.set_current_color(color)" },
        { "trigger": "Gtk.ColorSelection.set_current_rgba", "contents": "Gtk.ColorSelection.set_current_rgba(rgba)" },
        { "trigger": "Gtk.ColorSelection.set_has_opacity_control", "contents": "Gtk.ColorSelection.set_has_opacity_control(has_opacity)" },
        { "trigger": "Gtk.ColorSelection.set_has_palette", "contents": "Gtk.ColorSelection.set_has_palette(has_palette)" },
        { "trigger": "Gtk.ColorSelection.set_previous_alpha", "contents": "Gtk.ColorSelection.set_previous_alpha(alpha)" },
        { "trigger": "Gtk.ColorSelection.set_previous_color", "contents": "Gtk.ColorSelection.set_previous_color(color)" },
        { "trigger": "Gtk.ColorSelection.set_previous_rgba", "contents": "Gtk.ColorSelection.set_previous_rgba(rgba)" },
        { "trigger": "Gtk.ColorSelection.do_color_changed", "contents": "Gtk.ColorSelection.do_color_changed()" },
        { "trigger": "Gtk.ColorSelection.signals.color_changed", "contents": "Gtk.ColorSelection.signals.color_changed(color_selection)" },
        { "trigger": "Gtk.ColorSelection.props.current_alpha", "contents": "Gtk.ColorSelection.props.current_alpha" },
        { "trigger": "Gtk.ColorSelection.props.current_color", "contents": "Gtk.ColorSelection.props.current_color" },
        { "trigger": "Gtk.ColorSelection.props.current_rgba", "contents": "Gtk.ColorSelection.props.current_rgba" },
        { "trigger": "Gtk.ColorSelection.props.has_opacity_control", "contents": "Gtk.ColorSelection.props.has_opacity_control" },
        { "trigger": "Gtk.ColorSelection.props.has_palette", "contents": "Gtk.ColorSelection.props.has_palette" },
        { "trigger": "Gtk.ComboBoxAccessible", "contents": "Gtk.ComboBoxAccessible(**kwargs)" },
        { "trigger": "Gtk.ComboBox", "contents": "Gtk.ComboBox(**kwargs)" },
        { "trigger": "Gtk.ComboBox.new", "contents": "Gtk.ComboBox.new()" },
        { "trigger": "Gtk.ComboBox.new_with_area", "contents": "Gtk.ComboBox.new_with_area(area)" },
        { "trigger": "Gtk.ComboBox.new_with_area_and_entry", "contents": "Gtk.ComboBox.new_with_area_and_entry(area)" },
        { "trigger": "Gtk.ComboBox.new_with_entry", "contents": "Gtk.ComboBox.new_with_entry()" },
        { "trigger": "Gtk.ComboBox.new_with_model", "contents": "Gtk.ComboBox.new_with_model(model)" },
        { "trigger": "Gtk.ComboBox.new_with_model_and_entry", "contents": "Gtk.ComboBox.new_with_model_and_entry(model)" },
        { "trigger": "Gtk.ComboBox.get_active", "contents": "Gtk.ComboBox.get_active()" },
        { "trigger": "Gtk.ComboBox.get_active_id", "contents": "Gtk.ComboBox.get_active_id()" },
        { "trigger": "Gtk.ComboBox.get_active_iter", "contents": "Gtk.ComboBox.get_active_iter()" },
        { "trigger": "Gtk.ComboBox.get_add_tearoffs", "contents": "Gtk.ComboBox.get_add_tearoffs()" },
        { "trigger": "Gtk.ComboBox.get_button_sensitivity", "contents": "Gtk.ComboBox.get_button_sensitivity()" },
        { "trigger": "Gtk.ComboBox.get_column_span_column", "contents": "Gtk.ComboBox.get_column_span_column()" },
        { "trigger": "Gtk.ComboBox.get_entry_text_column", "contents": "Gtk.ComboBox.get_entry_text_column()" },
        { "trigger": "Gtk.ComboBox.get_focus_on_click", "contents": "Gtk.ComboBox.get_focus_on_click()" },
        { "trigger": "Gtk.ComboBox.get_has_entry", "contents": "Gtk.ComboBox.get_has_entry()" },
        { "trigger": "Gtk.ComboBox.get_id_column", "contents": "Gtk.ComboBox.get_id_column()" },
        { "trigger": "Gtk.ComboBox.get_model", "contents": "Gtk.ComboBox.get_model()" },
        { "trigger": "Gtk.ComboBox.get_popup_accessible", "contents": "Gtk.ComboBox.get_popup_accessible()" },
        { "trigger": "Gtk.ComboBox.get_popup_fixed_width", "contents": "Gtk.ComboBox.get_popup_fixed_width()" },
        { "trigger": "Gtk.ComboBox.get_row_span_column", "contents": "Gtk.ComboBox.get_row_span_column()" },
        { "trigger": "Gtk.ComboBox.get_title", "contents": "Gtk.ComboBox.get_title()" },
        { "trigger": "Gtk.ComboBox.get_wrap_width", "contents": "Gtk.ComboBox.get_wrap_width()" },
        { "trigger": "Gtk.ComboBox.popdown", "contents": "Gtk.ComboBox.popdown()" },
        { "trigger": "Gtk.ComboBox.popup", "contents": "Gtk.ComboBox.popup()" },
        { "trigger": "Gtk.ComboBox.popup_for_device", "contents": "Gtk.ComboBox.popup_for_device(device)" },
        { "trigger": "Gtk.ComboBox.set_active", "contents": "Gtk.ComboBox.set_active(index_)" },
        { "trigger": "Gtk.ComboBox.set_active_id", "contents": "Gtk.ComboBox.set_active_id(active_id)" },
        { "trigger": "Gtk.ComboBox.set_active_iter", "contents": "Gtk.ComboBox.set_active_iter(iter)" },
        { "trigger": "Gtk.ComboBox.set_add_tearoffs", "contents": "Gtk.ComboBox.set_add_tearoffs(add_tearoffs)" },
        { "trigger": "Gtk.ComboBox.set_button_sensitivity", "contents": "Gtk.ComboBox.set_button_sensitivity(sensitivity)" },
        { "trigger": "Gtk.ComboBox.set_column_span_column", "contents": "Gtk.ComboBox.set_column_span_column(column_span)" },
        { "trigger": "Gtk.ComboBox.set_entry_text_column", "contents": "Gtk.ComboBox.set_entry_text_column(text_column)" },
        { "trigger": "Gtk.ComboBox.set_focus_on_click", "contents": "Gtk.ComboBox.set_focus_on_click(focus_on_click)" },
        { "trigger": "Gtk.ComboBox.set_id_column", "contents": "Gtk.ComboBox.set_id_column(id_column)" },
        { "trigger": "Gtk.ComboBox.set_model", "contents": "Gtk.ComboBox.set_model(model)" },
        { "trigger": "Gtk.ComboBox.set_popup_fixed_width", "contents": "Gtk.ComboBox.set_popup_fixed_width(fixed)" },
        { "trigger": "Gtk.ComboBox.set_row_separator_func", "contents": "Gtk.ComboBox.set_row_separator_func(func, *data)" },
        { "trigger": "Gtk.ComboBox.set_row_span_column", "contents": "Gtk.ComboBox.set_row_span_column(row_span)" },
        { "trigger": "Gtk.ComboBox.set_title", "contents": "Gtk.ComboBox.set_title(title)" },
        { "trigger": "Gtk.ComboBox.set_wrap_width", "contents": "Gtk.ComboBox.set_wrap_width(width)" },
        { "trigger": "Gtk.ComboBox.do_changed", "contents": "Gtk.ComboBox.do_changed()" },
        { "trigger": "Gtk.ComboBox.do_format_entry_text", "contents": "Gtk.ComboBox.do_format_entry_text(path)" },
        { "trigger": "Gtk.ComboBox.signals.changed", "contents": "Gtk.ComboBox.signals.changed(combo_box)" },
        { "trigger": "Gtk.ComboBox.signals.format_entry_text", "contents": "Gtk.ComboBox.signals.format_entry_text(combo_box, path)" },
        { "trigger": "Gtk.ComboBox.signals.move_active", "contents": "Gtk.ComboBox.signals.move_active(combo_box, scroll_type)" },
        { "trigger": "Gtk.ComboBox.signals.popdown", "contents": "Gtk.ComboBox.signals.popdown(combo_box)" },
        { "trigger": "Gtk.ComboBox.signals.popup", "contents": "Gtk.ComboBox.signals.popup(combo_box)" },
        { "trigger": "Gtk.ComboBox.props.active", "contents": "Gtk.ComboBox.props.active" },
        { "trigger": "Gtk.ComboBox.props.active_id", "contents": "Gtk.ComboBox.props.active_id" },
        { "trigger": "Gtk.ComboBox.props.add_tearoffs", "contents": "Gtk.ComboBox.props.add_tearoffs" },
        { "trigger": "Gtk.ComboBox.props.button_sensitivity", "contents": "Gtk.ComboBox.props.button_sensitivity" },
        { "trigger": "Gtk.ComboBox.props.cell_area", "contents": "Gtk.ComboBox.props.cell_area" },
        { "trigger": "Gtk.ComboBox.props.column_span_column", "contents": "Gtk.ComboBox.props.column_span_column" },
        { "trigger": "Gtk.ComboBox.props.entry_text_column", "contents": "Gtk.ComboBox.props.entry_text_column" },
        { "trigger": "Gtk.ComboBox.props.focus_on_click", "contents": "Gtk.ComboBox.props.focus_on_click" },
        { "trigger": "Gtk.ComboBox.props.has_entry", "contents": "Gtk.ComboBox.props.has_entry" },
        { "trigger": "Gtk.ComboBox.props.has_frame", "contents": "Gtk.ComboBox.props.has_frame" },
        { "trigger": "Gtk.ComboBox.props.id_column", "contents": "Gtk.ComboBox.props.id_column" },
        { "trigger": "Gtk.ComboBox.props.model", "contents": "Gtk.ComboBox.props.model" },
        { "trigger": "Gtk.ComboBox.props.popup_fixed_width", "contents": "Gtk.ComboBox.props.popup_fixed_width" },
        { "trigger": "Gtk.ComboBox.props.popup_shown", "contents": "Gtk.ComboBox.props.popup_shown" },
        { "trigger": "Gtk.ComboBox.props.row_span_column", "contents": "Gtk.ComboBox.props.row_span_column" },
        { "trigger": "Gtk.ComboBox.props.tearoff_title", "contents": "Gtk.ComboBox.props.tearoff_title" },
        { "trigger": "Gtk.ComboBox.props.wrap_width", "contents": "Gtk.ComboBox.props.wrap_width" },
        { "trigger": "Gtk.ComboBoxText", "contents": "Gtk.ComboBoxText(**kwargs)" },
        { "trigger": "Gtk.ComboBoxText.new", "contents": "Gtk.ComboBoxText.new()" },
        { "trigger": "Gtk.ComboBoxText.new_with_entry", "contents": "Gtk.ComboBoxText.new_with_entry()" },
        { "trigger": "Gtk.ComboBoxText.append", "contents": "Gtk.ComboBoxText.append(id, text)" },
        { "trigger": "Gtk.ComboBoxText.append_text", "contents": "Gtk.ComboBoxText.append_text(text)" },
        { "trigger": "Gtk.ComboBoxText.get_active_text", "contents": "Gtk.ComboBoxText.get_active_text()" },
        { "trigger": "Gtk.ComboBoxText.insert", "contents": "Gtk.ComboBoxText.insert(position, id, text)" },
        { "trigger": "Gtk.ComboBoxText.insert_text", "contents": "Gtk.ComboBoxText.insert_text(position, text)" },
        { "trigger": "Gtk.ComboBoxText.prepend", "contents": "Gtk.ComboBoxText.prepend(id, text)" },
        { "trigger": "Gtk.ComboBoxText.prepend_text", "contents": "Gtk.ComboBoxText.prepend_text(text)" },
        { "trigger": "Gtk.ComboBoxText.remove", "contents": "Gtk.ComboBoxText.remove(position)" },
        { "trigger": "Gtk.ComboBoxText.remove_all", "contents": "Gtk.ComboBoxText.remove_all()" },
        { "trigger": "Gtk.ContainerAccessible", "contents": "Gtk.ContainerAccessible(**kwargs)" },
        { "trigger": "Gtk.ContainerCellAccessible", "contents": "Gtk.ContainerCellAccessible(**kwargs)" },
        { "trigger": "Gtk.ContainerCellAccessible.new", "contents": "Gtk.ContainerCellAccessible.new()" },
        { "trigger": "Gtk.ContainerCellAccessible.add_child", "contents": "Gtk.ContainerCellAccessible.add_child(child)" },
        { "trigger": "Gtk.ContainerCellAccessible.get_children", "contents": "Gtk.ContainerCellAccessible.get_children()" },
        { "trigger": "Gtk.ContainerCellAccessible.remove_child", "contents": "Gtk.ContainerCellAccessible.remove_child(child)" },
        { "trigger": "Gtk.Container", "contents": "Gtk.Container(**kwargs)" },
        { "trigger": "Gtk.Container.add", "contents": "Gtk.Container.add(widget)" },
        { "trigger": "Gtk.Container.check_resize", "contents": "Gtk.Container.check_resize()" },
        { "trigger": "Gtk.Container.child_get", "contents": "Gtk.Container.child_get(child, *prop_names)" },
        { "trigger": "Gtk.Container.child_get_property", "contents": "Gtk.Container.child_get_property(child, property_name, value=None)" },
        { "trigger": "Gtk.Container.child_notify", "contents": "Gtk.Container.child_notify(child, child_property)" },
        { "trigger": "Gtk.Container.child_notify_by_pspec", "contents": "Gtk.Container.child_notify_by_pspec(child, pspec)" },
        { "trigger": "Gtk.Container.child_set", "contents": "Gtk.Container.child_set(child, **kwargs)" },
        { "trigger": "Gtk.Container.child_set_property", "contents": "Gtk.Container.child_set_property(child, property_name, value)" },
        { "trigger": "Gtk.Container.child_type", "contents": "Gtk.Container.child_type()" },
        { "trigger": "Gtk.Container.forall", "contents": "Gtk.Container.forall(callback, *callback_data)" },
        { "trigger": "Gtk.Container.foreach", "contents": "Gtk.Container.foreach(callback, *callback_data)" },
        { "trigger": "Gtk.Container.get_border_width", "contents": "Gtk.Container.get_border_width()" },
        { "trigger": "Gtk.Container.get_children", "contents": "Gtk.Container.get_children()" },
        { "trigger": "Gtk.Container.get_focus_chain", "contents": "Gtk.Container.get_focus_chain()" },
        { "trigger": "Gtk.Container.get_focus_child", "contents": "Gtk.Container.get_focus_child()" },
        { "trigger": "Gtk.Container.get_focus_hadjustment", "contents": "Gtk.Container.get_focus_hadjustment()" },
        { "trigger": "Gtk.Container.get_focus_vadjustment", "contents": "Gtk.Container.get_focus_vadjustment()" },
        { "trigger": "Gtk.Container.get_path_for_child", "contents": "Gtk.Container.get_path_for_child(child)" },
        { "trigger": "Gtk.Container.get_resize_mode", "contents": "Gtk.Container.get_resize_mode()" },
        { "trigger": "Gtk.Container.propagate_draw", "contents": "Gtk.Container.propagate_draw(child, cr)" },
        { "trigger": "Gtk.Container.remove", "contents": "Gtk.Container.remove(widget)" },
        { "trigger": "Gtk.Container.resize_children", "contents": "Gtk.Container.resize_children()" },
        { "trigger": "Gtk.Container.set_border_width", "contents": "Gtk.Container.set_border_width(border_width)" },
        { "trigger": "Gtk.Container.set_focus_chain", "contents": "Gtk.Container.set_focus_chain(focusable_widgets)" },
        { "trigger": "Gtk.Container.set_focus_child", "contents": "Gtk.Container.set_focus_child(child)" },
        { "trigger": "Gtk.Container.set_focus_hadjustment", "contents": "Gtk.Container.set_focus_hadjustment(adjustment)" },
        { "trigger": "Gtk.Container.set_focus_vadjustment", "contents": "Gtk.Container.set_focus_vadjustment(adjustment)" },
        { "trigger": "Gtk.Container.set_reallocate_redraws", "contents": "Gtk.Container.set_reallocate_redraws(needs_redraws)" },
        { "trigger": "Gtk.Container.set_resize_mode", "contents": "Gtk.Container.set_resize_mode(resize_mode)" },
        { "trigger": "Gtk.Container.unset_focus_chain", "contents": "Gtk.Container.unset_focus_chain()" },
        { "trigger": "Gtk.Container.do_add", "contents": "Gtk.Container.do_add(widget)" },
        { "trigger": "Gtk.Container.do_check_resize", "contents": "Gtk.Container.do_check_resize()" },
        { "trigger": "Gtk.Container.do_child_type", "contents": "Gtk.Container.do_child_type()" },
        { "trigger": "Gtk.Container.do_composite_name", "contents": "Gtk.Container.do_composite_name(child)" },
        { "trigger": "Gtk.Container.do_forall", "contents": "Gtk.Container.do_forall(include_internals, callback, callback_data)" },
        { "trigger": "Gtk.Container.do_get_child_property", "contents": "Gtk.Container.do_get_child_property(child, property_id, value, pspec)" },
        { "trigger": "Gtk.Container.do_get_path_for_child", "contents": "Gtk.Container.do_get_path_for_child(child)" },
        { "trigger": "Gtk.Container.do_remove", "contents": "Gtk.Container.do_remove(widget)" },
        { "trigger": "Gtk.Container.do_set_child_property", "contents": "Gtk.Container.do_set_child_property(child, property_id, value, pspec)" },
        { "trigger": "Gtk.Container.do_set_focus_child", "contents": "Gtk.Container.do_set_focus_child(child)" },
        { "trigger": "Gtk.Container.signals.add", "contents": "Gtk.Container.signals.add(container, object)" },
        { "trigger": "Gtk.Container.signals.check_resize", "contents": "Gtk.Container.signals.check_resize(container)" },
        { "trigger": "Gtk.Container.signals.remove", "contents": "Gtk.Container.signals.remove(container, object)" },
        { "trigger": "Gtk.Container.signals.set_focus_child", "contents": "Gtk.Container.signals.set_focus_child(container, object)" },
        { "trigger": "Gtk.Container.props.border_width", "contents": "Gtk.Container.props.border_width" },
        { "trigger": "Gtk.Container.props.child", "contents": "Gtk.Container.props.child" },
        { "trigger": "Gtk.Container.props.resize_mode", "contents": "Gtk.Container.props.resize_mode" },
        { "trigger": "Gtk.CssProvider", "contents": "Gtk.CssProvider(**kwargs)" },
        { "trigger": "Gtk.CssProvider.get_default", "contents": "Gtk.CssProvider.get_default()" },
        { "trigger": "Gtk.CssProvider.get_named", "contents": "Gtk.CssProvider.get_named(name, variant)" },
        { "trigger": "Gtk.CssProvider.new", "contents": "Gtk.CssProvider.new()" },
        { "trigger": "Gtk.CssProvider.load_from_data", "contents": "Gtk.CssProvider.load_from_data(data)" },
        { "trigger": "Gtk.CssProvider.load_from_file", "contents": "Gtk.CssProvider.load_from_file(file)" },
        { "trigger": "Gtk.CssProvider.load_from_path", "contents": "Gtk.CssProvider.load_from_path(path)" },
        { "trigger": "Gtk.CssProvider.load_from_resource", "contents": "Gtk.CssProvider.load_from_resource(resource_path)" },
        { "trigger": "Gtk.CssProvider.to_string", "contents": "Gtk.CssProvider.to_string()" },
        { "trigger": "Gtk.CssProvider.do_parsing_error", "contents": "Gtk.CssProvider.do_parsing_error(section, error)" },
        { "trigger": "Gtk.CssProvider.signals.parsing_error", "contents": "Gtk.CssProvider.signals.parsing_error(css_provider, section, error)" },
        { "trigger": "Gtk.Dialog", "contents": "Gtk.Dialog(*args, **kwargs)" },
        { "trigger": "Gtk.Dialog.new", "contents": "Gtk.Dialog.new()" },
        { "trigger": "Gtk.Dialog.add_action_widget", "contents": "Gtk.Dialog.add_action_widget(child, response_id)" },
        { "trigger": "Gtk.Dialog.add_button", "contents": "Gtk.Dialog.add_button(button_text, response_id)" },
        { "trigger": "Gtk.Dialog.add_buttons", "contents": "Gtk.Dialog.add_buttons(*args)" },
        { "trigger": "Gtk.Dialog.get_action_area", "contents": "Gtk.Dialog.get_action_area()" },
        { "trigger": "Gtk.Dialog.get_content_area", "contents": "Gtk.Dialog.get_content_area()" },
        { "trigger": "Gtk.Dialog.get_header_bar", "contents": "Gtk.Dialog.get_header_bar()" },
        { "trigger": "Gtk.Dialog.get_response_for_widget", "contents": "Gtk.Dialog.get_response_for_widget(widget)" },
        { "trigger": "Gtk.Dialog.get_widget_for_response", "contents": "Gtk.Dialog.get_widget_for_response(response_id)" },
        { "trigger": "Gtk.Dialog.response", "contents": "Gtk.Dialog.response(response_id)" },
        { "trigger": "Gtk.Dialog.run", "contents": "Gtk.Dialog.run()" },
        { "trigger": "Gtk.Dialog.set_alternative_button_order_from_array", "contents": "Gtk.Dialog.set_alternative_button_order_from_array(new_order)" },
        { "trigger": "Gtk.Dialog.set_default_response", "contents": "Gtk.Dialog.set_default_response(response_id)" },
        { "trigger": "Gtk.Dialog.set_response_sensitive", "contents": "Gtk.Dialog.set_response_sensitive(response_id, setting)" },
        { "trigger": "Gtk.Dialog.do_close", "contents": "Gtk.Dialog.do_close()" },
        { "trigger": "Gtk.Dialog.do_response", "contents": "Gtk.Dialog.do_response(response_id)" },
        { "trigger": "Gtk.Dialog.signals.close", "contents": "Gtk.Dialog.signals.close(dialog)" },
        { "trigger": "Gtk.Dialog.signals.response", "contents": "Gtk.Dialog.signals.response(dialog, response_id)" },
        { "trigger": "Gtk.Dialog.props.use_header_bar", "contents": "Gtk.Dialog.props.use_header_bar" },
        { "trigger": "Gtk.DrawingArea", "contents": "Gtk.DrawingArea(**kwargs)" },
        { "trigger": "Gtk.DrawingArea.new", "contents": "Gtk.DrawingArea.new()" },
        { "trigger": "Gtk.EntryAccessible", "contents": "Gtk.EntryAccessible(**kwargs)" },
        { "trigger": "Gtk.EntryBuffer", "contents": "Gtk.EntryBuffer(**kwargs)" },
        { "trigger": "Gtk.EntryBuffer.new", "contents": "Gtk.EntryBuffer.new(initial_chars, n_initial_chars)" },
        { "trigger": "Gtk.EntryBuffer.delete_text", "contents": "Gtk.EntryBuffer.delete_text(position, n_chars)" },
        { "trigger": "Gtk.EntryBuffer.emit_deleted_text", "contents": "Gtk.EntryBuffer.emit_deleted_text(position, n_chars)" },
        { "trigger": "Gtk.EntryBuffer.emit_inserted_text", "contents": "Gtk.EntryBuffer.emit_inserted_text(position, chars, n_chars)" },
        { "trigger": "Gtk.EntryBuffer.get_bytes", "contents": "Gtk.EntryBuffer.get_bytes()" },
        { "trigger": "Gtk.EntryBuffer.get_length", "contents": "Gtk.EntryBuffer.get_length()" },
        { "trigger": "Gtk.EntryBuffer.get_max_length", "contents": "Gtk.EntryBuffer.get_max_length()" },
        { "trigger": "Gtk.EntryBuffer.get_text", "contents": "Gtk.EntryBuffer.get_text()" },
        { "trigger": "Gtk.EntryBuffer.insert_text", "contents": "Gtk.EntryBuffer.insert_text(position, chars, n_chars)" },
        { "trigger": "Gtk.EntryBuffer.set_max_length", "contents": "Gtk.EntryBuffer.set_max_length(max_length)" },
        { "trigger": "Gtk.EntryBuffer.set_text", "contents": "Gtk.EntryBuffer.set_text(chars, n_chars)" },
        { "trigger": "Gtk.EntryBuffer.do_delete_text", "contents": "Gtk.EntryBuffer.do_delete_text(position, n_chars)" },
        { "trigger": "Gtk.EntryBuffer.do_deleted_text", "contents": "Gtk.EntryBuffer.do_deleted_text(position, n_chars)" },
        { "trigger": "Gtk.EntryBuffer.do_get_length", "contents": "Gtk.EntryBuffer.do_get_length()" },
        { "trigger": "Gtk.EntryBuffer.do_get_text", "contents": "Gtk.EntryBuffer.do_get_text(n_bytes)" },
        { "trigger": "Gtk.EntryBuffer.do_insert_text", "contents": "Gtk.EntryBuffer.do_insert_text(position, chars, n_chars)" },
        { "trigger": "Gtk.EntryBuffer.do_inserted_text", "contents": "Gtk.EntryBuffer.do_inserted_text(position, chars, n_chars)" },
        { "trigger": "Gtk.EntryBuffer.signals.deleted_text", "contents": "Gtk.EntryBuffer.signals.deleted_text(entry_buffer, position, n_chars)" },
        { "trigger": "Gtk.EntryBuffer.signals.inserted_text", "contents": "Gtk.EntryBuffer.signals.inserted_text(entry_buffer, position, chars, n_chars)" },
        { "trigger": "Gtk.EntryBuffer.props.length", "contents": "Gtk.EntryBuffer.props.length" },
        { "trigger": "Gtk.EntryBuffer.props.max_length", "contents": "Gtk.EntryBuffer.props.max_length" },
        { "trigger": "Gtk.EntryBuffer.props.text", "contents": "Gtk.EntryBuffer.props.text" },
        { "trigger": "Gtk.EntryCompletion", "contents": "Gtk.EntryCompletion(**kwargs)" },
        { "trigger": "Gtk.EntryCompletion.new", "contents": "Gtk.EntryCompletion.new()" },
        { "trigger": "Gtk.EntryCompletion.new_with_area", "contents": "Gtk.EntryCompletion.new_with_area(area)" },
        { "trigger": "Gtk.EntryCompletion.complete", "contents": "Gtk.EntryCompletion.complete()" },
        { "trigger": "Gtk.EntryCompletion.compute_prefix", "contents": "Gtk.EntryCompletion.compute_prefix(key)" },
        { "trigger": "Gtk.EntryCompletion.delete_action", "contents": "Gtk.EntryCompletion.delete_action(index_)" },
        { "trigger": "Gtk.EntryCompletion.get_completion_prefix", "contents": "Gtk.EntryCompletion.get_completion_prefix()" },
        { "trigger": "Gtk.EntryCompletion.get_entry", "contents": "Gtk.EntryCompletion.get_entry()" },
        { "trigger": "Gtk.EntryCompletion.get_inline_completion", "contents": "Gtk.EntryCompletion.get_inline_completion()" },
        { "trigger": "Gtk.EntryCompletion.get_inline_selection", "contents": "Gtk.EntryCompletion.get_inline_selection()" },
        { "trigger": "Gtk.EntryCompletion.get_minimum_key_length", "contents": "Gtk.EntryCompletion.get_minimum_key_length()" },
        { "trigger": "Gtk.EntryCompletion.get_model", "contents": "Gtk.EntryCompletion.get_model()" },
        { "trigger": "Gtk.EntryCompletion.get_popup_completion", "contents": "Gtk.EntryCompletion.get_popup_completion()" },
        { "trigger": "Gtk.EntryCompletion.get_popup_set_width", "contents": "Gtk.EntryCompletion.get_popup_set_width()" },
        { "trigger": "Gtk.EntryCompletion.get_popup_single_match", "contents": "Gtk.EntryCompletion.get_popup_single_match()" },
        { "trigger": "Gtk.EntryCompletion.get_text_column", "contents": "Gtk.EntryCompletion.get_text_column()" },
        { "trigger": "Gtk.EntryCompletion.insert_action_markup", "contents": "Gtk.EntryCompletion.insert_action_markup(index_, markup)" },
        { "trigger": "Gtk.EntryCompletion.insert_action_text", "contents": "Gtk.EntryCompletion.insert_action_text(index_, text)" },
        { "trigger": "Gtk.EntryCompletion.insert_prefix", "contents": "Gtk.EntryCompletion.insert_prefix()" },
        { "trigger": "Gtk.EntryCompletion.set_inline_completion", "contents": "Gtk.EntryCompletion.set_inline_completion(inline_completion)" },
        { "trigger": "Gtk.EntryCompletion.set_inline_selection", "contents": "Gtk.EntryCompletion.set_inline_selection(inline_selection)" },
        { "trigger": "Gtk.EntryCompletion.set_match_func", "contents": "Gtk.EntryCompletion.set_match_func(func, *func_data)" },
        { "trigger": "Gtk.EntryCompletion.set_minimum_key_length", "contents": "Gtk.EntryCompletion.set_minimum_key_length(length)" },
        { "trigger": "Gtk.EntryCompletion.set_model", "contents": "Gtk.EntryCompletion.set_model(model)" },
        { "trigger": "Gtk.EntryCompletion.set_popup_completion", "contents": "Gtk.EntryCompletion.set_popup_completion(popup_completion)" },
        { "trigger": "Gtk.EntryCompletion.set_popup_set_width", "contents": "Gtk.EntryCompletion.set_popup_set_width(popup_set_width)" },
        { "trigger": "Gtk.EntryCompletion.set_popup_single_match", "contents": "Gtk.EntryCompletion.set_popup_single_match(popup_single_match)" },
        { "trigger": "Gtk.EntryCompletion.set_text_column", "contents": "Gtk.EntryCompletion.set_text_column(column)" },
        { "trigger": "Gtk.EntryCompletion.do_action_activated", "contents": "Gtk.EntryCompletion.do_action_activated(index_)" },
        { "trigger": "Gtk.EntryCompletion.do_cursor_on_match", "contents": "Gtk.EntryCompletion.do_cursor_on_match(model, iter)" },
        { "trigger": "Gtk.EntryCompletion.do_insert_prefix", "contents": "Gtk.EntryCompletion.do_insert_prefix(prefix)" },
        { "trigger": "Gtk.EntryCompletion.do_match_selected", "contents": "Gtk.EntryCompletion.do_match_selected(model, iter)" },
        { "trigger": "Gtk.EntryCompletion.do_no_matches", "contents": "Gtk.EntryCompletion.do_no_matches()" },
        { "trigger": "Gtk.EntryCompletion.signals.action_activated", "contents": "Gtk.EntryCompletion.signals.action_activated(entry_completion, index)" },
        { "trigger": "Gtk.EntryCompletion.signals.cursor_on_match", "contents": "Gtk.EntryCompletion.signals.cursor_on_match(entry_completion, model, iter)" },
        { "trigger": "Gtk.EntryCompletion.signals.insert_prefix", "contents": "Gtk.EntryCompletion.signals.insert_prefix(entry_completion, prefix)" },
        { "trigger": "Gtk.EntryCompletion.signals.match_selected", "contents": "Gtk.EntryCompletion.signals.match_selected(entry_completion, model, iter)" },
        { "trigger": "Gtk.EntryCompletion.signals.no_matches", "contents": "Gtk.EntryCompletion.signals.no_matches(entry_completion)" },
        { "trigger": "Gtk.EntryCompletion.props.cell_area", "contents": "Gtk.EntryCompletion.props.cell_area" },
        { "trigger": "Gtk.EntryCompletion.props.inline_completion", "contents": "Gtk.EntryCompletion.props.inline_completion" },
        { "trigger": "Gtk.EntryCompletion.props.inline_selection", "contents": "Gtk.EntryCompletion.props.inline_selection" },
        { "trigger": "Gtk.EntryCompletion.props.minimum_key_length", "contents": "Gtk.EntryCompletion.props.minimum_key_length" },
        { "trigger": "Gtk.EntryCompletion.props.model", "contents": "Gtk.EntryCompletion.props.model" },
        { "trigger": "Gtk.EntryCompletion.props.popup_completion", "contents": "Gtk.EntryCompletion.props.popup_completion" },
        { "trigger": "Gtk.EntryCompletion.props.popup_set_width", "contents": "Gtk.EntryCompletion.props.popup_set_width" },
        { "trigger": "Gtk.EntryCompletion.props.popup_single_match", "contents": "Gtk.EntryCompletion.props.popup_single_match" },
        { "trigger": "Gtk.EntryCompletion.props.text_column", "contents": "Gtk.EntryCompletion.props.text_column" },
        { "trigger": "Gtk.Entry", "contents": "Gtk.Entry(**kwargs)" },
        { "trigger": "Gtk.Entry.new", "contents": "Gtk.Entry.new()" },
        { "trigger": "Gtk.Entry.new_with_buffer", "contents": "Gtk.Entry.new_with_buffer(buffer)" },
        { "trigger": "Gtk.Entry.get_activates_default", "contents": "Gtk.Entry.get_activates_default()" },
        { "trigger": "Gtk.Entry.get_alignment", "contents": "Gtk.Entry.get_alignment()" },
        { "trigger": "Gtk.Entry.get_attributes", "contents": "Gtk.Entry.get_attributes()" },
        { "trigger": "Gtk.Entry.get_buffer", "contents": "Gtk.Entry.get_buffer()" },
        { "trigger": "Gtk.Entry.get_completion", "contents": "Gtk.Entry.get_completion()" },
        { "trigger": "Gtk.Entry.get_current_icon_drag_source", "contents": "Gtk.Entry.get_current_icon_drag_source()" },
        { "trigger": "Gtk.Entry.get_cursor_hadjustment", "contents": "Gtk.Entry.get_cursor_hadjustment()" },
        { "trigger": "Gtk.Entry.get_has_frame", "contents": "Gtk.Entry.get_has_frame()" },
        { "trigger": "Gtk.Entry.get_icon_activatable", "contents": "Gtk.Entry.get_icon_activatable(icon_pos)" },
        { "trigger": "Gtk.Entry.get_icon_area", "contents": "Gtk.Entry.get_icon_area(icon_pos)" },
        { "trigger": "Gtk.Entry.get_icon_at_pos", "contents": "Gtk.Entry.get_icon_at_pos(x, y)" },
        { "trigger": "Gtk.Entry.get_icon_gicon", "contents": "Gtk.Entry.get_icon_gicon(icon_pos)" },
        { "trigger": "Gtk.Entry.get_icon_name", "contents": "Gtk.Entry.get_icon_name(icon_pos)" },
        { "trigger": "Gtk.Entry.get_icon_pixbuf", "contents": "Gtk.Entry.get_icon_pixbuf(icon_pos)" },
        { "trigger": "Gtk.Entry.get_icon_sensitive", "contents": "Gtk.Entry.get_icon_sensitive(icon_pos)" },
        { "trigger": "Gtk.Entry.get_icon_stock", "contents": "Gtk.Entry.get_icon_stock(icon_pos)" },
        { "trigger": "Gtk.Entry.get_icon_storage_type", "contents": "Gtk.Entry.get_icon_storage_type(icon_pos)" },
        { "trigger": "Gtk.Entry.get_icon_tooltip_markup", "contents": "Gtk.Entry.get_icon_tooltip_markup(icon_pos)" },
        { "trigger": "Gtk.Entry.get_icon_tooltip_text", "contents": "Gtk.Entry.get_icon_tooltip_text(icon_pos)" },
        { "trigger": "Gtk.Entry.get_inner_border", "contents": "Gtk.Entry.get_inner_border()" },
        { "trigger": "Gtk.Entry.get_input_hints", "contents": "Gtk.Entry.get_input_hints()" },
        { "trigger": "Gtk.Entry.get_input_purpose", "contents": "Gtk.Entry.get_input_purpose()" },
        { "trigger": "Gtk.Entry.get_invisible_char", "contents": "Gtk.Entry.get_invisible_char()" },
        { "trigger": "Gtk.Entry.get_layout", "contents": "Gtk.Entry.get_layout()" },
        { "trigger": "Gtk.Entry.get_layout_offsets", "contents": "Gtk.Entry.get_layout_offsets()" },
        { "trigger": "Gtk.Entry.get_max_length", "contents": "Gtk.Entry.get_max_length()" },
        { "trigger": "Gtk.Entry.get_max_width_chars", "contents": "Gtk.Entry.get_max_width_chars()" },
        { "trigger": "Gtk.Entry.get_overwrite_mode", "contents": "Gtk.Entry.get_overwrite_mode()" },
        { "trigger": "Gtk.Entry.get_placeholder_text", "contents": "Gtk.Entry.get_placeholder_text()" },
        { "trigger": "Gtk.Entry.get_progress_fraction", "contents": "Gtk.Entry.get_progress_fraction()" },
        { "trigger": "Gtk.Entry.get_progress_pulse_step", "contents": "Gtk.Entry.get_progress_pulse_step()" },
        { "trigger": "Gtk.Entry.get_tabs", "contents": "Gtk.Entry.get_tabs()" },
        { "trigger": "Gtk.Entry.get_text", "contents": "Gtk.Entry.get_text()" },
        { "trigger": "Gtk.Entry.get_text_area", "contents": "Gtk.Entry.get_text_area()" },
        { "trigger": "Gtk.Entry.get_text_length", "contents": "Gtk.Entry.get_text_length()" },
        { "trigger": "Gtk.Entry.get_visibility", "contents": "Gtk.Entry.get_visibility()" },
        { "trigger": "Gtk.Entry.get_width_chars", "contents": "Gtk.Entry.get_width_chars()" },
        { "trigger": "Gtk.Entry.grab_focus_without_selecting", "contents": "Gtk.Entry.grab_focus_without_selecting()" },
        { "trigger": "Gtk.Entry.im_context_filter_keypress", "contents": "Gtk.Entry.im_context_filter_keypress(event)" },
        { "trigger": "Gtk.Entry.layout_index_to_text_index", "contents": "Gtk.Entry.layout_index_to_text_index(layout_index)" },
        { "trigger": "Gtk.Entry.progress_pulse", "contents": "Gtk.Entry.progress_pulse()" },
        { "trigger": "Gtk.Entry.reset_im_context", "contents": "Gtk.Entry.reset_im_context()" },
        { "trigger": "Gtk.Entry.set_activates_default", "contents": "Gtk.Entry.set_activates_default(setting)" },
        { "trigger": "Gtk.Entry.set_alignment", "contents": "Gtk.Entry.set_alignment(xalign)" },
        { "trigger": "Gtk.Entry.set_attributes", "contents": "Gtk.Entry.set_attributes(attrs)" },
        { "trigger": "Gtk.Entry.set_buffer", "contents": "Gtk.Entry.set_buffer(buffer)" },
        { "trigger": "Gtk.Entry.set_completion", "contents": "Gtk.Entry.set_completion(completion)" },
        { "trigger": "Gtk.Entry.set_cursor_hadjustment", "contents": "Gtk.Entry.set_cursor_hadjustment(adjustment)" },
        { "trigger": "Gtk.Entry.set_has_frame", "contents": "Gtk.Entry.set_has_frame(setting)" },
        { "trigger": "Gtk.Entry.set_icon_activatable", "contents": "Gtk.Entry.set_icon_activatable(icon_pos, activatable)" },
        { "trigger": "Gtk.Entry.set_icon_drag_source", "contents": "Gtk.Entry.set_icon_drag_source(icon_pos, target_list, actions)" },
        { "trigger": "Gtk.Entry.set_icon_from_gicon", "contents": "Gtk.Entry.set_icon_from_gicon(icon_pos, icon)" },
        { "trigger": "Gtk.Entry.set_icon_from_icon_name", "contents": "Gtk.Entry.set_icon_from_icon_name(icon_pos, icon_name)" },
        { "trigger": "Gtk.Entry.set_icon_from_pixbuf", "contents": "Gtk.Entry.set_icon_from_pixbuf(icon_pos, pixbuf)" },
        { "trigger": "Gtk.Entry.set_icon_from_stock", "contents": "Gtk.Entry.set_icon_from_stock(icon_pos, stock_id)" },
        { "trigger": "Gtk.Entry.set_icon_sensitive", "contents": "Gtk.Entry.set_icon_sensitive(icon_pos, sensitive)" },
        { "trigger": "Gtk.Entry.set_icon_tooltip_markup", "contents": "Gtk.Entry.set_icon_tooltip_markup(icon_pos, tooltip)" },
        { "trigger": "Gtk.Entry.set_icon_tooltip_text", "contents": "Gtk.Entry.set_icon_tooltip_text(icon_pos, tooltip)" },
        { "trigger": "Gtk.Entry.set_inner_border", "contents": "Gtk.Entry.set_inner_border(border)" },
        { "trigger": "Gtk.Entry.set_input_hints", "contents": "Gtk.Entry.set_input_hints(hints)" },
        { "trigger": "Gtk.Entry.set_input_purpose", "contents": "Gtk.Entry.set_input_purpose(purpose)" },
        { "trigger": "Gtk.Entry.set_invisible_char", "contents": "Gtk.Entry.set_invisible_char(ch)" },
        { "trigger": "Gtk.Entry.set_max_length", "contents": "Gtk.Entry.set_max_length(max)" },
        { "trigger": "Gtk.Entry.set_max_width_chars", "contents": "Gtk.Entry.set_max_width_chars(n_chars)" },
        { "trigger": "Gtk.Entry.set_overwrite_mode", "contents": "Gtk.Entry.set_overwrite_mode(overwrite)" },
        { "trigger": "Gtk.Entry.set_placeholder_text", "contents": "Gtk.Entry.set_placeholder_text(text)" },
        { "trigger": "Gtk.Entry.set_progress_fraction", "contents": "Gtk.Entry.set_progress_fraction(fraction)" },
        { "trigger": "Gtk.Entry.set_progress_pulse_step", "contents": "Gtk.Entry.set_progress_pulse_step(fraction)" },
        { "trigger": "Gtk.Entry.set_tabs", "contents": "Gtk.Entry.set_tabs(tabs)" },
        { "trigger": "Gtk.Entry.set_text", "contents": "Gtk.Entry.set_text(text)" },
        { "trigger": "Gtk.Entry.set_visibility", "contents": "Gtk.Entry.set_visibility(visible)" },
        { "trigger": "Gtk.Entry.set_width_chars", "contents": "Gtk.Entry.set_width_chars(n_chars)" },
        { "trigger": "Gtk.Entry.text_index_to_layout_index", "contents": "Gtk.Entry.text_index_to_layout_index(text_index)" },
        { "trigger": "Gtk.Entry.unset_invisible_char", "contents": "Gtk.Entry.unset_invisible_char()" },
        { "trigger": "Gtk.Entry.do_activate", "contents": "Gtk.Entry.do_activate()" },
        { "trigger": "Gtk.Entry.do_backspace", "contents": "Gtk.Entry.do_backspace()" },
        { "trigger": "Gtk.Entry.do_copy_clipboard", "contents": "Gtk.Entry.do_copy_clipboard()" },
        { "trigger": "Gtk.Entry.do_cut_clipboard", "contents": "Gtk.Entry.do_cut_clipboard()" },
        { "trigger": "Gtk.Entry.do_delete_from_cursor", "contents": "Gtk.Entry.do_delete_from_cursor(type, count)" },
        { "trigger": "Gtk.Entry.do_get_frame_size", "contents": "Gtk.Entry.do_get_frame_size(x, y, width, height)" },
        { "trigger": "Gtk.Entry.do_get_text_area_size", "contents": "Gtk.Entry.do_get_text_area_size(x, y, width, height)" },
        { "trigger": "Gtk.Entry.do_insert_at_cursor", "contents": "Gtk.Entry.do_insert_at_cursor(str)" },
        { "trigger": "Gtk.Entry.do_move_cursor", "contents": "Gtk.Entry.do_move_cursor(step, count, extend_selection)" },
        { "trigger": "Gtk.Entry.do_paste_clipboard", "contents": "Gtk.Entry.do_paste_clipboard()" },
        { "trigger": "Gtk.Entry.do_populate_popup", "contents": "Gtk.Entry.do_populate_popup(popup)" },
        { "trigger": "Gtk.Entry.do_toggle_overwrite", "contents": "Gtk.Entry.do_toggle_overwrite()" },
        { "trigger": "Gtk.Entry.signals.activate", "contents": "Gtk.Entry.signals.activate(entry)" },
        { "trigger": "Gtk.Entry.signals.backspace", "contents": "Gtk.Entry.signals.backspace(entry)" },
        { "trigger": "Gtk.Entry.signals.copy_clipboard", "contents": "Gtk.Entry.signals.copy_clipboard(entry)" },
        { "trigger": "Gtk.Entry.signals.cut_clipboard", "contents": "Gtk.Entry.signals.cut_clipboard(entry)" },
        { "trigger": "Gtk.Entry.signals.delete_from_cursor", "contents": "Gtk.Entry.signals.delete_from_cursor(entry, type, count)" },
        { "trigger": "Gtk.Entry.signals.icon_press", "contents": "Gtk.Entry.signals.icon_press(entry, icon_pos, event)" },
        { "trigger": "Gtk.Entry.signals.icon_release", "contents": "Gtk.Entry.signals.icon_release(entry, icon_pos, event)" },
        { "trigger": "Gtk.Entry.signals.insert_at_cursor", "contents": "Gtk.Entry.signals.insert_at_cursor(entry, string)" },
        { "trigger": "Gtk.Entry.signals.move_cursor", "contents": "Gtk.Entry.signals.move_cursor(entry, step, count, extend_selection)" },
        { "trigger": "Gtk.Entry.signals.paste_clipboard", "contents": "Gtk.Entry.signals.paste_clipboard(entry)" },
        { "trigger": "Gtk.Entry.signals.populate_popup", "contents": "Gtk.Entry.signals.populate_popup(entry, popup)" },
        { "trigger": "Gtk.Entry.signals.preedit_changed", "contents": "Gtk.Entry.signals.preedit_changed(entry, preedit)" },
        { "trigger": "Gtk.Entry.signals.toggle_overwrite", "contents": "Gtk.Entry.signals.toggle_overwrite(entry)" },
        { "trigger": "Gtk.Entry.props.activates_default", "contents": "Gtk.Entry.props.activates_default" },
        { "trigger": "Gtk.Entry.props.attributes", "contents": "Gtk.Entry.props.attributes" },
        { "trigger": "Gtk.Entry.props.buffer", "contents": "Gtk.Entry.props.buffer" },
        { "trigger": "Gtk.Entry.props.caps_lock_warning", "contents": "Gtk.Entry.props.caps_lock_warning" },
        { "trigger": "Gtk.Entry.props.completion", "contents": "Gtk.Entry.props.completion" },
        { "trigger": "Gtk.Entry.props.cursor_position", "contents": "Gtk.Entry.props.cursor_position" },
        { "trigger": "Gtk.Entry.props.editable", "contents": "Gtk.Entry.props.editable" },
        { "trigger": "Gtk.Entry.props.has_frame", "contents": "Gtk.Entry.props.has_frame" },
        { "trigger": "Gtk.Entry.props.im_module", "contents": "Gtk.Entry.props.im_module" },
        { "trigger": "Gtk.Entry.props.inner_border", "contents": "Gtk.Entry.props.inner_border" },
        { "trigger": "Gtk.Entry.props.input_hints", "contents": "Gtk.Entry.props.input_hints" },
        { "trigger": "Gtk.Entry.props.input_purpose", "contents": "Gtk.Entry.props.input_purpose" },
        { "trigger": "Gtk.Entry.props.invisible_char", "contents": "Gtk.Entry.props.invisible_char" },
        { "trigger": "Gtk.Entry.props.invisible_char_set", "contents": "Gtk.Entry.props.invisible_char_set" },
        { "trigger": "Gtk.Entry.props.max_length", "contents": "Gtk.Entry.props.max_length" },
        { "trigger": "Gtk.Entry.props.max_width_chars", "contents": "Gtk.Entry.props.max_width_chars" },
        { "trigger": "Gtk.Entry.props.overwrite_mode", "contents": "Gtk.Entry.props.overwrite_mode" },
        { "trigger": "Gtk.Entry.props.placeholder_text", "contents": "Gtk.Entry.props.placeholder_text" },
        { "trigger": "Gtk.Entry.props.populate_all", "contents": "Gtk.Entry.props.populate_all" },
        { "trigger": "Gtk.Entry.props.primary_icon_activatable", "contents": "Gtk.Entry.props.primary_icon_activatable" },
        { "trigger": "Gtk.Entry.props.primary_icon_gicon", "contents": "Gtk.Entry.props.primary_icon_gicon" },
        { "trigger": "Gtk.Entry.props.primary_icon_name", "contents": "Gtk.Entry.props.primary_icon_name" },
        { "trigger": "Gtk.Entry.props.primary_icon_pixbuf", "contents": "Gtk.Entry.props.primary_icon_pixbuf" },
        { "trigger": "Gtk.Entry.props.primary_icon_sensitive", "contents": "Gtk.Entry.props.primary_icon_sensitive" },
        { "trigger": "Gtk.Entry.props.primary_icon_stock", "contents": "Gtk.Entry.props.primary_icon_stock" },
        { "trigger": "Gtk.Entry.props.primary_icon_storage_type", "contents": "Gtk.Entry.props.primary_icon_storage_type" },
        { "trigger": "Gtk.Entry.props.primary_icon_tooltip_markup", "contents": "Gtk.Entry.props.primary_icon_tooltip_markup" },
        { "trigger": "Gtk.Entry.props.primary_icon_tooltip_text", "contents": "Gtk.Entry.props.primary_icon_tooltip_text" },
        { "trigger": "Gtk.Entry.props.progress_fraction", "contents": "Gtk.Entry.props.progress_fraction" },
        { "trigger": "Gtk.Entry.props.progress_pulse_step", "contents": "Gtk.Entry.props.progress_pulse_step" },
        { "trigger": "Gtk.Entry.props.scroll_offset", "contents": "Gtk.Entry.props.scroll_offset" },
        { "trigger": "Gtk.Entry.props.secondary_icon_activatable", "contents": "Gtk.Entry.props.secondary_icon_activatable" },
        { "trigger": "Gtk.Entry.props.secondary_icon_gicon", "contents": "Gtk.Entry.props.secondary_icon_gicon" },
        { "trigger": "Gtk.Entry.props.secondary_icon_name", "contents": "Gtk.Entry.props.secondary_icon_name" },
        { "trigger": "Gtk.Entry.props.secondary_icon_pixbuf", "contents": "Gtk.Entry.props.secondary_icon_pixbuf" },
        { "trigger": "Gtk.Entry.props.secondary_icon_sensitive", "contents": "Gtk.Entry.props.secondary_icon_sensitive" },
        { "trigger": "Gtk.Entry.props.secondary_icon_stock", "contents": "Gtk.Entry.props.secondary_icon_stock" },
        { "trigger": "Gtk.Entry.props.secondary_icon_storage_type", "contents": "Gtk.Entry.props.secondary_icon_storage_type" },
        { "trigger": "Gtk.Entry.props.secondary_icon_tooltip_markup", "contents": "Gtk.Entry.props.secondary_icon_tooltip_markup" },
        { "trigger": "Gtk.Entry.props.secondary_icon_tooltip_text", "contents": "Gtk.Entry.props.secondary_icon_tooltip_text" },
        { "trigger": "Gtk.Entry.props.selection_bound", "contents": "Gtk.Entry.props.selection_bound" },
        { "trigger": "Gtk.Entry.props.shadow_type", "contents": "Gtk.Entry.props.shadow_type" },
        { "trigger": "Gtk.Entry.props.tabs", "contents": "Gtk.Entry.props.tabs" },
        { "trigger": "Gtk.Entry.props.text", "contents": "Gtk.Entry.props.text" },
        { "trigger": "Gtk.Entry.props.text_length", "contents": "Gtk.Entry.props.text_length" },
        { "trigger": "Gtk.Entry.props.truncate_multiline", "contents": "Gtk.Entry.props.truncate_multiline" },
        { "trigger": "Gtk.Entry.props.visibility", "contents": "Gtk.Entry.props.visibility" },
        { "trigger": "Gtk.Entry.props.width_chars", "contents": "Gtk.Entry.props.width_chars" },
        { "trigger": "Gtk.Entry.props.xalign", "contents": "Gtk.Entry.props.xalign" },
        { "trigger": "Gtk.EntryIconAccessible", "contents": "Gtk.EntryIconAccessible(**kwargs)" },
        { "trigger": "Gtk.EventBox", "contents": "Gtk.EventBox(**kwargs)" },
        { "trigger": "Gtk.EventBox.new", "contents": "Gtk.EventBox.new()" },
        { "trigger": "Gtk.EventBox.get_above_child", "contents": "Gtk.EventBox.get_above_child()" },
        { "trigger": "Gtk.EventBox.get_visible_window", "contents": "Gtk.EventBox.get_visible_window()" },
        { "trigger": "Gtk.EventBox.set_above_child", "contents": "Gtk.EventBox.set_above_child(above_child)" },
        { "trigger": "Gtk.EventBox.set_visible_window", "contents": "Gtk.EventBox.set_visible_window(visible_window)" },
        { "trigger": "Gtk.EventBox.props.above_child", "contents": "Gtk.EventBox.props.above_child" },
        { "trigger": "Gtk.EventBox.props.visible_window", "contents": "Gtk.EventBox.props.visible_window" },
        { "trigger": "Gtk.EventController", "contents": "Gtk.EventController(**kwargs)" },
        { "trigger": "Gtk.EventController.get_propagation_phase", "contents": "Gtk.EventController.get_propagation_phase()" },
        { "trigger": "Gtk.EventController.get_widget", "contents": "Gtk.EventController.get_widget()" },
        { "trigger": "Gtk.EventController.handle_event", "contents": "Gtk.EventController.handle_event(event)" },
        { "trigger": "Gtk.EventController.reset", "contents": "Gtk.EventController.reset()" },
        { "trigger": "Gtk.EventController.set_propagation_phase", "contents": "Gtk.EventController.set_propagation_phase(phase)" },
        { "trigger": "Gtk.EventController.props.propagation_phase", "contents": "Gtk.EventController.props.propagation_phase" },
        { "trigger": "Gtk.EventController.props.widget", "contents": "Gtk.EventController.props.widget" },
        { "trigger": "Gtk.ExpanderAccessible", "contents": "Gtk.ExpanderAccessible(**kwargs)" },
        { "trigger": "Gtk.Expander", "contents": "Gtk.Expander(**kwargs)" },
        { "trigger": "Gtk.Expander.new", "contents": "Gtk.Expander.new(label)" },
        { "trigger": "Gtk.Expander.new_with_mnemonic", "contents": "Gtk.Expander.new_with_mnemonic(label)" },
        { "trigger": "Gtk.Expander.get_expanded", "contents": "Gtk.Expander.get_expanded()" },
        { "trigger": "Gtk.Expander.get_label", "contents": "Gtk.Expander.get_label()" },
        { "trigger": "Gtk.Expander.get_label_fill", "contents": "Gtk.Expander.get_label_fill()" },
        { "trigger": "Gtk.Expander.get_label_widget", "contents": "Gtk.Expander.get_label_widget()" },
        { "trigger": "Gtk.Expander.get_resize_toplevel", "contents": "Gtk.Expander.get_resize_toplevel()" },
        { "trigger": "Gtk.Expander.get_spacing", "contents": "Gtk.Expander.get_spacing()" },
        { "trigger": "Gtk.Expander.get_use_markup", "contents": "Gtk.Expander.get_use_markup()" },
        { "trigger": "Gtk.Expander.get_use_underline", "contents": "Gtk.Expander.get_use_underline()" },
        { "trigger": "Gtk.Expander.set_expanded", "contents": "Gtk.Expander.set_expanded(expanded)" },
        { "trigger": "Gtk.Expander.set_label", "contents": "Gtk.Expander.set_label(label)" },
        { "trigger": "Gtk.Expander.set_label_fill", "contents": "Gtk.Expander.set_label_fill(label_fill)" },
        { "trigger": "Gtk.Expander.set_label_widget", "contents": "Gtk.Expander.set_label_widget(label_widget)" },
        { "trigger": "Gtk.Expander.set_resize_toplevel", "contents": "Gtk.Expander.set_resize_toplevel(resize_toplevel)" },
        { "trigger": "Gtk.Expander.set_spacing", "contents": "Gtk.Expander.set_spacing(spacing)" },
        { "trigger": "Gtk.Expander.set_use_markup", "contents": "Gtk.Expander.set_use_markup(use_markup)" },
        { "trigger": "Gtk.Expander.set_use_underline", "contents": "Gtk.Expander.set_use_underline(use_underline)" },
        { "trigger": "Gtk.Expander.do_activate", "contents": "Gtk.Expander.do_activate()" },
        { "trigger": "Gtk.Expander.signals.activate", "contents": "Gtk.Expander.signals.activate(expander)" },
        { "trigger": "Gtk.Expander.props.expanded", "contents": "Gtk.Expander.props.expanded" },
        { "trigger": "Gtk.Expander.props.label", "contents": "Gtk.Expander.props.label" },
        { "trigger": "Gtk.Expander.props.label_fill", "contents": "Gtk.Expander.props.label_fill" },
        { "trigger": "Gtk.Expander.props.label_widget", "contents": "Gtk.Expander.props.label_widget" },
        { "trigger": "Gtk.Expander.props.resize_toplevel", "contents": "Gtk.Expander.props.resize_toplevel" },
        { "trigger": "Gtk.Expander.props.spacing", "contents": "Gtk.Expander.props.spacing" },
        { "trigger": "Gtk.Expander.props.use_markup", "contents": "Gtk.Expander.props.use_markup" },
        { "trigger": "Gtk.Expander.props.use_underline", "contents": "Gtk.Expander.props.use_underline" },
        { "trigger": "Gtk.FileChooserButton", "contents": "Gtk.FileChooserButton(*args, **kwargs)" },
        { "trigger": "Gtk.FileChooserButton.new", "contents": "Gtk.FileChooserButton.new(title, action)" },
        { "trigger": "Gtk.FileChooserButton.new_with_dialog", "contents": "Gtk.FileChooserButton.new_with_dialog(dialog)" },
        { "trigger": "Gtk.FileChooserButton.get_focus_on_click", "contents": "Gtk.FileChooserButton.get_focus_on_click()" },
        { "trigger": "Gtk.FileChooserButton.get_title", "contents": "Gtk.FileChooserButton.get_title()" },
        { "trigger": "Gtk.FileChooserButton.get_width_chars", "contents": "Gtk.FileChooserButton.get_width_chars()" },
        { "trigger": "Gtk.FileChooserButton.set_focus_on_click", "contents": "Gtk.FileChooserButton.set_focus_on_click(focus_on_click)" },
        { "trigger": "Gtk.FileChooserButton.set_title", "contents": "Gtk.FileChooserButton.set_title(title)" },
        { "trigger": "Gtk.FileChooserButton.set_width_chars", "contents": "Gtk.FileChooserButton.set_width_chars(n_chars)" },
        { "trigger": "Gtk.FileChooserButton.do_file_set", "contents": "Gtk.FileChooserButton.do_file_set()" },
        { "trigger": "Gtk.FileChooserButton.signals.file_set", "contents": "Gtk.FileChooserButton.signals.file_set(file_chooser_button)" },
        { "trigger": "Gtk.FileChooserButton.props.dialog", "contents": "Gtk.FileChooserButton.props.dialog" },
        { "trigger": "Gtk.FileChooserButton.props.focus_on_click", "contents": "Gtk.FileChooserButton.props.focus_on_click" },
        { "trigger": "Gtk.FileChooserButton.props.title", "contents": "Gtk.FileChooserButton.props.title" },
        { "trigger": "Gtk.FileChooserButton.props.width_chars", "contents": "Gtk.FileChooserButton.props.width_chars" },
        { "trigger": "Gtk.FileChooserDialog", "contents": "Gtk.FileChooserDialog(*args, **kwargs)" },
        { "trigger": "Gtk.FileChooserWidget", "contents": "Gtk.FileChooserWidget(*args, **kwargs)" },
        { "trigger": "Gtk.FileChooserWidget.new", "contents": "Gtk.FileChooserWidget.new(action)" },
        { "trigger": "Gtk.FileChooserWidget.signals.desktop_folder", "contents": "Gtk.FileChooserWidget.signals.desktop_folder(file_chooser_widget)" },
        { "trigger": "Gtk.FileChooserWidget.signals.down_folder", "contents": "Gtk.FileChooserWidget.signals.down_folder(file_chooser_widget)" },
        { "trigger": "Gtk.FileChooserWidget.signals.home_folder", "contents": "Gtk.FileChooserWidget.signals.home_folder(file_chooser_widget)" },
        { "trigger": "Gtk.FileChooserWidget.signals.location_popup", "contents": "Gtk.FileChooserWidget.signals.location_popup(file_chooser_widget, path)" },
        { "trigger": "Gtk.FileChooserWidget.signals.location_popup_on_paste", "contents": "Gtk.FileChooserWidget.signals.location_popup_on_paste(file_chooser_widget)" },
        { "trigger": "Gtk.FileChooserWidget.signals.location_toggle_popup", "contents": "Gtk.FileChooserWidget.signals.location_toggle_popup(file_chooser_widget)" },
        { "trigger": "Gtk.FileChooserWidget.signals.places_shortcut", "contents": "Gtk.FileChooserWidget.signals.places_shortcut(file_chooser_widget)" },
        { "trigger": "Gtk.FileChooserWidget.signals.quick_bookmark", "contents": "Gtk.FileChooserWidget.signals.quick_bookmark(file_chooser_widget, bookmark_index)" },
        { "trigger": "Gtk.FileChooserWidget.signals.recent_shortcut", "contents": "Gtk.FileChooserWidget.signals.recent_shortcut(file_chooser_widget)" },
        { "trigger": "Gtk.FileChooserWidget.signals.search_shortcut", "contents": "Gtk.FileChooserWidget.signals.search_shortcut(file_chooser_widget)" },
        { "trigger": "Gtk.FileChooserWidget.signals.show_hidden", "contents": "Gtk.FileChooserWidget.signals.show_hidden(file_chooser_widget)" },
        { "trigger": "Gtk.FileChooserWidget.signals.up_folder", "contents": "Gtk.FileChooserWidget.signals.up_folder(file_chooser_widget)" },
        { "trigger": "Gtk.FileChooserWidget.props.search_mode", "contents": "Gtk.FileChooserWidget.props.search_mode" },
        { "trigger": "Gtk.FileChooserWidget.props.subtitle", "contents": "Gtk.FileChooserWidget.props.subtitle" },
        { "trigger": "Gtk.FileFilter", "contents": "Gtk.FileFilter(**kwargs)" },
        { "trigger": "Gtk.FileFilter.new", "contents": "Gtk.FileFilter.new()" },
        { "trigger": "Gtk.FileFilter.add_custom", "contents": "Gtk.FileFilter.add_custom(needed, func, *data)" },
        { "trigger": "Gtk.FileFilter.add_mime_type", "contents": "Gtk.FileFilter.add_mime_type(mime_type)" },
        { "trigger": "Gtk.FileFilter.add_pattern", "contents": "Gtk.FileFilter.add_pattern(pattern)" },
        { "trigger": "Gtk.FileFilter.add_pixbuf_formats", "contents": "Gtk.FileFilter.add_pixbuf_formats()" },
        { "trigger": "Gtk.FileFilter.filter", "contents": "Gtk.FileFilter.filter(filter_info)" },
        { "trigger": "Gtk.FileFilter.get_name", "contents": "Gtk.FileFilter.get_name()" },
        { "trigger": "Gtk.FileFilter.get_needed", "contents": "Gtk.FileFilter.get_needed()" },
        { "trigger": "Gtk.FileFilter.set_name", "contents": "Gtk.FileFilter.set_name(name)" },
        { "trigger": "Gtk.Fixed", "contents": "Gtk.Fixed(**kwargs)" },
        { "trigger": "Gtk.Fixed.new", "contents": "Gtk.Fixed.new()" },
        { "trigger": "Gtk.Fixed.move", "contents": "Gtk.Fixed.move(widget, x, y)" },
        { "trigger": "Gtk.Fixed.put", "contents": "Gtk.Fixed.put(widget, x, y)" },
        { "trigger": "Gtk.FlowBoxAccessible", "contents": "Gtk.FlowBoxAccessible(**kwargs)" },
        { "trigger": "Gtk.FlowBoxChildAccessible", "contents": "Gtk.FlowBoxChildAccessible(**kwargs)" },
        { "trigger": "Gtk.FlowBoxChild", "contents": "Gtk.FlowBoxChild(**kwargs)" },
        { "trigger": "Gtk.FlowBoxChild.new", "contents": "Gtk.FlowBoxChild.new()" },
        { "trigger": "Gtk.FlowBoxChild.changed", "contents": "Gtk.FlowBoxChild.changed()" },
        { "trigger": "Gtk.FlowBoxChild.get_index", "contents": "Gtk.FlowBoxChild.get_index()" },
        { "trigger": "Gtk.FlowBoxChild.is_selected", "contents": "Gtk.FlowBoxChild.is_selected()" },
        { "trigger": "Gtk.FlowBoxChild.do_activate", "contents": "Gtk.FlowBoxChild.do_activate()" },
        { "trigger": "Gtk.FlowBoxChild.signals.activate", "contents": "Gtk.FlowBoxChild.signals.activate(flow_box_child)" },
        { "trigger": "Gtk.FlowBox", "contents": "Gtk.FlowBox(**kwargs)" },
        { "trigger": "Gtk.FlowBox.new", "contents": "Gtk.FlowBox.new()" },
        { "trigger": "Gtk.FlowBox.get_activate_on_single_click", "contents": "Gtk.FlowBox.get_activate_on_single_click()" },
        { "trigger": "Gtk.FlowBox.get_child_at_index", "contents": "Gtk.FlowBox.get_child_at_index(idx)" },
        { "trigger": "Gtk.FlowBox.get_column_spacing", "contents": "Gtk.FlowBox.get_column_spacing()" },
        { "trigger": "Gtk.FlowBox.get_homogeneous", "contents": "Gtk.FlowBox.get_homogeneous()" },
        { "trigger": "Gtk.FlowBox.get_max_children_per_line", "contents": "Gtk.FlowBox.get_max_children_per_line()" },
        { "trigger": "Gtk.FlowBox.get_min_children_per_line", "contents": "Gtk.FlowBox.get_min_children_per_line()" },
        { "trigger": "Gtk.FlowBox.get_row_spacing", "contents": "Gtk.FlowBox.get_row_spacing()" },
        { "trigger": "Gtk.FlowBox.get_selected_children", "contents": "Gtk.FlowBox.get_selected_children()" },
        { "trigger": "Gtk.FlowBox.get_selection_mode", "contents": "Gtk.FlowBox.get_selection_mode()" },
        { "trigger": "Gtk.FlowBox.insert", "contents": "Gtk.FlowBox.insert(widget, position)" },
        { "trigger": "Gtk.FlowBox.invalidate_filter", "contents": "Gtk.FlowBox.invalidate_filter()" },
        { "trigger": "Gtk.FlowBox.invalidate_sort", "contents": "Gtk.FlowBox.invalidate_sort()" },
        { "trigger": "Gtk.FlowBox.select_all", "contents": "Gtk.FlowBox.select_all()" },
        { "trigger": "Gtk.FlowBox.select_child", "contents": "Gtk.FlowBox.select_child(child)" },
        { "trigger": "Gtk.FlowBox.selected_foreach", "contents": "Gtk.FlowBox.selected_foreach(func, *data)" },
        { "trigger": "Gtk.FlowBox.set_activate_on_single_click", "contents": "Gtk.FlowBox.set_activate_on_single_click(single)" },
        { "trigger": "Gtk.FlowBox.set_column_spacing", "contents": "Gtk.FlowBox.set_column_spacing(spacing)" },
        { "trigger": "Gtk.FlowBox.set_filter_func", "contents": "Gtk.FlowBox.set_filter_func(filter_func, *user_data)" },
        { "trigger": "Gtk.FlowBox.set_hadjustment", "contents": "Gtk.FlowBox.set_hadjustment(adjustment)" },
        { "trigger": "Gtk.FlowBox.set_homogeneous", "contents": "Gtk.FlowBox.set_homogeneous(homogeneous)" },
        { "trigger": "Gtk.FlowBox.set_max_children_per_line", "contents": "Gtk.FlowBox.set_max_children_per_line(n_children)" },
        { "trigger": "Gtk.FlowBox.set_min_children_per_line", "contents": "Gtk.FlowBox.set_min_children_per_line(n_children)" },
        { "trigger": "Gtk.FlowBox.set_row_spacing", "contents": "Gtk.FlowBox.set_row_spacing(spacing)" },
        { "trigger": "Gtk.FlowBox.set_selection_mode", "contents": "Gtk.FlowBox.set_selection_mode(mode)" },
        { "trigger": "Gtk.FlowBox.set_sort_func", "contents": "Gtk.FlowBox.set_sort_func(sort_func, *user_data)" },
        { "trigger": "Gtk.FlowBox.set_vadjustment", "contents": "Gtk.FlowBox.set_vadjustment(adjustment)" },
        { "trigger": "Gtk.FlowBox.unselect_all", "contents": "Gtk.FlowBox.unselect_all()" },
        { "trigger": "Gtk.FlowBox.unselect_child", "contents": "Gtk.FlowBox.unselect_child(child)" },
        { "trigger": "Gtk.FlowBox.do_activate_cursor_child", "contents": "Gtk.FlowBox.do_activate_cursor_child()" },
        { "trigger": "Gtk.FlowBox.do_child_activated", "contents": "Gtk.FlowBox.do_child_activated(child)" },
        { "trigger": "Gtk.FlowBox.do_move_cursor", "contents": "Gtk.FlowBox.do_move_cursor(step, count)" },
        { "trigger": "Gtk.FlowBox.do_select_all", "contents": "Gtk.FlowBox.do_select_all()" },
        { "trigger": "Gtk.FlowBox.do_selected_children_changed", "contents": "Gtk.FlowBox.do_selected_children_changed()" },
        { "trigger": "Gtk.FlowBox.do_toggle_cursor_child", "contents": "Gtk.FlowBox.do_toggle_cursor_child()" },
        { "trigger": "Gtk.FlowBox.do_unselect_all", "contents": "Gtk.FlowBox.do_unselect_all()" },
        { "trigger": "Gtk.FlowBox.signals.activate_cursor_child", "contents": "Gtk.FlowBox.signals.activate_cursor_child(flow_box)" },
        { "trigger": "Gtk.FlowBox.signals.child_activated", "contents": "Gtk.FlowBox.signals.child_activated(flow_box, child)" },
        { "trigger": "Gtk.FlowBox.signals.move_cursor", "contents": "Gtk.FlowBox.signals.move_cursor(flow_box, step, count)" },
        { "trigger": "Gtk.FlowBox.signals.select_all", "contents": "Gtk.FlowBox.signals.select_all(flow_box)" },
        { "trigger": "Gtk.FlowBox.signals.selected_children_changed", "contents": "Gtk.FlowBox.signals.selected_children_changed(flow_box)" },
        { "trigger": "Gtk.FlowBox.signals.toggle_cursor_child", "contents": "Gtk.FlowBox.signals.toggle_cursor_child(flow_box)" },
        { "trigger": "Gtk.FlowBox.signals.unselect_all", "contents": "Gtk.FlowBox.signals.unselect_all(flow_box)" },
        { "trigger": "Gtk.FlowBox.props.activate_on_single_click", "contents": "Gtk.FlowBox.props.activate_on_single_click" },
        { "trigger": "Gtk.FlowBox.props.column_spacing", "contents": "Gtk.FlowBox.props.column_spacing" },
        { "trigger": "Gtk.FlowBox.props.homogeneous", "contents": "Gtk.FlowBox.props.homogeneous" },
        { "trigger": "Gtk.FlowBox.props.max_children_per_line", "contents": "Gtk.FlowBox.props.max_children_per_line" },
        { "trigger": "Gtk.FlowBox.props.min_children_per_line", "contents": "Gtk.FlowBox.props.min_children_per_line" },
        { "trigger": "Gtk.FlowBox.props.row_spacing", "contents": "Gtk.FlowBox.props.row_spacing" },
        { "trigger": "Gtk.FlowBox.props.selection_mode", "contents": "Gtk.FlowBox.props.selection_mode" },
        { "trigger": "Gtk.FontButton", "contents": "Gtk.FontButton(*args, **kwargs)" },
        { "trigger": "Gtk.FontButton.new", "contents": "Gtk.FontButton.new()" },
        { "trigger": "Gtk.FontButton.new_with_font", "contents": "Gtk.FontButton.new_with_font(fontname)" },
        { "trigger": "Gtk.FontButton.get_font_name", "contents": "Gtk.FontButton.get_font_name()" },
        { "trigger": "Gtk.FontButton.get_show_size", "contents": "Gtk.FontButton.get_show_size()" },
        { "trigger": "Gtk.FontButton.get_show_style", "contents": "Gtk.FontButton.get_show_style()" },
        { "trigger": "Gtk.FontButton.get_title", "contents": "Gtk.FontButton.get_title()" },
        { "trigger": "Gtk.FontButton.get_use_font", "contents": "Gtk.FontButton.get_use_font()" },
        { "trigger": "Gtk.FontButton.get_use_size", "contents": "Gtk.FontButton.get_use_size()" },
        { "trigger": "Gtk.FontButton.set_font_name", "contents": "Gtk.FontButton.set_font_name(fontname)" },
        { "trigger": "Gtk.FontButton.set_show_size", "contents": "Gtk.FontButton.set_show_size(show_size)" },
        { "trigger": "Gtk.FontButton.set_show_style", "contents": "Gtk.FontButton.set_show_style(show_style)" },
        { "trigger": "Gtk.FontButton.set_title", "contents": "Gtk.FontButton.set_title(title)" },
        { "trigger": "Gtk.FontButton.set_use_font", "contents": "Gtk.FontButton.set_use_font(use_font)" },
        { "trigger": "Gtk.FontButton.set_use_size", "contents": "Gtk.FontButton.set_use_size(use_size)" },
        { "trigger": "Gtk.FontButton.do_font_set", "contents": "Gtk.FontButton.do_font_set()" },
        { "trigger": "Gtk.FontButton.signals.font_set", "contents": "Gtk.FontButton.signals.font_set(font_button)" },
        { "trigger": "Gtk.FontButton.props.font_name", "contents": "Gtk.FontButton.props.font_name" },
        { "trigger": "Gtk.FontButton.props.show_size", "contents": "Gtk.FontButton.props.show_size" },
        { "trigger": "Gtk.FontButton.props.show_style", "contents": "Gtk.FontButton.props.show_style" },
        { "trigger": "Gtk.FontButton.props.title", "contents": "Gtk.FontButton.props.title" },
        { "trigger": "Gtk.FontButton.props.use_font", "contents": "Gtk.FontButton.props.use_font" },
        { "trigger": "Gtk.FontButton.props.use_size", "contents": "Gtk.FontButton.props.use_size" },
        { "trigger": "Gtk.FontChooserDialog", "contents": "Gtk.FontChooserDialog(*args, **kwargs)" },
        { "trigger": "Gtk.FontChooserDialog.new", "contents": "Gtk.FontChooserDialog.new(title, parent)" },
        { "trigger": "Gtk.FontChooserWidget", "contents": "Gtk.FontChooserWidget(*args, **kwargs)" },
        { "trigger": "Gtk.FontChooserWidget.new", "contents": "Gtk.FontChooserWidget.new()" },
        { "trigger": "Gtk.FontSelectionDialog", "contents": "Gtk.FontSelectionDialog(*args, **kwargs)" },
        { "trigger": "Gtk.FontSelectionDialog.new", "contents": "Gtk.FontSelectionDialog.new(title)" },
        { "trigger": "Gtk.FontSelectionDialog.get_cancel_button", "contents": "Gtk.FontSelectionDialog.get_cancel_button()" },
        { "trigger": "Gtk.FontSelectionDialog.get_font_name", "contents": "Gtk.FontSelectionDialog.get_font_name()" },
        { "trigger": "Gtk.FontSelectionDialog.get_font_selection", "contents": "Gtk.FontSelectionDialog.get_font_selection()" },
        { "trigger": "Gtk.FontSelectionDialog.get_ok_button", "contents": "Gtk.FontSelectionDialog.get_ok_button()" },
        { "trigger": "Gtk.FontSelectionDialog.get_preview_text", "contents": "Gtk.FontSelectionDialog.get_preview_text()" },
        { "trigger": "Gtk.FontSelectionDialog.set_font_name", "contents": "Gtk.FontSelectionDialog.set_font_name(fontname)" },
        { "trigger": "Gtk.FontSelectionDialog.set_preview_text", "contents": "Gtk.FontSelectionDialog.set_preview_text(text)" },
        { "trigger": "Gtk.FontSelection", "contents": "Gtk.FontSelection(*args, **kwargs)" },
        { "trigger": "Gtk.FontSelection.new", "contents": "Gtk.FontSelection.new()" },
        { "trigger": "Gtk.FontSelection.get_face", "contents": "Gtk.FontSelection.get_face()" },
        { "trigger": "Gtk.FontSelection.get_face_list", "contents": "Gtk.FontSelection.get_face_list()" },
        { "trigger": "Gtk.FontSelection.get_family", "contents": "Gtk.FontSelection.get_family()" },
        { "trigger": "Gtk.FontSelection.get_family_list", "contents": "Gtk.FontSelection.get_family_list()" },
        { "trigger": "Gtk.FontSelection.get_font_name", "contents": "Gtk.FontSelection.get_font_name()" },
        { "trigger": "Gtk.FontSelection.get_preview_entry", "contents": "Gtk.FontSelection.get_preview_entry()" },
        { "trigger": "Gtk.FontSelection.get_preview_text", "contents": "Gtk.FontSelection.get_preview_text()" },
        { "trigger": "Gtk.FontSelection.get_size", "contents": "Gtk.FontSelection.get_size()" },
        { "trigger": "Gtk.FontSelection.get_size_entry", "contents": "Gtk.FontSelection.get_size_entry()" },
        { "trigger": "Gtk.FontSelection.get_size_list", "contents": "Gtk.FontSelection.get_size_list()" },
        { "trigger": "Gtk.FontSelection.set_font_name", "contents": "Gtk.FontSelection.set_font_name(fontname)" },
        { "trigger": "Gtk.FontSelection.set_preview_text", "contents": "Gtk.FontSelection.set_preview_text(text)" },
        { "trigger": "Gtk.FontSelection.props.font_name", "contents": "Gtk.FontSelection.props.font_name" },
        { "trigger": "Gtk.FontSelection.props.preview_text", "contents": "Gtk.FontSelection.props.preview_text" },
        { "trigger": "Gtk.FrameAccessible", "contents": "Gtk.FrameAccessible(**kwargs)" },
        { "trigger": "Gtk.Frame", "contents": "Gtk.Frame(**kwargs)" },
        { "trigger": "Gtk.Frame.new", "contents": "Gtk.Frame.new(label)" },
        { "trigger": "Gtk.Frame.get_label", "contents": "Gtk.Frame.get_label()" },
        { "trigger": "Gtk.Frame.get_label_align", "contents": "Gtk.Frame.get_label_align()" },
        { "trigger": "Gtk.Frame.get_label_widget", "contents": "Gtk.Frame.get_label_widget()" },
        { "trigger": "Gtk.Frame.get_shadow_type", "contents": "Gtk.Frame.get_shadow_type()" },
        { "trigger": "Gtk.Frame.set_label", "contents": "Gtk.Frame.set_label(label)" },
        { "trigger": "Gtk.Frame.set_label_align", "contents": "Gtk.Frame.set_label_align(xalign, yalign)" },
        { "trigger": "Gtk.Frame.set_label_widget", "contents": "Gtk.Frame.set_label_widget(label_widget)" },
        { "trigger": "Gtk.Frame.set_shadow_type", "contents": "Gtk.Frame.set_shadow_type(type)" },
        { "trigger": "Gtk.Frame.do_compute_child_allocation", "contents": "Gtk.Frame.do_compute_child_allocation(allocation)" },
        { "trigger": "Gtk.Frame.props.label", "contents": "Gtk.Frame.props.label" },
        { "trigger": "Gtk.Frame.props.label_widget", "contents": "Gtk.Frame.props.label_widget" },
        { "trigger": "Gtk.Frame.props.label_xalign", "contents": "Gtk.Frame.props.label_xalign" },
        { "trigger": "Gtk.Frame.props.label_yalign", "contents": "Gtk.Frame.props.label_yalign" },
        { "trigger": "Gtk.Frame.props.shadow_type", "contents": "Gtk.Frame.props.shadow_type" },
        { "trigger": "Gtk.GestureDrag", "contents": "Gtk.GestureDrag(**kwargs)" },
        { "trigger": "Gtk.GestureDrag.new", "contents": "Gtk.GestureDrag.new(widget)" },
        { "trigger": "Gtk.GestureDrag.get_offset", "contents": "Gtk.GestureDrag.get_offset()" },
        { "trigger": "Gtk.GestureDrag.get_start_point", "contents": "Gtk.GestureDrag.get_start_point()" },
        { "trigger": "Gtk.GestureDrag.signals.drag_begin", "contents": "Gtk.GestureDrag.signals.drag_begin(gesture_drag, start_x, start_y)" },
        { "trigger": "Gtk.GestureDrag.signals.drag_end", "contents": "Gtk.GestureDrag.signals.drag_end(gesture_drag, offset_x, offset_y)" },
        { "trigger": "Gtk.GestureDrag.signals.drag_update", "contents": "Gtk.GestureDrag.signals.drag_update(gesture_drag, offset_x, offset_y)" },
        { "trigger": "Gtk.Gesture", "contents": "Gtk.Gesture(**kwargs)" },
        { "trigger": "Gtk.Gesture.get_bounding_box", "contents": "Gtk.Gesture.get_bounding_box()" },
        { "trigger": "Gtk.Gesture.get_bounding_box_center", "contents": "Gtk.Gesture.get_bounding_box_center()" },
        { "trigger": "Gtk.Gesture.get_device", "contents": "Gtk.Gesture.get_device()" },
        { "trigger": "Gtk.Gesture.get_group", "contents": "Gtk.Gesture.get_group()" },
        { "trigger": "Gtk.Gesture.get_last_event", "contents": "Gtk.Gesture.get_last_event(sequence)" },
        { "trigger": "Gtk.Gesture.get_last_updated_sequence", "contents": "Gtk.Gesture.get_last_updated_sequence()" },
        { "trigger": "Gtk.Gesture.get_point", "contents": "Gtk.Gesture.get_point(sequence)" },
        { "trigger": "Gtk.Gesture.get_sequence_state", "contents": "Gtk.Gesture.get_sequence_state(sequence)" },
        { "trigger": "Gtk.Gesture.get_sequences", "contents": "Gtk.Gesture.get_sequences()" },
        { "trigger": "Gtk.Gesture.get_window", "contents": "Gtk.Gesture.get_window()" },
        { "trigger": "Gtk.Gesture.group", "contents": "Gtk.Gesture.group(gesture)" },
        { "trigger": "Gtk.Gesture.handles_sequence", "contents": "Gtk.Gesture.handles_sequence(sequence)" },
        { "trigger": "Gtk.Gesture.is_active", "contents": "Gtk.Gesture.is_active()" },
        { "trigger": "Gtk.Gesture.is_grouped_with", "contents": "Gtk.Gesture.is_grouped_with(other)" },
        { "trigger": "Gtk.Gesture.is_recognized", "contents": "Gtk.Gesture.is_recognized()" },
        { "trigger": "Gtk.Gesture.set_sequence_state", "contents": "Gtk.Gesture.set_sequence_state(sequence, state)" },
        { "trigger": "Gtk.Gesture.set_state", "contents": "Gtk.Gesture.set_state(state)" },
        { "trigger": "Gtk.Gesture.set_window", "contents": "Gtk.Gesture.set_window(window)" },
        { "trigger": "Gtk.Gesture.ungroup", "contents": "Gtk.Gesture.ungroup()" },
        { "trigger": "Gtk.Gesture.signals.begin", "contents": "Gtk.Gesture.signals.begin(gesture, sequence)" },
        { "trigger": "Gtk.Gesture.signals.cancel", "contents": "Gtk.Gesture.signals.cancel(gesture, sequence)" },
        { "trigger": "Gtk.Gesture.signals.end", "contents": "Gtk.Gesture.signals.end(gesture, sequence)" },
        { "trigger": "Gtk.Gesture.signals.sequence_state_changed", "contents": "Gtk.Gesture.signals.sequence_state_changed(gesture, sequence, state)" },
        { "trigger": "Gtk.Gesture.signals.update", "contents": "Gtk.Gesture.signals.update(gesture, sequence)" },
        { "trigger": "Gtk.Gesture.props.n_points", "contents": "Gtk.Gesture.props.n_points" },
        { "trigger": "Gtk.Gesture.props.window", "contents": "Gtk.Gesture.props.window" },
        { "trigger": "Gtk.GestureLongPress", "contents": "Gtk.GestureLongPress(**kwargs)" },
        { "trigger": "Gtk.GestureLongPress.new", "contents": "Gtk.GestureLongPress.new(widget)" },
        { "trigger": "Gtk.GestureLongPress.signals.cancelled", "contents": "Gtk.GestureLongPress.signals.cancelled(gesture_long_press)" },
        { "trigger": "Gtk.GestureLongPress.signals.pressed", "contents": "Gtk.GestureLongPress.signals.pressed(gesture_long_press, x, y)" },
        { "trigger": "Gtk.GestureLongPress.props.delay_factor", "contents": "Gtk.GestureLongPress.props.delay_factor" },
        { "trigger": "Gtk.GestureMultiPress", "contents": "Gtk.GestureMultiPress(**kwargs)" },
        { "trigger": "Gtk.GestureMultiPress.new", "contents": "Gtk.GestureMultiPress.new(widget)" },
        { "trigger": "Gtk.GestureMultiPress.get_area", "contents": "Gtk.GestureMultiPress.get_area()" },
        { "trigger": "Gtk.GestureMultiPress.set_area", "contents": "Gtk.GestureMultiPress.set_area(rect)" },
        { "trigger": "Gtk.GestureMultiPress.signals.pressed", "contents": "Gtk.GestureMultiPress.signals.pressed(gesture_multi_press, n_press, x, y)" },
        { "trigger": "Gtk.GestureMultiPress.signals.released", "contents": "Gtk.GestureMultiPress.signals.released(gesture_multi_press, n_press, x, y)" },
        { "trigger": "Gtk.GestureMultiPress.signals.stopped", "contents": "Gtk.GestureMultiPress.signals.stopped(gesture_multi_press)" },
        { "trigger": "Gtk.GesturePan", "contents": "Gtk.GesturePan(**kwargs)" },
        { "trigger": "Gtk.GesturePan.new", "contents": "Gtk.GesturePan.new(widget, orientation)" },
        { "trigger": "Gtk.GesturePan.get_orientation", "contents": "Gtk.GesturePan.get_orientation()" },
        { "trigger": "Gtk.GesturePan.set_orientation", "contents": "Gtk.GesturePan.set_orientation(orientation)" },
        { "trigger": "Gtk.GesturePan.signals.pan", "contents": "Gtk.GesturePan.signals.pan(gesture_pan, direction, offset)" },
        { "trigger": "Gtk.GesturePan.props.orientation", "contents": "Gtk.GesturePan.props.orientation" },
        { "trigger": "Gtk.GestureRotate", "contents": "Gtk.GestureRotate(**kwargs)" },
        { "trigger": "Gtk.GestureRotate.new", "contents": "Gtk.GestureRotate.new(widget)" },
        { "trigger": "Gtk.GestureRotate.get_angle_delta", "contents": "Gtk.GestureRotate.get_angle_delta()" },
        { "trigger": "Gtk.GestureRotate.signals.angle_changed", "contents": "Gtk.GestureRotate.signals.angle_changed(gesture_rotate, angle, angle_delta)" },
        { "trigger": "Gtk.GestureSingle", "contents": "Gtk.GestureSingle(**kwargs)" },
        { "trigger": "Gtk.GestureSingle.get_button", "contents": "Gtk.GestureSingle.get_button()" },
        { "trigger": "Gtk.GestureSingle.get_current_button", "contents": "Gtk.GestureSingle.get_current_button()" },
        { "trigger": "Gtk.GestureSingle.get_current_sequence", "contents": "Gtk.GestureSingle.get_current_sequence()" },
        { "trigger": "Gtk.GestureSingle.get_exclusive", "contents": "Gtk.GestureSingle.get_exclusive()" },
        { "trigger": "Gtk.GestureSingle.get_touch_only", "contents": "Gtk.GestureSingle.get_touch_only()" },
        { "trigger": "Gtk.GestureSingle.set_button", "contents": "Gtk.GestureSingle.set_button(button)" },
        { "trigger": "Gtk.GestureSingle.set_exclusive", "contents": "Gtk.GestureSingle.set_exclusive(exclusive)" },
        { "trigger": "Gtk.GestureSingle.set_touch_only", "contents": "Gtk.GestureSingle.set_touch_only(touch_only)" },
        { "trigger": "Gtk.GestureSingle.props.button", "contents": "Gtk.GestureSingle.props.button" },
        { "trigger": "Gtk.GestureSingle.props.exclusive", "contents": "Gtk.GestureSingle.props.exclusive" },
        { "trigger": "Gtk.GestureSingle.props.touch_only", "contents": "Gtk.GestureSingle.props.touch_only" },
        { "trigger": "Gtk.GestureSwipe", "contents": "Gtk.GestureSwipe(**kwargs)" },
        { "trigger": "Gtk.GestureSwipe.new", "contents": "Gtk.GestureSwipe.new(widget)" },
        { "trigger": "Gtk.GestureSwipe.get_velocity", "contents": "Gtk.GestureSwipe.get_velocity()" },
        { "trigger": "Gtk.GestureSwipe.signals.swipe", "contents": "Gtk.GestureSwipe.signals.swipe(gesture_swipe, velocity_x, velocity_y)" },
        { "trigger": "Gtk.GestureZoom", "contents": "Gtk.GestureZoom(**kwargs)" },
        { "trigger": "Gtk.GestureZoom.new", "contents": "Gtk.GestureZoom.new(widget)" },
        { "trigger": "Gtk.GestureZoom.get_scale_delta", "contents": "Gtk.GestureZoom.get_scale_delta()" },
        { "trigger": "Gtk.GestureZoom.signals.scale_changed", "contents": "Gtk.GestureZoom.signals.scale_changed(gesture_zoom, scale)" },
        { "trigger": "Gtk.GLArea", "contents": "Gtk.GLArea(**kwargs)" },
        { "trigger": "Gtk.GLArea.new", "contents": "Gtk.GLArea.new()" },
        { "trigger": "Gtk.GLArea.attach_buffers", "contents": "Gtk.GLArea.attach_buffers()" },
        { "trigger": "Gtk.GLArea.get_auto_render", "contents": "Gtk.GLArea.get_auto_render()" },
        { "trigger": "Gtk.GLArea.get_context", "contents": "Gtk.GLArea.get_context()" },
        { "trigger": "Gtk.GLArea.get_error", "contents": "Gtk.GLArea.get_error()" },
        { "trigger": "Gtk.GLArea.get_has_alpha", "contents": "Gtk.GLArea.get_has_alpha()" },
        { "trigger": "Gtk.GLArea.get_has_depth_buffer", "contents": "Gtk.GLArea.get_has_depth_buffer()" },
        { "trigger": "Gtk.GLArea.get_has_stencil_buffer", "contents": "Gtk.GLArea.get_has_stencil_buffer()" },
        { "trigger": "Gtk.GLArea.get_required_version", "contents": "Gtk.GLArea.get_required_version()" },
        { "trigger": "Gtk.GLArea.make_current", "contents": "Gtk.GLArea.make_current()" },
        { "trigger": "Gtk.GLArea.queue_render", "contents": "Gtk.GLArea.queue_render()" },
        { "trigger": "Gtk.GLArea.set_auto_render", "contents": "Gtk.GLArea.set_auto_render(auto_render)" },
        { "trigger": "Gtk.GLArea.set_error", "contents": "Gtk.GLArea.set_error(error)" },
        { "trigger": "Gtk.GLArea.set_has_alpha", "contents": "Gtk.GLArea.set_has_alpha(has_alpha)" },
        { "trigger": "Gtk.GLArea.set_has_depth_buffer", "contents": "Gtk.GLArea.set_has_depth_buffer(has_depth_buffer)" },
        { "trigger": "Gtk.GLArea.set_has_stencil_buffer", "contents": "Gtk.GLArea.set_has_stencil_buffer(has_stencil_buffer)" },
        { "trigger": "Gtk.GLArea.set_required_version", "contents": "Gtk.GLArea.set_required_version(major, minor)" },
        { "trigger": "Gtk.GLArea.do_render", "contents": "Gtk.GLArea.do_render(context)" },
        { "trigger": "Gtk.GLArea.do_resize", "contents": "Gtk.GLArea.do_resize(width, height)" },
        { "trigger": "Gtk.GLArea.signals.create_context", "contents": "Gtk.GLArea.signals.create_context(g_l_area)" },
        { "trigger": "Gtk.GLArea.signals.render", "contents": "Gtk.GLArea.signals.render(g_l_area, context)" },
        { "trigger": "Gtk.GLArea.signals.resize", "contents": "Gtk.GLArea.signals.resize(g_l_area, width, height)" },
        { "trigger": "Gtk.GLArea.props.auto_render", "contents": "Gtk.GLArea.props.auto_render" },
        { "trigger": "Gtk.GLArea.props.context", "contents": "Gtk.GLArea.props.context" },
        { "trigger": "Gtk.GLArea.props.has_alpha", "contents": "Gtk.GLArea.props.has_alpha" },
        { "trigger": "Gtk.GLArea.props.has_depth_buffer", "contents": "Gtk.GLArea.props.has_depth_buffer" },
        { "trigger": "Gtk.GLArea.props.has_stencil_buffer", "contents": "Gtk.GLArea.props.has_stencil_buffer" },
        { "trigger": "Gtk.Grid", "contents": "Gtk.Grid(**kwargs)" },
        { "trigger": "Gtk.Grid.new", "contents": "Gtk.Grid.new()" },
        { "trigger": "Gtk.Grid.attach", "contents": "Gtk.Grid.attach(child, left, top, width, height)" },
        { "trigger": "Gtk.Grid.attach_next_to", "contents": "Gtk.Grid.attach_next_to(child, sibling, side, width, height)" },
        { "trigger": "Gtk.Grid.get_baseline_row", "contents": "Gtk.Grid.get_baseline_row()" },
        { "trigger": "Gtk.Grid.get_child_at", "contents": "Gtk.Grid.get_child_at(left, top)" },
        { "trigger": "Gtk.Grid.get_column_homogeneous", "contents": "Gtk.Grid.get_column_homogeneous()" },
        { "trigger": "Gtk.Grid.get_column_spacing", "contents": "Gtk.Grid.get_column_spacing()" },
        { "trigger": "Gtk.Grid.get_row_baseline_position", "contents": "Gtk.Grid.get_row_baseline_position(row)" },
        { "trigger": "Gtk.Grid.get_row_homogeneous", "contents": "Gtk.Grid.get_row_homogeneous()" },
        { "trigger": "Gtk.Grid.get_row_spacing", "contents": "Gtk.Grid.get_row_spacing()" },
        { "trigger": "Gtk.Grid.insert_column", "contents": "Gtk.Grid.insert_column(position)" },
        { "trigger": "Gtk.Grid.insert_next_to", "contents": "Gtk.Grid.insert_next_to(sibling, side)" },
        { "trigger": "Gtk.Grid.insert_row", "contents": "Gtk.Grid.insert_row(position)" },
        { "trigger": "Gtk.Grid.remove_column", "contents": "Gtk.Grid.remove_column(position)" },
        { "trigger": "Gtk.Grid.remove_row", "contents": "Gtk.Grid.remove_row(position)" },
        { "trigger": "Gtk.Grid.set_baseline_row", "contents": "Gtk.Grid.set_baseline_row(row)" },
        { "trigger": "Gtk.Grid.set_column_homogeneous", "contents": "Gtk.Grid.set_column_homogeneous(homogeneous)" },
        { "trigger": "Gtk.Grid.set_column_spacing", "contents": "Gtk.Grid.set_column_spacing(spacing)" },
        { "trigger": "Gtk.Grid.set_row_baseline_position", "contents": "Gtk.Grid.set_row_baseline_position(row, pos)" },
        { "trigger": "Gtk.Grid.set_row_homogeneous", "contents": "Gtk.Grid.set_row_homogeneous(homogeneous)" },
        { "trigger": "Gtk.Grid.set_row_spacing", "contents": "Gtk.Grid.set_row_spacing(spacing)" },
        { "trigger": "Gtk.Grid.props.baseline_row", "contents": "Gtk.Grid.props.baseline_row" },
        { "trigger": "Gtk.Grid.props.column_homogeneous", "contents": "Gtk.Grid.props.column_homogeneous" },
        { "trigger": "Gtk.Grid.props.column_spacing", "contents": "Gtk.Grid.props.column_spacing" },
        { "trigger": "Gtk.Grid.props.row_homogeneous", "contents": "Gtk.Grid.props.row_homogeneous" },
        { "trigger": "Gtk.Grid.props.row_spacing", "contents": "Gtk.Grid.props.row_spacing" },
        { "trigger": "Gtk.HandleBox", "contents": "Gtk.HandleBox(**kwargs)" },
        { "trigger": "Gtk.HandleBox.new", "contents": "Gtk.HandleBox.new()" },
        { "trigger": "Gtk.HandleBox.get_child_detached", "contents": "Gtk.HandleBox.get_child_detached()" },
        { "trigger": "Gtk.HandleBox.get_handle_position", "contents": "Gtk.HandleBox.get_handle_position()" },
        { "trigger": "Gtk.HandleBox.get_shadow_type", "contents": "Gtk.HandleBox.get_shadow_type()" },
        { "trigger": "Gtk.HandleBox.get_snap_edge", "contents": "Gtk.HandleBox.get_snap_edge()" },
        { "trigger": "Gtk.HandleBox.set_handle_position", "contents": "Gtk.HandleBox.set_handle_position(position)" },
        { "trigger": "Gtk.HandleBox.set_shadow_type", "contents": "Gtk.HandleBox.set_shadow_type(type)" },
        { "trigger": "Gtk.HandleBox.set_snap_edge", "contents": "Gtk.HandleBox.set_snap_edge(edge)" },
        { "trigger": "Gtk.HandleBox.do_child_attached", "contents": "Gtk.HandleBox.do_child_attached(child)" },
        { "trigger": "Gtk.HandleBox.do_child_detached", "contents": "Gtk.HandleBox.do_child_detached(child)" },
        { "trigger": "Gtk.HandleBox.signals.child_attached", "contents": "Gtk.HandleBox.signals.child_attached(handle_box, widget)" },
        { "trigger": "Gtk.HandleBox.signals.child_detached", "contents": "Gtk.HandleBox.signals.child_detached(handle_box, widget)" },
        { "trigger": "Gtk.HandleBox.props.child_detached", "contents": "Gtk.HandleBox.props.child_detached" },
        { "trigger": "Gtk.HandleBox.props.handle_position", "contents": "Gtk.HandleBox.props.handle_position" },
        { "trigger": "Gtk.HandleBox.props.shadow_type", "contents": "Gtk.HandleBox.props.shadow_type" },
        { "trigger": "Gtk.HandleBox.props.snap_edge", "contents": "Gtk.HandleBox.props.snap_edge" },
        { "trigger": "Gtk.HandleBox.props.snap_edge_set", "contents": "Gtk.HandleBox.props.snap_edge_set" },
        { "trigger": "Gtk.HBox", "contents": "Gtk.HBox(*args, **kwargs)" },
        { "trigger": "Gtk.HBox.new", "contents": "Gtk.HBox.new(homogeneous, spacing)" },
        { "trigger": "Gtk.HButtonBox", "contents": "Gtk.HButtonBox(*args, **kwargs)" },
        { "trigger": "Gtk.HButtonBox.new", "contents": "Gtk.HButtonBox.new()" },
        { "trigger": "Gtk.HeaderBar", "contents": "Gtk.HeaderBar(**kwargs)" },
        { "trigger": "Gtk.HeaderBar.new", "contents": "Gtk.HeaderBar.new()" },
        { "trigger": "Gtk.HeaderBar.get_custom_title", "contents": "Gtk.HeaderBar.get_custom_title()" },
        { "trigger": "Gtk.HeaderBar.get_decoration_layout", "contents": "Gtk.HeaderBar.get_decoration_layout()" },
        { "trigger": "Gtk.HeaderBar.get_has_subtitle", "contents": "Gtk.HeaderBar.get_has_subtitle()" },
        { "trigger": "Gtk.HeaderBar.get_show_close_button", "contents": "Gtk.HeaderBar.get_show_close_button()" },
        { "trigger": "Gtk.HeaderBar.get_subtitle", "contents": "Gtk.HeaderBar.get_subtitle()" },
        { "trigger": "Gtk.HeaderBar.get_title", "contents": "Gtk.HeaderBar.get_title()" },
        { "trigger": "Gtk.HeaderBar.pack_end", "contents": "Gtk.HeaderBar.pack_end(child)" },
        { "trigger": "Gtk.HeaderBar.pack_start", "contents": "Gtk.HeaderBar.pack_start(child)" },
        { "trigger": "Gtk.HeaderBar.set_custom_title", "contents": "Gtk.HeaderBar.set_custom_title(title_widget)" },
        { "trigger": "Gtk.HeaderBar.set_decoration_layout", "contents": "Gtk.HeaderBar.set_decoration_layout(layout)" },
        { "trigger": "Gtk.HeaderBar.set_has_subtitle", "contents": "Gtk.HeaderBar.set_has_subtitle(setting)" },
        { "trigger": "Gtk.HeaderBar.set_show_close_button", "contents": "Gtk.HeaderBar.set_show_close_button(setting)" },
        { "trigger": "Gtk.HeaderBar.set_subtitle", "contents": "Gtk.HeaderBar.set_subtitle(subtitle)" },
        { "trigger": "Gtk.HeaderBar.set_title", "contents": "Gtk.HeaderBar.set_title(title)" },
        { "trigger": "Gtk.HeaderBar.props.custom_title", "contents": "Gtk.HeaderBar.props.custom_title" },
        { "trigger": "Gtk.HeaderBar.props.decoration_layout", "contents": "Gtk.HeaderBar.props.decoration_layout" },
        { "trigger": "Gtk.HeaderBar.props.decoration_layout_set", "contents": "Gtk.HeaderBar.props.decoration_layout_set" },
        { "trigger": "Gtk.HeaderBar.props.has_subtitle", "contents": "Gtk.HeaderBar.props.has_subtitle" },
        { "trigger": "Gtk.HeaderBar.props.show_close_button", "contents": "Gtk.HeaderBar.props.show_close_button" },
        { "trigger": "Gtk.HeaderBar.props.spacing", "contents": "Gtk.HeaderBar.props.spacing" },
        { "trigger": "Gtk.HeaderBar.props.subtitle", "contents": "Gtk.HeaderBar.props.subtitle" },
        { "trigger": "Gtk.HeaderBar.props.title", "contents": "Gtk.HeaderBar.props.title" },
        { "trigger": "Gtk.HPaned", "contents": "Gtk.HPaned(**kwargs)" },
        { "trigger": "Gtk.HPaned.new", "contents": "Gtk.HPaned.new()" },
        { "trigger": "Gtk.HScale", "contents": "Gtk.HScale(**kwargs)" },
        { "trigger": "Gtk.HScale.new", "contents": "Gtk.HScale.new(adjustment)" },
        { "trigger": "Gtk.HScale.new_with_range", "contents": "Gtk.HScale.new_with_range(min, max, step)" },
        { "trigger": "Gtk.HScrollbar", "contents": "Gtk.HScrollbar(*args, **kwargs)" },
        { "trigger": "Gtk.HScrollbar.new", "contents": "Gtk.HScrollbar.new(adjustment)" },
        { "trigger": "Gtk.HSeparator", "contents": "Gtk.HSeparator(**kwargs)" },
        { "trigger": "Gtk.HSeparator.new", "contents": "Gtk.HSeparator.new()" },
        { "trigger": "Gtk.HSV", "contents": "Gtk.HSV(**kwargs)" },
        { "trigger": "Gtk.HSV.new", "contents": "Gtk.HSV.new()" },
        { "trigger": "Gtk.HSV.to_rgb", "contents": "Gtk.HSV.to_rgb(h, s, v)" },
        { "trigger": "Gtk.HSV.get_color", "contents": "Gtk.HSV.get_color()" },
        { "trigger": "Gtk.HSV.get_metrics", "contents": "Gtk.HSV.get_metrics()" },
        { "trigger": "Gtk.HSV.is_adjusting", "contents": "Gtk.HSV.is_adjusting()" },
        { "trigger": "Gtk.HSV.set_color", "contents": "Gtk.HSV.set_color(h, s, v)" },
        { "trigger": "Gtk.HSV.set_metrics", "contents": "Gtk.HSV.set_metrics(size, ring_width)" },
        { "trigger": "Gtk.HSV.do_changed", "contents": "Gtk.HSV.do_changed()" },
        { "trigger": "Gtk.HSV.do_move", "contents": "Gtk.HSV.do_move(type)" },
        { "trigger": "Gtk.HSV.signals.changed", "contents": "Gtk.HSV.signals.changed(h_s_v)" },
        { "trigger": "Gtk.HSV.signals.move", "contents": "Gtk.HSV.signals.move(h_s_v, object)" },
        { "trigger": "Gtk.IconFactory", "contents": "Gtk.IconFactory(**kwargs)" },
        { "trigger": "Gtk.IconFactory.lookup_default", "contents": "Gtk.IconFactory.lookup_default(stock_id)" },
        { "trigger": "Gtk.IconFactory.new", "contents": "Gtk.IconFactory.new()" },
        { "trigger": "Gtk.IconFactory.add", "contents": "Gtk.IconFactory.add(stock_id, icon_set)" },
        { "trigger": "Gtk.IconFactory.add_default", "contents": "Gtk.IconFactory.add_default()" },
        { "trigger": "Gtk.IconFactory.lookup", "contents": "Gtk.IconFactory.lookup(stock_id)" },
        { "trigger": "Gtk.IconFactory.remove_default", "contents": "Gtk.IconFactory.remove_default()" },
        { "trigger": "Gtk.IconInfo", "contents": "Gtk.IconInfo(**kwargs)" },
        { "trigger": "Gtk.IconInfo.new_for_pixbuf", "contents": "Gtk.IconInfo.new_for_pixbuf(icon_theme, pixbuf)" },
        { "trigger": "Gtk.IconInfo.get_attach_points", "contents": "Gtk.IconInfo.get_attach_points()" },
        { "trigger": "Gtk.IconInfo.get_base_scale", "contents": "Gtk.IconInfo.get_base_scale()" },
        { "trigger": "Gtk.IconInfo.get_base_size", "contents": "Gtk.IconInfo.get_base_size()" },
        { "trigger": "Gtk.IconInfo.get_builtin_pixbuf", "contents": "Gtk.IconInfo.get_builtin_pixbuf()" },
        { "trigger": "Gtk.IconInfo.get_display_name", "contents": "Gtk.IconInfo.get_display_name()" },
        { "trigger": "Gtk.IconInfo.get_embedded_rect", "contents": "Gtk.IconInfo.get_embedded_rect()" },
        { "trigger": "Gtk.IconInfo.get_filename", "contents": "Gtk.IconInfo.get_filename()" },
        { "trigger": "Gtk.IconInfo.is_symbolic", "contents": "Gtk.IconInfo.is_symbolic()" },
        { "trigger": "Gtk.IconInfo.load_icon", "contents": "Gtk.IconInfo.load_icon()" },
        { "trigger": "Gtk.IconInfo.load_icon_async", "contents": "Gtk.IconInfo.load_icon_async(cancellable, callback, *user_data)" },
        { "trigger": "Gtk.IconInfo.load_icon_finish", "contents": "Gtk.IconInfo.load_icon_finish(res)" },
        { "trigger": "Gtk.IconInfo.load_surface", "contents": "Gtk.IconInfo.load_surface(for_window)" },
        { "trigger": "Gtk.IconInfo.load_symbolic", "contents": "Gtk.IconInfo.load_symbolic(fg, success_color, warning_color, error_color)" },
        { "trigger": "Gtk.IconInfo.load_symbolic_async", "contents": "Gtk.IconInfo.load_symbolic_async(fg, success_color, warning_color, error_color, cancellable, callback, *user_data)" },
        { "trigger": "Gtk.IconInfo.load_symbolic_finish", "contents": "Gtk.IconInfo.load_symbolic_finish(res)" },
        { "trigger": "Gtk.IconInfo.load_symbolic_for_context", "contents": "Gtk.IconInfo.load_symbolic_for_context(context)" },
        { "trigger": "Gtk.IconInfo.load_symbolic_for_context_async", "contents": "Gtk.IconInfo.load_symbolic_for_context_async(context, cancellable, callback, *user_data)" },
        { "trigger": "Gtk.IconInfo.load_symbolic_for_context_finish", "contents": "Gtk.IconInfo.load_symbolic_for_context_finish(res)" },
        { "trigger": "Gtk.IconInfo.load_symbolic_for_style", "contents": "Gtk.IconInfo.load_symbolic_for_style(style, state)" },
        { "trigger": "Gtk.IconInfo.set_raw_coordinates", "contents": "Gtk.IconInfo.set_raw_coordinates(raw_coordinates)" },
        { "trigger": "Gtk.IconTheme", "contents": "Gtk.IconTheme(**kwargs)" },
        { "trigger": "Gtk.IconTheme.add_builtin_icon", "contents": "Gtk.IconTheme.add_builtin_icon(icon_name, size, pixbuf)" },
        { "trigger": "Gtk.IconTheme.get_default", "contents": "Gtk.IconTheme.get_default()" },
        { "trigger": "Gtk.IconTheme.get_for_screen", "contents": "Gtk.IconTheme.get_for_screen(screen)" },
        { "trigger": "Gtk.IconTheme.new", "contents": "Gtk.IconTheme.new()" },
        { "trigger": "Gtk.IconTheme.add_resource_path", "contents": "Gtk.IconTheme.add_resource_path(path)" },
        { "trigger": "Gtk.IconTheme.append_search_path", "contents": "Gtk.IconTheme.append_search_path(path)" },
        { "trigger": "Gtk.IconTheme.choose_icon", "contents": "Gtk.IconTheme.choose_icon(icon_names, size, flags)" },
        { "trigger": "Gtk.IconTheme.choose_icon_for_scale", "contents": "Gtk.IconTheme.choose_icon_for_scale(icon_names, size, scale, flags)" },
        { "trigger": "Gtk.IconTheme.get_example_icon_name", "contents": "Gtk.IconTheme.get_example_icon_name()" },
        { "trigger": "Gtk.IconTheme.get_icon_sizes", "contents": "Gtk.IconTheme.get_icon_sizes(icon_name)" },
        { "trigger": "Gtk.IconTheme.get_search_path", "contents": "Gtk.IconTheme.get_search_path()" },
        { "trigger": "Gtk.IconTheme.has_icon", "contents": "Gtk.IconTheme.has_icon(icon_name)" },
        { "trigger": "Gtk.IconTheme.list_contexts", "contents": "Gtk.IconTheme.list_contexts()" },
        { "trigger": "Gtk.IconTheme.list_icons", "contents": "Gtk.IconTheme.list_icons(context)" },
        { "trigger": "Gtk.IconTheme.load_icon", "contents": "Gtk.IconTheme.load_icon(icon_name, size, flags)" },
        { "trigger": "Gtk.IconTheme.load_icon_for_scale", "contents": "Gtk.IconTheme.load_icon_for_scale(icon_name, size, scale, flags)" },
        { "trigger": "Gtk.IconTheme.load_surface", "contents": "Gtk.IconTheme.load_surface(icon_name, size, scale, for_window, flags)" },
        { "trigger": "Gtk.IconTheme.lookup_by_gicon", "contents": "Gtk.IconTheme.lookup_by_gicon(icon, size, flags)" },
        { "trigger": "Gtk.IconTheme.lookup_by_gicon_for_scale", "contents": "Gtk.IconTheme.lookup_by_gicon_for_scale(icon, size, scale, flags)" },
        { "trigger": "Gtk.IconTheme.lookup_icon", "contents": "Gtk.IconTheme.lookup_icon(icon_name, size, flags)" },
        { "trigger": "Gtk.IconTheme.lookup_icon_for_scale", "contents": "Gtk.IconTheme.lookup_icon_for_scale(icon_name, size, scale, flags)" },
        { "trigger": "Gtk.IconTheme.prepend_search_path", "contents": "Gtk.IconTheme.prepend_search_path(path)" },
        { "trigger": "Gtk.IconTheme.rescan_if_needed", "contents": "Gtk.IconTheme.rescan_if_needed()" },
        { "trigger": "Gtk.IconTheme.set_custom_theme", "contents": "Gtk.IconTheme.set_custom_theme(theme_name)" },
        { "trigger": "Gtk.IconTheme.set_screen", "contents": "Gtk.IconTheme.set_screen(screen)" },
        { "trigger": "Gtk.IconTheme.set_search_path", "contents": "Gtk.IconTheme.set_search_path(path)" },
        { "trigger": "Gtk.IconTheme.do_changed", "contents": "Gtk.IconTheme.do_changed()" },
        { "trigger": "Gtk.IconTheme.signals.changed", "contents": "Gtk.IconTheme.signals.changed(icon_theme)" },
        { "trigger": "Gtk.IconViewAccessible", "contents": "Gtk.IconViewAccessible(**kwargs)" },
        { "trigger": "Gtk.IconView", "contents": "Gtk.IconView(*args, **kwargs)" },
        { "trigger": "Gtk.IconView.new", "contents": "Gtk.IconView.new()" },
        { "trigger": "Gtk.IconView.new_with_area", "contents": "Gtk.IconView.new_with_area(area)" },
        { "trigger": "Gtk.IconView.new_with_model", "contents": "Gtk.IconView.new_with_model(model)" },
        { "trigger": "Gtk.IconView.convert_widget_to_bin_window_coords", "contents": "Gtk.IconView.convert_widget_to_bin_window_coords(wx, wy)" },
        { "trigger": "Gtk.IconView.create_drag_icon", "contents": "Gtk.IconView.create_drag_icon(path)" },
        { "trigger": "Gtk.IconView.enable_model_drag_dest", "contents": "Gtk.IconView.enable_model_drag_dest(targets, actions)" },
        { "trigger": "Gtk.IconView.enable_model_drag_source", "contents": "Gtk.IconView.enable_model_drag_source(start_button_mask, targets, actions)" },
        { "trigger": "Gtk.IconView.get_activate_on_single_click", "contents": "Gtk.IconView.get_activate_on_single_click()" },
        { "trigger": "Gtk.IconView.get_cell_rect", "contents": "Gtk.IconView.get_cell_rect(path, cell)" },
        { "trigger": "Gtk.IconView.get_column_spacing", "contents": "Gtk.IconView.get_column_spacing()" },
        { "trigger": "Gtk.IconView.get_columns", "contents": "Gtk.IconView.get_columns()" },
        { "trigger": "Gtk.IconView.get_cursor", "contents": "Gtk.IconView.get_cursor()" },
        { "trigger": "Gtk.IconView.get_dest_item_at_pos", "contents": "Gtk.IconView.get_dest_item_at_pos(drag_x, drag_y)" },
        { "trigger": "Gtk.IconView.get_drag_dest_item", "contents": "Gtk.IconView.get_drag_dest_item()" },
        { "trigger": "Gtk.IconView.get_item_at_pos", "contents": "Gtk.IconView.get_item_at_pos(x, y)" },
        { "trigger": "Gtk.IconView.get_item_column", "contents": "Gtk.IconView.get_item_column(path)" },
        { "trigger": "Gtk.IconView.get_item_orientation", "contents": "Gtk.IconView.get_item_orientation()" },
        { "trigger": "Gtk.IconView.get_item_padding", "contents": "Gtk.IconView.get_item_padding()" },
        { "trigger": "Gtk.IconView.get_item_row", "contents": "Gtk.IconView.get_item_row(path)" },
        { "trigger": "Gtk.IconView.get_item_width", "contents": "Gtk.IconView.get_item_width()" },
        { "trigger": "Gtk.IconView.get_margin", "contents": "Gtk.IconView.get_margin()" },
        { "trigger": "Gtk.IconView.get_markup_column", "contents": "Gtk.IconView.get_markup_column()" },
        { "trigger": "Gtk.IconView.get_model", "contents": "Gtk.IconView.get_model()" },
        { "trigger": "Gtk.IconView.get_path_at_pos", "contents": "Gtk.IconView.get_path_at_pos(x, y)" },
        { "trigger": "Gtk.IconView.get_pixbuf_column", "contents": "Gtk.IconView.get_pixbuf_column()" },
        { "trigger": "Gtk.IconView.get_reorderable", "contents": "Gtk.IconView.get_reorderable()" },
        { "trigger": "Gtk.IconView.get_row_spacing", "contents": "Gtk.IconView.get_row_spacing()" },
        { "trigger": "Gtk.IconView.get_selected_items", "contents": "Gtk.IconView.get_selected_items()" },
        { "trigger": "Gtk.IconView.get_selection_mode", "contents": "Gtk.IconView.get_selection_mode()" },
        { "trigger": "Gtk.IconView.get_spacing", "contents": "Gtk.IconView.get_spacing()" },
        { "trigger": "Gtk.IconView.get_text_column", "contents": "Gtk.IconView.get_text_column()" },
        { "trigger": "Gtk.IconView.get_tooltip_column", "contents": "Gtk.IconView.get_tooltip_column()" },
        { "trigger": "Gtk.IconView.get_tooltip_context", "contents": "Gtk.IconView.get_tooltip_context(x, y, keyboard_tip)" },
        { "trigger": "Gtk.IconView.get_visible_range", "contents": "Gtk.IconView.get_visible_range()" },
        { "trigger": "Gtk.IconView.item_activated", "contents": "Gtk.IconView.item_activated(path)" },
        { "trigger": "Gtk.IconView.path_is_selected", "contents": "Gtk.IconView.path_is_selected(path)" },
        { "trigger": "Gtk.IconView.scroll_to_path", "contents": "Gtk.IconView.scroll_to_path(path, use_align, row_align, col_align)" },
        { "trigger": "Gtk.IconView.select_all", "contents": "Gtk.IconView.select_all()" },
        { "trigger": "Gtk.IconView.select_path", "contents": "Gtk.IconView.select_path(path)" },
        { "trigger": "Gtk.IconView.selected_foreach", "contents": "Gtk.IconView.selected_foreach(func, *data)" },
        { "trigger": "Gtk.IconView.set_activate_on_single_click", "contents": "Gtk.IconView.set_activate_on_single_click(single)" },
        { "trigger": "Gtk.IconView.set_column_spacing", "contents": "Gtk.IconView.set_column_spacing(column_spacing)" },
        { "trigger": "Gtk.IconView.set_columns", "contents": "Gtk.IconView.set_columns(columns)" },
        { "trigger": "Gtk.IconView.set_cursor", "contents": "Gtk.IconView.set_cursor(path, cell, start_editing)" },
        { "trigger": "Gtk.IconView.set_drag_dest_item", "contents": "Gtk.IconView.set_drag_dest_item(path, pos)" },
        { "trigger": "Gtk.IconView.set_item_orientation", "contents": "Gtk.IconView.set_item_orientation(orientation)" },
        { "trigger": "Gtk.IconView.set_item_padding", "contents": "Gtk.IconView.set_item_padding(item_padding)" },
        { "trigger": "Gtk.IconView.set_item_width", "contents": "Gtk.IconView.set_item_width(item_width)" },
        { "trigger": "Gtk.IconView.set_margin", "contents": "Gtk.IconView.set_margin(margin)" },
        { "trigger": "Gtk.IconView.set_markup_column", "contents": "Gtk.IconView.set_markup_column(column)" },
        { "trigger": "Gtk.IconView.set_model", "contents": "Gtk.IconView.set_model(model)" },
        { "trigger": "Gtk.IconView.set_pixbuf_column", "contents": "Gtk.IconView.set_pixbuf_column(column)" },
        { "trigger": "Gtk.IconView.set_reorderable", "contents": "Gtk.IconView.set_reorderable(reorderable)" },
        { "trigger": "Gtk.IconView.set_row_spacing", "contents": "Gtk.IconView.set_row_spacing(row_spacing)" },
        { "trigger": "Gtk.IconView.set_selection_mode", "contents": "Gtk.IconView.set_selection_mode(mode)" },
        { "trigger": "Gtk.IconView.set_spacing", "contents": "Gtk.IconView.set_spacing(spacing)" },
        { "trigger": "Gtk.IconView.set_text_column", "contents": "Gtk.IconView.set_text_column(column)" },
        { "trigger": "Gtk.IconView.set_tooltip_cell", "contents": "Gtk.IconView.set_tooltip_cell(tooltip, path, cell)" },
        { "trigger": "Gtk.IconView.set_tooltip_column", "contents": "Gtk.IconView.set_tooltip_column(column)" },
        { "trigger": "Gtk.IconView.set_tooltip_item", "contents": "Gtk.IconView.set_tooltip_item(tooltip, path)" },
        { "trigger": "Gtk.IconView.unselect_all", "contents": "Gtk.IconView.unselect_all()" },
        { "trigger": "Gtk.IconView.unselect_path", "contents": "Gtk.IconView.unselect_path(path)" },
        { "trigger": "Gtk.IconView.unset_model_drag_dest", "contents": "Gtk.IconView.unset_model_drag_dest()" },
        { "trigger": "Gtk.IconView.unset_model_drag_source", "contents": "Gtk.IconView.unset_model_drag_source()" },
        { "trigger": "Gtk.IconView.do_activate_cursor_item", "contents": "Gtk.IconView.do_activate_cursor_item()" },
        { "trigger": "Gtk.IconView.do_item_activated", "contents": "Gtk.IconView.do_item_activated(path)" },
        { "trigger": "Gtk.IconView.do_move_cursor", "contents": "Gtk.IconView.do_move_cursor(step, count)" },
        { "trigger": "Gtk.IconView.do_select_all", "contents": "Gtk.IconView.do_select_all()" },
        { "trigger": "Gtk.IconView.do_select_cursor_item", "contents": "Gtk.IconView.do_select_cursor_item()" },
        { "trigger": "Gtk.IconView.do_selection_changed", "contents": "Gtk.IconView.do_selection_changed()" },
        { "trigger": "Gtk.IconView.do_toggle_cursor_item", "contents": "Gtk.IconView.do_toggle_cursor_item()" },
        { "trigger": "Gtk.IconView.do_unselect_all", "contents": "Gtk.IconView.do_unselect_all()" },
        { "trigger": "Gtk.IconView.signals.activate_cursor_item", "contents": "Gtk.IconView.signals.activate_cursor_item(icon_view)" },
        { "trigger": "Gtk.IconView.signals.item_activated", "contents": "Gtk.IconView.signals.item_activated(icon_view, path)" },
        { "trigger": "Gtk.IconView.signals.move_cursor", "contents": "Gtk.IconView.signals.move_cursor(icon_view, step, count)" },
        { "trigger": "Gtk.IconView.signals.select_all", "contents": "Gtk.IconView.signals.select_all(icon_view)" },
        { "trigger": "Gtk.IconView.signals.select_cursor_item", "contents": "Gtk.IconView.signals.select_cursor_item(icon_view)" },
        { "trigger": "Gtk.IconView.signals.selection_changed", "contents": "Gtk.IconView.signals.selection_changed(icon_view)" },
        { "trigger": "Gtk.IconView.signals.toggle_cursor_item", "contents": "Gtk.IconView.signals.toggle_cursor_item(icon_view)" },
        { "trigger": "Gtk.IconView.signals.unselect_all", "contents": "Gtk.IconView.signals.unselect_all(icon_view)" },
        { "trigger": "Gtk.IconView.props.activate_on_single_click", "contents": "Gtk.IconView.props.activate_on_single_click" },
        { "trigger": "Gtk.IconView.props.cell_area", "contents": "Gtk.IconView.props.cell_area" },
        { "trigger": "Gtk.IconView.props.column_spacing", "contents": "Gtk.IconView.props.column_spacing" },
        { "trigger": "Gtk.IconView.props.columns", "contents": "Gtk.IconView.props.columns" },
        { "trigger": "Gtk.IconView.props.item_orientation", "contents": "Gtk.IconView.props.item_orientation" },
        { "trigger": "Gtk.IconView.props.item_padding", "contents": "Gtk.IconView.props.item_padding" },
        { "trigger": "Gtk.IconView.props.item_width", "contents": "Gtk.IconView.props.item_width" },
        { "trigger": "Gtk.IconView.props.markup_column", "contents": "Gtk.IconView.props.markup_column" },
        { "trigger": "Gtk.IconView.props.model", "contents": "Gtk.IconView.props.model" },
        { "trigger": "Gtk.IconView.props.pixbuf_column", "contents": "Gtk.IconView.props.pixbuf_column" },
        { "trigger": "Gtk.IconView.props.reorderable", "contents": "Gtk.IconView.props.reorderable" },
        { "trigger": "Gtk.IconView.props.row_spacing", "contents": "Gtk.IconView.props.row_spacing" },
        { "trigger": "Gtk.IconView.props.selection_mode", "contents": "Gtk.IconView.props.selection_mode" },
        { "trigger": "Gtk.IconView.props.spacing", "contents": "Gtk.IconView.props.spacing" },
        { "trigger": "Gtk.IconView.props.text_column", "contents": "Gtk.IconView.props.text_column" },
        { "trigger": "Gtk.IconView.props.tooltip_column", "contents": "Gtk.IconView.props.tooltip_column" },
        { "trigger": "Gtk.ImageAccessible", "contents": "Gtk.ImageAccessible(**kwargs)" },
        { "trigger": "Gtk.ImageCellAccessible", "contents": "Gtk.ImageCellAccessible(**kwargs)" },
        { "trigger": "Gtk.Image", "contents": "Gtk.Image(**kwargs)" },
        { "trigger": "Gtk.Image.new", "contents": "Gtk.Image.new()" },
        { "trigger": "Gtk.Image.new_from_animation", "contents": "Gtk.Image.new_from_animation(animation)" },
        { "trigger": "Gtk.Image.new_from_file", "contents": "Gtk.Image.new_from_file(filename)" },
        { "trigger": "Gtk.Image.new_from_gicon", "contents": "Gtk.Image.new_from_gicon(icon, size)" },
        { "trigger": "Gtk.Image.new_from_icon_name", "contents": "Gtk.Image.new_from_icon_name(icon_name, size)" },
        { "trigger": "Gtk.Image.new_from_icon_set", "contents": "Gtk.Image.new_from_icon_set(icon_set, size)" },
        { "trigger": "Gtk.Image.new_from_pixbuf", "contents": "Gtk.Image.new_from_pixbuf(pixbuf)" },
        { "trigger": "Gtk.Image.new_from_resource", "contents": "Gtk.Image.new_from_resource(resource_path)" },
        { "trigger": "Gtk.Image.new_from_stock", "contents": "Gtk.Image.new_from_stock(stock_id, size)" },
        { "trigger": "Gtk.Image.new_from_surface", "contents": "Gtk.Image.new_from_surface(surface)" },
        { "trigger": "Gtk.Image.clear", "contents": "Gtk.Image.clear()" },
        { "trigger": "Gtk.Image.get_animation", "contents": "Gtk.Image.get_animation()" },
        { "trigger": "Gtk.Image.get_gicon", "contents": "Gtk.Image.get_gicon()" },
        { "trigger": "Gtk.Image.get_icon_name", "contents": "Gtk.Image.get_icon_name()" },
        { "trigger": "Gtk.Image.get_icon_set", "contents": "Gtk.Image.get_icon_set()" },
        { "trigger": "Gtk.Image.get_pixbuf", "contents": "Gtk.Image.get_pixbuf()" },
        { "trigger": "Gtk.Image.get_pixel_size", "contents": "Gtk.Image.get_pixel_size()" },
        { "trigger": "Gtk.Image.get_stock", "contents": "Gtk.Image.get_stock()" },
        { "trigger": "Gtk.Image.get_storage_type", "contents": "Gtk.Image.get_storage_type()" },
        { "trigger": "Gtk.Image.set_from_animation", "contents": "Gtk.Image.set_from_animation(animation)" },
        { "trigger": "Gtk.Image.set_from_file", "contents": "Gtk.Image.set_from_file(filename)" },
        { "trigger": "Gtk.Image.set_from_gicon", "contents": "Gtk.Image.set_from_gicon(icon, size)" },
        { "trigger": "Gtk.Image.set_from_icon_name", "contents": "Gtk.Image.set_from_icon_name(icon_name, size)" },
        { "trigger": "Gtk.Image.set_from_icon_set", "contents": "Gtk.Image.set_from_icon_set(icon_set, size)" },
        { "trigger": "Gtk.Image.set_from_pixbuf", "contents": "Gtk.Image.set_from_pixbuf(pixbuf)" },
        { "trigger": "Gtk.Image.set_from_resource", "contents": "Gtk.Image.set_from_resource(resource_path)" },
        { "trigger": "Gtk.Image.set_from_stock", "contents": "Gtk.Image.set_from_stock(stock_id, size)" },
        { "trigger": "Gtk.Image.set_from_surface", "contents": "Gtk.Image.set_from_surface(surface)" },
        { "trigger": "Gtk.Image.set_pixel_size", "contents": "Gtk.Image.set_pixel_size(pixel_size)" },
        { "trigger": "Gtk.Image.props.file", "contents": "Gtk.Image.props.file" },
        { "trigger": "Gtk.Image.props.gicon", "contents": "Gtk.Image.props.gicon" },
        { "trigger": "Gtk.Image.props.icon_name", "contents": "Gtk.Image.props.icon_name" },
        { "trigger": "Gtk.Image.props.icon_set", "contents": "Gtk.Image.props.icon_set" },
        { "trigger": "Gtk.Image.props.icon_size", "contents": "Gtk.Image.props.icon_size" },
        { "trigger": "Gtk.Image.props.pixbuf", "contents": "Gtk.Image.props.pixbuf" },
        { "trigger": "Gtk.Image.props.pixbuf_animation", "contents": "Gtk.Image.props.pixbuf_animation" },
        { "trigger": "Gtk.Image.props.pixel_size", "contents": "Gtk.Image.props.pixel_size" },
        { "trigger": "Gtk.Image.props.resource", "contents": "Gtk.Image.props.resource" },
        { "trigger": "Gtk.Image.props.stock", "contents": "Gtk.Image.props.stock" },
        { "trigger": "Gtk.Image.props.storage_type", "contents": "Gtk.Image.props.storage_type" },
        { "trigger": "Gtk.Image.props.surface", "contents": "Gtk.Image.props.surface" },
        { "trigger": "Gtk.Image.props.use_fallback", "contents": "Gtk.Image.props.use_fallback" },
        { "trigger": "Gtk.ImageMenuItem", "contents": "Gtk.ImageMenuItem(*args, **kwargs)" },
        { "trigger": "Gtk.ImageMenuItem.new", "contents": "Gtk.ImageMenuItem.new()" },
        { "trigger": "Gtk.ImageMenuItem.new_from_stock", "contents": "Gtk.ImageMenuItem.new_from_stock(stock_id, accel_group)" },
        { "trigger": "Gtk.ImageMenuItem.new_with_label", "contents": "Gtk.ImageMenuItem.new_with_label(label)" },
        { "trigger": "Gtk.ImageMenuItem.new_with_mnemonic", "contents": "Gtk.ImageMenuItem.new_with_mnemonic(label)" },
        { "trigger": "Gtk.ImageMenuItem.get_always_show_image", "contents": "Gtk.ImageMenuItem.get_always_show_image()" },
        { "trigger": "Gtk.ImageMenuItem.get_image", "contents": "Gtk.ImageMenuItem.get_image()" },
        { "trigger": "Gtk.ImageMenuItem.get_use_stock", "contents": "Gtk.ImageMenuItem.get_use_stock()" },
        { "trigger": "Gtk.ImageMenuItem.set_accel_group", "contents": "Gtk.ImageMenuItem.set_accel_group(accel_group)" },
        { "trigger": "Gtk.ImageMenuItem.set_always_show_image", "contents": "Gtk.ImageMenuItem.set_always_show_image(always_show)" },
        { "trigger": "Gtk.ImageMenuItem.set_image", "contents": "Gtk.ImageMenuItem.set_image(image)" },
        { "trigger": "Gtk.ImageMenuItem.set_use_stock", "contents": "Gtk.ImageMenuItem.set_use_stock(use_stock)" },
        { "trigger": "Gtk.ImageMenuItem.props.accel_group", "contents": "Gtk.ImageMenuItem.props.accel_group" },
        { "trigger": "Gtk.ImageMenuItem.props.always_show_image", "contents": "Gtk.ImageMenuItem.props.always_show_image" },
        { "trigger": "Gtk.ImageMenuItem.props.image", "contents": "Gtk.ImageMenuItem.props.image" },
        { "trigger": "Gtk.ImageMenuItem.props.use_stock", "contents": "Gtk.ImageMenuItem.props.use_stock" },
        { "trigger": "Gtk.IMContext", "contents": "Gtk.IMContext(**kwargs)" },
        { "trigger": "Gtk.IMContext.delete_surrounding", "contents": "Gtk.IMContext.delete_surrounding(offset, n_chars)" },
        { "trigger": "Gtk.IMContext.filter_keypress", "contents": "Gtk.IMContext.filter_keypress(event)" },
        { "trigger": "Gtk.IMContext.focus_in", "contents": "Gtk.IMContext.focus_in()" },
        { "trigger": "Gtk.IMContext.focus_out", "contents": "Gtk.IMContext.focus_out()" },
        { "trigger": "Gtk.IMContext.get_preedit_string", "contents": "Gtk.IMContext.get_preedit_string()" },
        { "trigger": "Gtk.IMContext.get_surrounding", "contents": "Gtk.IMContext.get_surrounding()" },
        { "trigger": "Gtk.IMContext.reset", "contents": "Gtk.IMContext.reset()" },
        { "trigger": "Gtk.IMContext.set_client_window", "contents": "Gtk.IMContext.set_client_window(window)" },
        { "trigger": "Gtk.IMContext.set_cursor_location", "contents": "Gtk.IMContext.set_cursor_location(area)" },
        { "trigger": "Gtk.IMContext.set_surrounding", "contents": "Gtk.IMContext.set_surrounding(text, len, cursor_index)" },
        { "trigger": "Gtk.IMContext.set_use_preedit", "contents": "Gtk.IMContext.set_use_preedit(use_preedit)" },
        { "trigger": "Gtk.IMContext.do_commit", "contents": "Gtk.IMContext.do_commit(str)" },
        { "trigger": "Gtk.IMContext.do_delete_surrounding", "contents": "Gtk.IMContext.do_delete_surrounding(offset, n_chars)" },
        { "trigger": "Gtk.IMContext.do_filter_keypress", "contents": "Gtk.IMContext.do_filter_keypress(event)" },
        { "trigger": "Gtk.IMContext.do_focus_in", "contents": "Gtk.IMContext.do_focus_in()" },
        { "trigger": "Gtk.IMContext.do_focus_out", "contents": "Gtk.IMContext.do_focus_out()" },
        { "trigger": "Gtk.IMContext.do_get_preedit_string", "contents": "Gtk.IMContext.do_get_preedit_string()" },
        { "trigger": "Gtk.IMContext.do_get_surrounding", "contents": "Gtk.IMContext.do_get_surrounding()" },
        { "trigger": "Gtk.IMContext.do_preedit_changed", "contents": "Gtk.IMContext.do_preedit_changed()" },
        { "trigger": "Gtk.IMContext.do_preedit_end", "contents": "Gtk.IMContext.do_preedit_end()" },
        { "trigger": "Gtk.IMContext.do_preedit_start", "contents": "Gtk.IMContext.do_preedit_start()" },
        { "trigger": "Gtk.IMContext.do_reset", "contents": "Gtk.IMContext.do_reset()" },
        { "trigger": "Gtk.IMContext.do_retrieve_surrounding", "contents": "Gtk.IMContext.do_retrieve_surrounding()" },
        { "trigger": "Gtk.IMContext.do_set_client_window", "contents": "Gtk.IMContext.do_set_client_window(window)" },
        { "trigger": "Gtk.IMContext.do_set_cursor_location", "contents": "Gtk.IMContext.do_set_cursor_location(area)" },
        { "trigger": "Gtk.IMContext.do_set_surrounding", "contents": "Gtk.IMContext.do_set_surrounding(text, len, cursor_index)" },
        { "trigger": "Gtk.IMContext.do_set_use_preedit", "contents": "Gtk.IMContext.do_set_use_preedit(use_preedit)" },
        { "trigger": "Gtk.IMContext.signals.commit", "contents": "Gtk.IMContext.signals.commit(i_m_context, str)" },
        { "trigger": "Gtk.IMContext.signals.delete_surrounding", "contents": "Gtk.IMContext.signals.delete_surrounding(i_m_context, offset, n_chars)" },
        { "trigger": "Gtk.IMContext.signals.preedit_changed", "contents": "Gtk.IMContext.signals.preedit_changed(i_m_context)" },
        { "trigger": "Gtk.IMContext.signals.preedit_end", "contents": "Gtk.IMContext.signals.preedit_end(i_m_context)" },
        { "trigger": "Gtk.IMContext.signals.preedit_start", "contents": "Gtk.IMContext.signals.preedit_start(i_m_context)" },
        { "trigger": "Gtk.IMContext.signals.retrieve_surrounding", "contents": "Gtk.IMContext.signals.retrieve_surrounding(i_m_context)" },
        { "trigger": "Gtk.IMContext.props.input_hints", "contents": "Gtk.IMContext.props.input_hints" },
        { "trigger": "Gtk.IMContext.props.input_purpose", "contents": "Gtk.IMContext.props.input_purpose" },
        { "trigger": "Gtk.IMContextSimple", "contents": "Gtk.IMContextSimple(**kwargs)" },
        { "trigger": "Gtk.IMContextSimple.new", "contents": "Gtk.IMContextSimple.new()" },
        { "trigger": "Gtk.IMMulticontext", "contents": "Gtk.IMMulticontext(**kwargs)" },
        { "trigger": "Gtk.IMMulticontext.new", "contents": "Gtk.IMMulticontext.new()" },
        { "trigger": "Gtk.IMMulticontext.append_menuitems", "contents": "Gtk.IMMulticontext.append_menuitems(menushell)" },
        { "trigger": "Gtk.IMMulticontext.get_context_id", "contents": "Gtk.IMMulticontext.get_context_id()" },
        { "trigger": "Gtk.IMMulticontext.set_context_id", "contents": "Gtk.IMMulticontext.set_context_id(context_id)" },
        { "trigger": "Gtk.InfoBar", "contents": "Gtk.InfoBar(*args, **kwargs)" },
        { "trigger": "Gtk.InfoBar.new", "contents": "Gtk.InfoBar.new()" },
        { "trigger": "Gtk.InfoBar.add_action_widget", "contents": "Gtk.InfoBar.add_action_widget(child, response_id)" },
        { "trigger": "Gtk.InfoBar.add_button", "contents": "Gtk.InfoBar.add_button(button_text, response_id)" },
        { "trigger": "Gtk.InfoBar.get_action_area", "contents": "Gtk.InfoBar.get_action_area()" },
        { "trigger": "Gtk.InfoBar.get_content_area", "contents": "Gtk.InfoBar.get_content_area()" },
        { "trigger": "Gtk.InfoBar.get_message_type", "contents": "Gtk.InfoBar.get_message_type()" },
        { "trigger": "Gtk.InfoBar.get_show_close_button", "contents": "Gtk.InfoBar.get_show_close_button()" },
        { "trigger": "Gtk.InfoBar.response", "contents": "Gtk.InfoBar.response(response_id)" },
        { "trigger": "Gtk.InfoBar.set_default_response", "contents": "Gtk.InfoBar.set_default_response(response_id)" },
        { "trigger": "Gtk.InfoBar.set_message_type", "contents": "Gtk.InfoBar.set_message_type(message_type)" },
        { "trigger": "Gtk.InfoBar.set_response_sensitive", "contents": "Gtk.InfoBar.set_response_sensitive(response_id, setting)" },
        { "trigger": "Gtk.InfoBar.set_show_close_button", "contents": "Gtk.InfoBar.set_show_close_button(setting)" },
        { "trigger": "Gtk.InfoBar.do_close", "contents": "Gtk.InfoBar.do_close()" },
        { "trigger": "Gtk.InfoBar.do_response", "contents": "Gtk.InfoBar.do_response(response_id)" },
        { "trigger": "Gtk.InfoBar.signals.close", "contents": "Gtk.InfoBar.signals.close(info_bar)" },
        { "trigger": "Gtk.InfoBar.signals.response", "contents": "Gtk.InfoBar.signals.response(info_bar, response_id)" },
        { "trigger": "Gtk.InfoBar.props.message_type", "contents": "Gtk.InfoBar.props.message_type" },
        { "trigger": "Gtk.InfoBar.props.show_close_button", "contents": "Gtk.InfoBar.props.show_close_button" },
        { "trigger": "Gtk.Invisible", "contents": "Gtk.Invisible(**kwargs)" },
        { "trigger": "Gtk.Invisible.new", "contents": "Gtk.Invisible.new()" },
        { "trigger": "Gtk.Invisible.new_for_screen", "contents": "Gtk.Invisible.new_for_screen(screen)" },
        { "trigger": "Gtk.Invisible.get_screen", "contents": "Gtk.Invisible.get_screen()" },
        { "trigger": "Gtk.Invisible.set_screen", "contents": "Gtk.Invisible.set_screen(screen)" },
        { "trigger": "Gtk.Invisible.props.screen", "contents": "Gtk.Invisible.props.screen" },
        { "trigger": "Gtk.LabelAccessible", "contents": "Gtk.LabelAccessible(**kwargs)" },
        { "trigger": "Gtk.Label", "contents": "Gtk.Label(*args, **kwargs)" },
        { "trigger": "Gtk.Label.new", "contents": "Gtk.Label.new(str)" },
        { "trigger": "Gtk.Label.new_with_mnemonic", "contents": "Gtk.Label.new_with_mnemonic(str)" },
        { "trigger": "Gtk.Label.get_angle", "contents": "Gtk.Label.get_angle()" },
        { "trigger": "Gtk.Label.get_attributes", "contents": "Gtk.Label.get_attributes()" },
        { "trigger": "Gtk.Label.get_current_uri", "contents": "Gtk.Label.get_current_uri()" },
        { "trigger": "Gtk.Label.get_ellipsize", "contents": "Gtk.Label.get_ellipsize()" },
        { "trigger": "Gtk.Label.get_justify", "contents": "Gtk.Label.get_justify()" },
        { "trigger": "Gtk.Label.get_label", "contents": "Gtk.Label.get_label()" },
        { "trigger": "Gtk.Label.get_layout", "contents": "Gtk.Label.get_layout()" },
        { "trigger": "Gtk.Label.get_layout_offsets", "contents": "Gtk.Label.get_layout_offsets()" },
        { "trigger": "Gtk.Label.get_line_wrap", "contents": "Gtk.Label.get_line_wrap()" },
        { "trigger": "Gtk.Label.get_line_wrap_mode", "contents": "Gtk.Label.get_line_wrap_mode()" },
        { "trigger": "Gtk.Label.get_lines", "contents": "Gtk.Label.get_lines()" },
        { "trigger": "Gtk.Label.get_max_width_chars", "contents": "Gtk.Label.get_max_width_chars()" },
        { "trigger": "Gtk.Label.get_mnemonic_keyval", "contents": "Gtk.Label.get_mnemonic_keyval()" },
        { "trigger": "Gtk.Label.get_mnemonic_widget", "contents": "Gtk.Label.get_mnemonic_widget()" },
        { "trigger": "Gtk.Label.get_selectable", "contents": "Gtk.Label.get_selectable()" },
        { "trigger": "Gtk.Label.get_selection_bounds", "contents": "Gtk.Label.get_selection_bounds()" },
        { "trigger": "Gtk.Label.get_single_line_mode", "contents": "Gtk.Label.get_single_line_mode()" },
        { "trigger": "Gtk.Label.get_text", "contents": "Gtk.Label.get_text()" },
        { "trigger": "Gtk.Label.get_track_visited_links", "contents": "Gtk.Label.get_track_visited_links()" },
        { "trigger": "Gtk.Label.get_use_markup", "contents": "Gtk.Label.get_use_markup()" },
        { "trigger": "Gtk.Label.get_use_underline", "contents": "Gtk.Label.get_use_underline()" },
        { "trigger": "Gtk.Label.get_width_chars", "contents": "Gtk.Label.get_width_chars()" },
        { "trigger": "Gtk.Label.get_xalign", "contents": "Gtk.Label.get_xalign()" },
        { "trigger": "Gtk.Label.get_yalign", "contents": "Gtk.Label.get_yalign()" },
        { "trigger": "Gtk.Label.select_region", "contents": "Gtk.Label.select_region(start_offset, end_offset)" },
        { "trigger": "Gtk.Label.set_angle", "contents": "Gtk.Label.set_angle(angle)" },
        { "trigger": "Gtk.Label.set_attributes", "contents": "Gtk.Label.set_attributes(attrs)" },
        { "trigger": "Gtk.Label.set_ellipsize", "contents": "Gtk.Label.set_ellipsize(mode)" },
        { "trigger": "Gtk.Label.set_justify", "contents": "Gtk.Label.set_justify(jtype)" },
        { "trigger": "Gtk.Label.set_label", "contents": "Gtk.Label.set_label(str)" },
        { "trigger": "Gtk.Label.set_line_wrap", "contents": "Gtk.Label.set_line_wrap(wrap)" },
        { "trigger": "Gtk.Label.set_line_wrap_mode", "contents": "Gtk.Label.set_line_wrap_mode(wrap_mode)" },
        { "trigger": "Gtk.Label.set_lines", "contents": "Gtk.Label.set_lines(lines)" },
        { "trigger": "Gtk.Label.set_markup", "contents": "Gtk.Label.set_markup(str)" },
        { "trigger": "Gtk.Label.set_markup_with_mnemonic", "contents": "Gtk.Label.set_markup_with_mnemonic(str)" },
        { "trigger": "Gtk.Label.set_max_width_chars", "contents": "Gtk.Label.set_max_width_chars(n_chars)" },
        { "trigger": "Gtk.Label.set_mnemonic_widget", "contents": "Gtk.Label.set_mnemonic_widget(widget)" },
        { "trigger": "Gtk.Label.set_pattern", "contents": "Gtk.Label.set_pattern(pattern)" },
        { "trigger": "Gtk.Label.set_selectable", "contents": "Gtk.Label.set_selectable(setting)" },
        { "trigger": "Gtk.Label.set_single_line_mode", "contents": "Gtk.Label.set_single_line_mode(single_line_mode)" },
        { "trigger": "Gtk.Label.set_text", "contents": "Gtk.Label.set_text(str)" },
        { "trigger": "Gtk.Label.set_text_with_mnemonic", "contents": "Gtk.Label.set_text_with_mnemonic(str)" },
        { "trigger": "Gtk.Label.set_track_visited_links", "contents": "Gtk.Label.set_track_visited_links(track_links)" },
        { "trigger": "Gtk.Label.set_use_markup", "contents": "Gtk.Label.set_use_markup(setting)" },
        { "trigger": "Gtk.Label.set_use_underline", "contents": "Gtk.Label.set_use_underline(setting)" },
        { "trigger": "Gtk.Label.set_width_chars", "contents": "Gtk.Label.set_width_chars(n_chars)" },
        { "trigger": "Gtk.Label.set_xalign", "contents": "Gtk.Label.set_xalign(xalign)" },
        { "trigger": "Gtk.Label.set_yalign", "contents": "Gtk.Label.set_yalign(yalign)" },
        { "trigger": "Gtk.Label.do_activate_link", "contents": "Gtk.Label.do_activate_link(uri)" },
        { "trigger": "Gtk.Label.do_copy_clipboard", "contents": "Gtk.Label.do_copy_clipboard()" },
        { "trigger": "Gtk.Label.do_move_cursor", "contents": "Gtk.Label.do_move_cursor(step, count, extend_selection)" },
        { "trigger": "Gtk.Label.do_populate_popup", "contents": "Gtk.Label.do_populate_popup(menu)" },
        { "trigger": "Gtk.Label.signals.activate_current_link", "contents": "Gtk.Label.signals.activate_current_link(label)" },
        { "trigger": "Gtk.Label.signals.activate_link", "contents": "Gtk.Label.signals.activate_link(label, uri)" },
        { "trigger": "Gtk.Label.signals.copy_clipboard", "contents": "Gtk.Label.signals.copy_clipboard(label)" },
        { "trigger": "Gtk.Label.signals.move_cursor", "contents": "Gtk.Label.signals.move_cursor(label, step, count, extend_selection)" },
        { "trigger": "Gtk.Label.signals.populate_popup", "contents": "Gtk.Label.signals.populate_popup(label, menu)" },
        { "trigger": "Gtk.Label.props.angle", "contents": "Gtk.Label.props.angle" },
        { "trigger": "Gtk.Label.props.attributes", "contents": "Gtk.Label.props.attributes" },
        { "trigger": "Gtk.Label.props.cursor_position", "contents": "Gtk.Label.props.cursor_position" },
        { "trigger": "Gtk.Label.props.ellipsize", "contents": "Gtk.Label.props.ellipsize" },
        { "trigger": "Gtk.Label.props.justify", "contents": "Gtk.Label.props.justify" },
        { "trigger": "Gtk.Label.props.label", "contents": "Gtk.Label.props.label" },
        { "trigger": "Gtk.Label.props.lines", "contents": "Gtk.Label.props.lines" },
        { "trigger": "Gtk.Label.props.max_width_chars", "contents": "Gtk.Label.props.max_width_chars" },
        { "trigger": "Gtk.Label.props.mnemonic_keyval", "contents": "Gtk.Label.props.mnemonic_keyval" },
        { "trigger": "Gtk.Label.props.mnemonic_widget", "contents": "Gtk.Label.props.mnemonic_widget" },
        { "trigger": "Gtk.Label.props.pattern", "contents": "Gtk.Label.props.pattern" },
        { "trigger": "Gtk.Label.props.selectable", "contents": "Gtk.Label.props.selectable" },
        { "trigger": "Gtk.Label.props.selection_bound", "contents": "Gtk.Label.props.selection_bound" },
        { "trigger": "Gtk.Label.props.single_line_mode", "contents": "Gtk.Label.props.single_line_mode" },
        { "trigger": "Gtk.Label.props.track_visited_links", "contents": "Gtk.Label.props.track_visited_links" },
        { "trigger": "Gtk.Label.props.use_markup", "contents": "Gtk.Label.props.use_markup" },
        { "trigger": "Gtk.Label.props.use_underline", "contents": "Gtk.Label.props.use_underline" },
        { "trigger": "Gtk.Label.props.width_chars", "contents": "Gtk.Label.props.width_chars" },
        { "trigger": "Gtk.Label.props.wrap", "contents": "Gtk.Label.props.wrap" },
        { "trigger": "Gtk.Label.props.wrap_mode", "contents": "Gtk.Label.props.wrap_mode" },
        { "trigger": "Gtk.Layout", "contents": "Gtk.Layout(**kwargs)" },
        { "trigger": "Gtk.Layout.new", "contents": "Gtk.Layout.new(hadjustment, vadjustment)" },
        { "trigger": "Gtk.Layout.get_bin_window", "contents": "Gtk.Layout.get_bin_window()" },
        { "trigger": "Gtk.Layout.get_hadjustment", "contents": "Gtk.Layout.get_hadjustment()" },
        { "trigger": "Gtk.Layout.get_size", "contents": "Gtk.Layout.get_size()" },
        { "trigger": "Gtk.Layout.get_vadjustment", "contents": "Gtk.Layout.get_vadjustment()" },
        { "trigger": "Gtk.Layout.move", "contents": "Gtk.Layout.move(child_widget, x, y)" },
        { "trigger": "Gtk.Layout.put", "contents": "Gtk.Layout.put(child_widget, x, y)" },
        { "trigger": "Gtk.Layout.set_hadjustment", "contents": "Gtk.Layout.set_hadjustment(adjustment)" },
        { "trigger": "Gtk.Layout.set_size", "contents": "Gtk.Layout.set_size(width, height)" },
        { "trigger": "Gtk.Layout.set_vadjustment", "contents": "Gtk.Layout.set_vadjustment(adjustment)" },
        { "trigger": "Gtk.Layout.props.height", "contents": "Gtk.Layout.props.height" },
        { "trigger": "Gtk.Layout.props.width", "contents": "Gtk.Layout.props.width" },
        { "trigger": "Gtk.LevelBarAccessible", "contents": "Gtk.LevelBarAccessible(**kwargs)" },
        { "trigger": "Gtk.LevelBar", "contents": "Gtk.LevelBar(**kwargs)" },
        { "trigger": "Gtk.LevelBar.new", "contents": "Gtk.LevelBar.new()" },
        { "trigger": "Gtk.LevelBar.new_for_interval", "contents": "Gtk.LevelBar.new_for_interval(min_value, max_value)" },
        { "trigger": "Gtk.LevelBar.add_offset_value", "contents": "Gtk.LevelBar.add_offset_value(name, value)" },
        { "trigger": "Gtk.LevelBar.get_inverted", "contents": "Gtk.LevelBar.get_inverted()" },
        { "trigger": "Gtk.LevelBar.get_max_value", "contents": "Gtk.LevelBar.get_max_value()" },
        { "trigger": "Gtk.LevelBar.get_min_value", "contents": "Gtk.LevelBar.get_min_value()" },
        { "trigger": "Gtk.LevelBar.get_mode", "contents": "Gtk.LevelBar.get_mode()" },
        { "trigger": "Gtk.LevelBar.get_offset_value", "contents": "Gtk.LevelBar.get_offset_value(name)" },
        { "trigger": "Gtk.LevelBar.get_value", "contents": "Gtk.LevelBar.get_value()" },
        { "trigger": "Gtk.LevelBar.remove_offset_value", "contents": "Gtk.LevelBar.remove_offset_value(name)" },
        { "trigger": "Gtk.LevelBar.set_inverted", "contents": "Gtk.LevelBar.set_inverted(inverted)" },
        { "trigger": "Gtk.LevelBar.set_max_value", "contents": "Gtk.LevelBar.set_max_value(value)" },
        { "trigger": "Gtk.LevelBar.set_min_value", "contents": "Gtk.LevelBar.set_min_value(value)" },
        { "trigger": "Gtk.LevelBar.set_mode", "contents": "Gtk.LevelBar.set_mode(mode)" },
        { "trigger": "Gtk.LevelBar.set_value", "contents": "Gtk.LevelBar.set_value(value)" },
        { "trigger": "Gtk.LevelBar.do_offset_changed", "contents": "Gtk.LevelBar.do_offset_changed(name)" },
        { "trigger": "Gtk.LevelBar.signals.offset_changed", "contents": "Gtk.LevelBar.signals.offset_changed(level_bar, name)" },
        { "trigger": "Gtk.LevelBar.props.inverted", "contents": "Gtk.LevelBar.props.inverted" },
        { "trigger": "Gtk.LevelBar.props.max_value", "contents": "Gtk.LevelBar.props.max_value" },
        { "trigger": "Gtk.LevelBar.props.min_value", "contents": "Gtk.LevelBar.props.min_value" },
        { "trigger": "Gtk.LevelBar.props.mode", "contents": "Gtk.LevelBar.props.mode" },
        { "trigger": "Gtk.LevelBar.props.value", "contents": "Gtk.LevelBar.props.value" },
        { "trigger": "Gtk.LinkButtonAccessible", "contents": "Gtk.LinkButtonAccessible(**kwargs)" },
        { "trigger": "Gtk.LinkButton", "contents": "Gtk.LinkButton(*args, **kwargs)" },
        { "trigger": "Gtk.LinkButton.new", "contents": "Gtk.LinkButton.new(uri)" },
        { "trigger": "Gtk.LinkButton.new_with_label", "contents": "Gtk.LinkButton.new_with_label(uri, label)" },
        { "trigger": "Gtk.LinkButton.get_uri", "contents": "Gtk.LinkButton.get_uri()" },
        { "trigger": "Gtk.LinkButton.get_visited", "contents": "Gtk.LinkButton.get_visited()" },
        { "trigger": "Gtk.LinkButton.set_uri", "contents": "Gtk.LinkButton.set_uri(uri)" },
        { "trigger": "Gtk.LinkButton.set_visited", "contents": "Gtk.LinkButton.set_visited(visited)" },
        { "trigger": "Gtk.LinkButton.do_activate_link", "contents": "Gtk.LinkButton.do_activate_link()" },
        { "trigger": "Gtk.LinkButton.signals.activate_link", "contents": "Gtk.LinkButton.signals.activate_link(link_button)" },
        { "trigger": "Gtk.LinkButton.props.uri", "contents": "Gtk.LinkButton.props.uri" },
        { "trigger": "Gtk.LinkButton.props.visited", "contents": "Gtk.LinkButton.props.visited" },
        { "trigger": "Gtk.ListBoxAccessible", "contents": "Gtk.ListBoxAccessible(**kwargs)" },
        { "trigger": "Gtk.ListBox", "contents": "Gtk.ListBox(**kwargs)" },
        { "trigger": "Gtk.ListBox.new", "contents": "Gtk.ListBox.new()" },
        { "trigger": "Gtk.ListBox.bind_model", "contents": "Gtk.ListBox.bind_model(model, create_widget_func, *user_data)" },
        { "trigger": "Gtk.ListBox.drag_highlight_row", "contents": "Gtk.ListBox.drag_highlight_row(row)" },
        { "trigger": "Gtk.ListBox.drag_unhighlight_row", "contents": "Gtk.ListBox.drag_unhighlight_row()" },
        { "trigger": "Gtk.ListBox.get_activate_on_single_click", "contents": "Gtk.ListBox.get_activate_on_single_click()" },
        { "trigger": "Gtk.ListBox.get_adjustment", "contents": "Gtk.ListBox.get_adjustment()" },
        { "trigger": "Gtk.ListBox.get_row_at_index", "contents": "Gtk.ListBox.get_row_at_index(index_)" },
        { "trigger": "Gtk.ListBox.get_row_at_y", "contents": "Gtk.ListBox.get_row_at_y(y)" },
        { "trigger": "Gtk.ListBox.get_selected_row", "contents": "Gtk.ListBox.get_selected_row()" },
        { "trigger": "Gtk.ListBox.get_selected_rows", "contents": "Gtk.ListBox.get_selected_rows()" },
        { "trigger": "Gtk.ListBox.get_selection_mode", "contents": "Gtk.ListBox.get_selection_mode()" },
        { "trigger": "Gtk.ListBox.insert", "contents": "Gtk.ListBox.insert(child, position)" },
        { "trigger": "Gtk.ListBox.invalidate_filter", "contents": "Gtk.ListBox.invalidate_filter()" },
        { "trigger": "Gtk.ListBox.invalidate_headers", "contents": "Gtk.ListBox.invalidate_headers()" },
        { "trigger": "Gtk.ListBox.invalidate_sort", "contents": "Gtk.ListBox.invalidate_sort()" },
        { "trigger": "Gtk.ListBox.prepend", "contents": "Gtk.ListBox.prepend(child)" },
        { "trigger": "Gtk.ListBox.select_all", "contents": "Gtk.ListBox.select_all()" },
        { "trigger": "Gtk.ListBox.select_row", "contents": "Gtk.ListBox.select_row(row)" },
        { "trigger": "Gtk.ListBox.selected_foreach", "contents": "Gtk.ListBox.selected_foreach(func, *data)" },
        { "trigger": "Gtk.ListBox.set_activate_on_single_click", "contents": "Gtk.ListBox.set_activate_on_single_click(single)" },
        { "trigger": "Gtk.ListBox.set_adjustment", "contents": "Gtk.ListBox.set_adjustment(adjustment)" },
        { "trigger": "Gtk.ListBox.set_filter_func", "contents": "Gtk.ListBox.set_filter_func(filter_func, *user_data)" },
        { "trigger": "Gtk.ListBox.set_header_func", "contents": "Gtk.ListBox.set_header_func(update_header, *user_data)" },
        { "trigger": "Gtk.ListBox.set_placeholder", "contents": "Gtk.ListBox.set_placeholder(placeholder)" },
        { "trigger": "Gtk.ListBox.set_selection_mode", "contents": "Gtk.ListBox.set_selection_mode(mode)" },
        { "trigger": "Gtk.ListBox.set_sort_func", "contents": "Gtk.ListBox.set_sort_func(sort_func, *user_data)" },
        { "trigger": "Gtk.ListBox.unselect_all", "contents": "Gtk.ListBox.unselect_all()" },
        { "trigger": "Gtk.ListBox.unselect_row", "contents": "Gtk.ListBox.unselect_row(row)" },
        { "trigger": "Gtk.ListBox.do_activate_cursor_row", "contents": "Gtk.ListBox.do_activate_cursor_row()" },
        { "trigger": "Gtk.ListBox.do_move_cursor", "contents": "Gtk.ListBox.do_move_cursor(step, count)" },
        { "trigger": "Gtk.ListBox.do_row_activated", "contents": "Gtk.ListBox.do_row_activated(row)" },
        { "trigger": "Gtk.ListBox.do_row_selected", "contents": "Gtk.ListBox.do_row_selected(row)" },
        { "trigger": "Gtk.ListBox.do_select_all", "contents": "Gtk.ListBox.do_select_all()" },
        { "trigger": "Gtk.ListBox.do_selected_rows_changed", "contents": "Gtk.ListBox.do_selected_rows_changed()" },
        { "trigger": "Gtk.ListBox.do_toggle_cursor_row", "contents": "Gtk.ListBox.do_toggle_cursor_row()" },
        { "trigger": "Gtk.ListBox.do_unselect_all", "contents": "Gtk.ListBox.do_unselect_all()" },
        { "trigger": "Gtk.ListBox.signals.activate_cursor_row", "contents": "Gtk.ListBox.signals.activate_cursor_row(list_box)" },
        { "trigger": "Gtk.ListBox.signals.move_cursor", "contents": "Gtk.ListBox.signals.move_cursor(list_box, object, p0)" },
        { "trigger": "Gtk.ListBox.signals.row_activated", "contents": "Gtk.ListBox.signals.row_activated(list_box, row)" },
        { "trigger": "Gtk.ListBox.signals.row_selected", "contents": "Gtk.ListBox.signals.row_selected(list_box, row)" },
        { "trigger": "Gtk.ListBox.signals.select_all", "contents": "Gtk.ListBox.signals.select_all(list_box)" },
        { "trigger": "Gtk.ListBox.signals.selected_rows_changed", "contents": "Gtk.ListBox.signals.selected_rows_changed(list_box)" },
        { "trigger": "Gtk.ListBox.signals.toggle_cursor_row", "contents": "Gtk.ListBox.signals.toggle_cursor_row(list_box)" },
        { "trigger": "Gtk.ListBox.signals.unselect_all", "contents": "Gtk.ListBox.signals.unselect_all(list_box)" },
        { "trigger": "Gtk.ListBox.props.activate_on_single_click", "contents": "Gtk.ListBox.props.activate_on_single_click" },
        { "trigger": "Gtk.ListBox.props.selection_mode", "contents": "Gtk.ListBox.props.selection_mode" },
        { "trigger": "Gtk.ListBoxRowAccessible", "contents": "Gtk.ListBoxRowAccessible(**kwargs)" },
        { "trigger": "Gtk.ListBoxRow", "contents": "Gtk.ListBoxRow(**kwargs)" },
        { "trigger": "Gtk.ListBoxRow.new", "contents": "Gtk.ListBoxRow.new()" },
        { "trigger": "Gtk.ListBoxRow.changed", "contents": "Gtk.ListBoxRow.changed()" },
        { "trigger": "Gtk.ListBoxRow.get_activatable", "contents": "Gtk.ListBoxRow.get_activatable()" },
        { "trigger": "Gtk.ListBoxRow.get_header", "contents": "Gtk.ListBoxRow.get_header()" },
        { "trigger": "Gtk.ListBoxRow.get_index", "contents": "Gtk.ListBoxRow.get_index()" },
        { "trigger": "Gtk.ListBoxRow.get_selectable", "contents": "Gtk.ListBoxRow.get_selectable()" },
        { "trigger": "Gtk.ListBoxRow.is_selected", "contents": "Gtk.ListBoxRow.is_selected()" },
        { "trigger": "Gtk.ListBoxRow.set_activatable", "contents": "Gtk.ListBoxRow.set_activatable(activatable)" },
        { "trigger": "Gtk.ListBoxRow.set_header", "contents": "Gtk.ListBoxRow.set_header(header)" },
        { "trigger": "Gtk.ListBoxRow.set_selectable", "contents": "Gtk.ListBoxRow.set_selectable(selectable)" },
        { "trigger": "Gtk.ListBoxRow.do_activate", "contents": "Gtk.ListBoxRow.do_activate()" },
        { "trigger": "Gtk.ListBoxRow.signals.activate", "contents": "Gtk.ListBoxRow.signals.activate(list_box_row)" },
        { "trigger": "Gtk.ListBoxRow.props.activatable", "contents": "Gtk.ListBoxRow.props.activatable" },
        { "trigger": "Gtk.ListBoxRow.props.selectable", "contents": "Gtk.ListBoxRow.props.selectable" },
        { "trigger": "Gtk.ListStore", "contents": "Gtk.ListStore(*column_types)" },
        { "trigger": "Gtk.ListStore.new", "contents": "Gtk.ListStore.new(types)" },
        { "trigger": "Gtk.ListStore.append", "contents": "Gtk.ListStore.append(row=None)" },
        { "trigger": "Gtk.ListStore.clear", "contents": "Gtk.ListStore.clear()" },
        { "trigger": "Gtk.ListStore.insert", "contents": "Gtk.ListStore.insert(position, row=None)" },
        { "trigger": "Gtk.ListStore.insert_after", "contents": "Gtk.ListStore.insert_after(sibling, row=None)" },
        { "trigger": "Gtk.ListStore.insert_before", "contents": "Gtk.ListStore.insert_before(sibling, row=None)" },
        { "trigger": "Gtk.ListStore.insert_with_valuesv", "contents": "Gtk.ListStore.insert_with_valuesv(position, columns, values)" },
        { "trigger": "Gtk.ListStore.iter_is_valid", "contents": "Gtk.ListStore.iter_is_valid(iter)" },
        { "trigger": "Gtk.ListStore.move_after", "contents": "Gtk.ListStore.move_after(iter, position)" },
        { "trigger": "Gtk.ListStore.move_before", "contents": "Gtk.ListStore.move_before(iter, position)" },
        { "trigger": "Gtk.ListStore.prepend", "contents": "Gtk.ListStore.prepend(row=None)" },
        { "trigger": "Gtk.ListStore.remove", "contents": "Gtk.ListStore.remove(iter)" },
        { "trigger": "Gtk.ListStore.reorder", "contents": "Gtk.ListStore.reorder(new_order)" },
        { "trigger": "Gtk.ListStore.set", "contents": "Gtk.ListStore.set(iter, columns, values)" },
        { "trigger": "Gtk.ListStore.set_column_types", "contents": "Gtk.ListStore.set_column_types(types)" },
        { "trigger": "Gtk.ListStore.set_value", "contents": "Gtk.ListStore.set_value(iter, column, value)" },
        { "trigger": "Gtk.ListStore.swap", "contents": "Gtk.ListStore.swap(a, b)" },
        { "trigger": "Gtk.LockButtonAccessible", "contents": "Gtk.LockButtonAccessible(**kwargs)" },
        { "trigger": "Gtk.LockButton", "contents": "Gtk.LockButton(*args, **kwargs)" },
        { "trigger": "Gtk.LockButton.new", "contents": "Gtk.LockButton.new(permission)" },
        { "trigger": "Gtk.LockButton.get_permission", "contents": "Gtk.LockButton.get_permission()" },
        { "trigger": "Gtk.LockButton.set_permission", "contents": "Gtk.LockButton.set_permission(permission)" },
        { "trigger": "Gtk.LockButton.props.permission", "contents": "Gtk.LockButton.props.permission" },
        { "trigger": "Gtk.LockButton.props.text_lock", "contents": "Gtk.LockButton.props.text_lock" },
        { "trigger": "Gtk.LockButton.props.text_unlock", "contents": "Gtk.LockButton.props.text_unlock" },
        { "trigger": "Gtk.LockButton.props.tooltip_lock", "contents": "Gtk.LockButton.props.tooltip_lock" },
        { "trigger": "Gtk.LockButton.props.tooltip_not_authorized", "contents": "Gtk.LockButton.props.tooltip_not_authorized" },
        { "trigger": "Gtk.LockButton.props.tooltip_unlock", "contents": "Gtk.LockButton.props.tooltip_unlock" },
        { "trigger": "Gtk.MenuAccessible", "contents": "Gtk.MenuAccessible(**kwargs)" },
        { "trigger": "Gtk.MenuBar", "contents": "Gtk.MenuBar(**kwargs)" },
        { "trigger": "Gtk.MenuBar.new", "contents": "Gtk.MenuBar.new()" },
        { "trigger": "Gtk.MenuBar.new_from_model", "contents": "Gtk.MenuBar.new_from_model(model)" },
        { "trigger": "Gtk.MenuBar.get_child_pack_direction", "contents": "Gtk.MenuBar.get_child_pack_direction()" },
        { "trigger": "Gtk.MenuBar.get_pack_direction", "contents": "Gtk.MenuBar.get_pack_direction()" },
        { "trigger": "Gtk.MenuBar.set_child_pack_direction", "contents": "Gtk.MenuBar.set_child_pack_direction(child_pack_dir)" },
        { "trigger": "Gtk.MenuBar.set_pack_direction", "contents": "Gtk.MenuBar.set_pack_direction(pack_dir)" },
        { "trigger": "Gtk.MenuBar.props.child_pack_direction", "contents": "Gtk.MenuBar.props.child_pack_direction" },
        { "trigger": "Gtk.MenuBar.props.pack_direction", "contents": "Gtk.MenuBar.props.pack_direction" },
        { "trigger": "Gtk.MenuButtonAccessible", "contents": "Gtk.MenuButtonAccessible(**kwargs)" },
        { "trigger": "Gtk.MenuButton", "contents": "Gtk.MenuButton(*args, **kwargs)" },
        { "trigger": "Gtk.MenuButton.new", "contents": "Gtk.MenuButton.new()" },
        { "trigger": "Gtk.MenuButton.get_align_widget", "contents": "Gtk.MenuButton.get_align_widget()" },
        { "trigger": "Gtk.MenuButton.get_direction", "contents": "Gtk.MenuButton.get_direction()" },
        { "trigger": "Gtk.MenuButton.get_menu_model", "contents": "Gtk.MenuButton.get_menu_model()" },
        { "trigger": "Gtk.MenuButton.get_popover", "contents": "Gtk.MenuButton.get_popover()" },
        { "trigger": "Gtk.MenuButton.get_popup", "contents": "Gtk.MenuButton.get_popup()" },
        { "trigger": "Gtk.MenuButton.get_use_popover", "contents": "Gtk.MenuButton.get_use_popover()" },
        { "trigger": "Gtk.MenuButton.set_align_widget", "contents": "Gtk.MenuButton.set_align_widget(align_widget)" },
        { "trigger": "Gtk.MenuButton.set_direction", "contents": "Gtk.MenuButton.set_direction(direction)" },
        { "trigger": "Gtk.MenuButton.set_menu_model", "contents": "Gtk.MenuButton.set_menu_model(menu_model)" },
        { "trigger": "Gtk.MenuButton.set_popover", "contents": "Gtk.MenuButton.set_popover(popover)" },
        { "trigger": "Gtk.MenuButton.set_popup", "contents": "Gtk.MenuButton.set_popup(menu)" },
        { "trigger": "Gtk.MenuButton.set_use_popover", "contents": "Gtk.MenuButton.set_use_popover(use_popover)" },
        { "trigger": "Gtk.MenuButton.props.align_widget", "contents": "Gtk.MenuButton.props.align_widget" },
        { "trigger": "Gtk.MenuButton.props.direction", "contents": "Gtk.MenuButton.props.direction" },
        { "trigger": "Gtk.MenuButton.props.menu_model", "contents": "Gtk.MenuButton.props.menu_model" },
        { "trigger": "Gtk.MenuButton.props.popover", "contents": "Gtk.MenuButton.props.popover" },
        { "trigger": "Gtk.MenuButton.props.popup", "contents": "Gtk.MenuButton.props.popup" },
        { "trigger": "Gtk.MenuButton.props.use_popover", "contents": "Gtk.MenuButton.props.use_popover" },
        { "trigger": "Gtk.Menu", "contents": "Gtk.Menu(**kwargs)" },
        { "trigger": "Gtk.Menu.get_for_attach_widget", "contents": "Gtk.Menu.get_for_attach_widget(widget)" },
        { "trigger": "Gtk.Menu.new", "contents": "Gtk.Menu.new()" },
        { "trigger": "Gtk.Menu.new_from_model", "contents": "Gtk.Menu.new_from_model(model)" },
        { "trigger": "Gtk.Menu.attach", "contents": "Gtk.Menu.attach(child, left_attach, right_attach, top_attach, bottom_attach)" },
        { "trigger": "Gtk.Menu.attach_to_widget", "contents": "Gtk.Menu.attach_to_widget(attach_widget, detacher)" },
        { "trigger": "Gtk.Menu.detach", "contents": "Gtk.Menu.detach()" },
        { "trigger": "Gtk.Menu.get_accel_group", "contents": "Gtk.Menu.get_accel_group()" },
        { "trigger": "Gtk.Menu.get_accel_path", "contents": "Gtk.Menu.get_accel_path()" },
        { "trigger": "Gtk.Menu.get_active", "contents": "Gtk.Menu.get_active()" },
        { "trigger": "Gtk.Menu.get_attach_widget", "contents": "Gtk.Menu.get_attach_widget()" },
        { "trigger": "Gtk.Menu.get_monitor", "contents": "Gtk.Menu.get_monitor()" },
        { "trigger": "Gtk.Menu.get_reserve_toggle_size", "contents": "Gtk.Menu.get_reserve_toggle_size()" },
        { "trigger": "Gtk.Menu.get_tearoff_state", "contents": "Gtk.Menu.get_tearoff_state()" },
        { "trigger": "Gtk.Menu.get_title", "contents": "Gtk.Menu.get_title()" },
        { "trigger": "Gtk.Menu.popdown", "contents": "Gtk.Menu.popdown()" },
        { "trigger": "Gtk.Menu.popup", "contents": "Gtk.Menu.popup(parent_menu_shell, parent_menu_item, func, data, button, activate_time)" },
        { "trigger": "Gtk.Menu.popup_for_device", "contents": "Gtk.Menu.popup_for_device(device, parent_menu_shell, parent_menu_item, func, data, button, activate_time)" },
        { "trigger": "Gtk.Menu.reorder_child", "contents": "Gtk.Menu.reorder_child(child, position)" },
        { "trigger": "Gtk.Menu.reposition", "contents": "Gtk.Menu.reposition()" },
        { "trigger": "Gtk.Menu.set_accel_group", "contents": "Gtk.Menu.set_accel_group(accel_group)" },
        { "trigger": "Gtk.Menu.set_accel_path", "contents": "Gtk.Menu.set_accel_path(accel_path)" },
        { "trigger": "Gtk.Menu.set_active", "contents": "Gtk.Menu.set_active(index)" },
        { "trigger": "Gtk.Menu.set_monitor", "contents": "Gtk.Menu.set_monitor(monitor_num)" },
        { "trigger": "Gtk.Menu.set_reserve_toggle_size", "contents": "Gtk.Menu.set_reserve_toggle_size(reserve_toggle_size)" },
        { "trigger": "Gtk.Menu.set_screen", "contents": "Gtk.Menu.set_screen(screen)" },
        { "trigger": "Gtk.Menu.set_tearoff_state", "contents": "Gtk.Menu.set_tearoff_state(torn_off)" },
        { "trigger": "Gtk.Menu.set_title", "contents": "Gtk.Menu.set_title(title)" },
        { "trigger": "Gtk.Menu.signals.move_scroll", "contents": "Gtk.Menu.signals.move_scroll(menu, scroll_type)" },
        { "trigger": "Gtk.Menu.props.accel_group", "contents": "Gtk.Menu.props.accel_group" },
        { "trigger": "Gtk.Menu.props.accel_path", "contents": "Gtk.Menu.props.accel_path" },
        { "trigger": "Gtk.Menu.props.active", "contents": "Gtk.Menu.props.active" },
        { "trigger": "Gtk.Menu.props.attach_widget", "contents": "Gtk.Menu.props.attach_widget" },
        { "trigger": "Gtk.Menu.props.monitor", "contents": "Gtk.Menu.props.monitor" },
        { "trigger": "Gtk.Menu.props.reserve_toggle_size", "contents": "Gtk.Menu.props.reserve_toggle_size" },
        { "trigger": "Gtk.Menu.props.tearoff_state", "contents": "Gtk.Menu.props.tearoff_state" },
        { "trigger": "Gtk.Menu.props.tearoff_title", "contents": "Gtk.Menu.props.tearoff_title" },
        { "trigger": "Gtk.MenuItemAccessible", "contents": "Gtk.MenuItemAccessible(**kwargs)" },
        { "trigger": "Gtk.MenuItem", "contents": "Gtk.MenuItem(*args, **kwargs)" },
        { "trigger": "Gtk.MenuItem.new", "contents": "Gtk.MenuItem.new()" },
        { "trigger": "Gtk.MenuItem.new_with_label", "contents": "Gtk.MenuItem.new_with_label(label)" },
        { "trigger": "Gtk.MenuItem.new_with_mnemonic", "contents": "Gtk.MenuItem.new_with_mnemonic(label)" },
        { "trigger": "Gtk.MenuItem.activate", "contents": "Gtk.MenuItem.activate()" },
        { "trigger": "Gtk.MenuItem.deselect", "contents": "Gtk.MenuItem.deselect()" },
        { "trigger": "Gtk.MenuItem.get_accel_path", "contents": "Gtk.MenuItem.get_accel_path()" },
        { "trigger": "Gtk.MenuItem.get_label", "contents": "Gtk.MenuItem.get_label()" },
        { "trigger": "Gtk.MenuItem.get_reserve_indicator", "contents": "Gtk.MenuItem.get_reserve_indicator()" },
        { "trigger": "Gtk.MenuItem.get_right_justified", "contents": "Gtk.MenuItem.get_right_justified()" },
        { "trigger": "Gtk.MenuItem.get_submenu", "contents": "Gtk.MenuItem.get_submenu()" },
        { "trigger": "Gtk.MenuItem.get_use_underline", "contents": "Gtk.MenuItem.get_use_underline()" },
        { "trigger": "Gtk.MenuItem.select", "contents": "Gtk.MenuItem.select()" },
        { "trigger": "Gtk.MenuItem.set_accel_path", "contents": "Gtk.MenuItem.set_accel_path(accel_path)" },
        { "trigger": "Gtk.MenuItem.set_label", "contents": "Gtk.MenuItem.set_label(label)" },
        { "trigger": "Gtk.MenuItem.set_reserve_indicator", "contents": "Gtk.MenuItem.set_reserve_indicator(reserve)" },
        { "trigger": "Gtk.MenuItem.set_right_justified", "contents": "Gtk.MenuItem.set_right_justified(right_justified)" },
        { "trigger": "Gtk.MenuItem.set_submenu", "contents": "Gtk.MenuItem.set_submenu(submenu)" },
        { "trigger": "Gtk.MenuItem.set_use_underline", "contents": "Gtk.MenuItem.set_use_underline(setting)" },
        { "trigger": "Gtk.MenuItem.toggle_size_allocate", "contents": "Gtk.MenuItem.toggle_size_allocate(allocation)" },
        { "trigger": "Gtk.MenuItem.toggle_size_request", "contents": "Gtk.MenuItem.toggle_size_request(requisition)" },
        { "trigger": "Gtk.MenuItem.do_activate", "contents": "Gtk.MenuItem.do_activate()" },
        { "trigger": "Gtk.MenuItem.do_activate_item", "contents": "Gtk.MenuItem.do_activate_item()" },
        { "trigger": "Gtk.MenuItem.do_deselect", "contents": "Gtk.MenuItem.do_deselect()" },
        { "trigger": "Gtk.MenuItem.do_get_label", "contents": "Gtk.MenuItem.do_get_label()" },
        { "trigger": "Gtk.MenuItem.do_select", "contents": "Gtk.MenuItem.do_select()" },
        { "trigger": "Gtk.MenuItem.do_set_label", "contents": "Gtk.MenuItem.do_set_label(label)" },
        { "trigger": "Gtk.MenuItem.do_toggle_size_allocate", "contents": "Gtk.MenuItem.do_toggle_size_allocate(allocation)" },
        { "trigger": "Gtk.MenuItem.do_toggle_size_request", "contents": "Gtk.MenuItem.do_toggle_size_request(requisition)" },
        { "trigger": "Gtk.MenuItem.signals.activate", "contents": "Gtk.MenuItem.signals.activate(menu_item)" },
        { "trigger": "Gtk.MenuItem.signals.activate_item", "contents": "Gtk.MenuItem.signals.activate_item(menu_item)" },
        { "trigger": "Gtk.MenuItem.signals.deselect", "contents": "Gtk.MenuItem.signals.deselect(menu_item)" },
        { "trigger": "Gtk.MenuItem.signals.select", "contents": "Gtk.MenuItem.signals.select(menu_item)" },
        { "trigger": "Gtk.MenuItem.signals.toggle_size_allocate", "contents": "Gtk.MenuItem.signals.toggle_size_allocate(menu_item, object)" },
        { "trigger": "Gtk.MenuItem.signals.toggle_size_request", "contents": "Gtk.MenuItem.signals.toggle_size_request(menu_item, object)" },
        { "trigger": "Gtk.MenuItem.props.accel_path", "contents": "Gtk.MenuItem.props.accel_path" },
        { "trigger": "Gtk.MenuItem.props.label", "contents": "Gtk.MenuItem.props.label" },
        { "trigger": "Gtk.MenuItem.props.right_justified", "contents": "Gtk.MenuItem.props.right_justified" },
        { "trigger": "Gtk.MenuItem.props.submenu", "contents": "Gtk.MenuItem.props.submenu" },
        { "trigger": "Gtk.MenuItem.props.use_underline", "contents": "Gtk.MenuItem.props.use_underline" },
        { "trigger": "Gtk.MenuShellAccessible", "contents": "Gtk.MenuShellAccessible(**kwargs)" },
        { "trigger": "Gtk.MenuShell", "contents": "Gtk.MenuShell(**kwargs)" },
        { "trigger": "Gtk.MenuShell.activate_item", "contents": "Gtk.MenuShell.activate_item(menu_item, force_deactivate)" },
        { "trigger": "Gtk.MenuShell.append", "contents": "Gtk.MenuShell.append(child)" },
        { "trigger": "Gtk.MenuShell.bind_model", "contents": "Gtk.MenuShell.bind_model(model, action_namespace, with_separators)" },
        { "trigger": "Gtk.MenuShell.cancel", "contents": "Gtk.MenuShell.cancel()" },
        { "trigger": "Gtk.MenuShell.deactivate", "contents": "Gtk.MenuShell.deactivate()" },
        { "trigger": "Gtk.MenuShell.deselect", "contents": "Gtk.MenuShell.deselect()" },
        { "trigger": "Gtk.MenuShell.get_parent_shell", "contents": "Gtk.MenuShell.get_parent_shell()" },
        { "trigger": "Gtk.MenuShell.get_selected_item", "contents": "Gtk.MenuShell.get_selected_item()" },
        { "trigger": "Gtk.MenuShell.get_take_focus", "contents": "Gtk.MenuShell.get_take_focus()" },
        { "trigger": "Gtk.MenuShell.insert", "contents": "Gtk.MenuShell.insert(child, position)" },
        { "trigger": "Gtk.MenuShell.prepend", "contents": "Gtk.MenuShell.prepend(child)" },
        { "trigger": "Gtk.MenuShell.select_first", "contents": "Gtk.MenuShell.select_first(search_sensitive)" },
        { "trigger": "Gtk.MenuShell.select_item", "contents": "Gtk.MenuShell.select_item(menu_item)" },
        { "trigger": "Gtk.MenuShell.set_take_focus", "contents": "Gtk.MenuShell.set_take_focus(take_focus)" },
        { "trigger": "Gtk.MenuShell.do_activate_current", "contents": "Gtk.MenuShell.do_activate_current(force_hide)" },
        { "trigger": "Gtk.MenuShell.do_cancel", "contents": "Gtk.MenuShell.do_cancel()" },
        { "trigger": "Gtk.MenuShell.do_deactivate", "contents": "Gtk.MenuShell.do_deactivate()" },
        { "trigger": "Gtk.MenuShell.do_get_popup_delay", "contents": "Gtk.MenuShell.do_get_popup_delay()" },
        { "trigger": "Gtk.MenuShell.do_insert", "contents": "Gtk.MenuShell.do_insert(child, position)" },
        { "trigger": "Gtk.MenuShell.do_move_current", "contents": "Gtk.MenuShell.do_move_current(direction)" },
        { "trigger": "Gtk.MenuShell.do_move_selected", "contents": "Gtk.MenuShell.do_move_selected(distance)" },
        { "trigger": "Gtk.MenuShell.do_select_item", "contents": "Gtk.MenuShell.do_select_item(menu_item)" },
        { "trigger": "Gtk.MenuShell.do_selection_done", "contents": "Gtk.MenuShell.do_selection_done()" },
        { "trigger": "Gtk.MenuShell.signals.activate_current", "contents": "Gtk.MenuShell.signals.activate_current(menu_shell, force_hide)" },
        { "trigger": "Gtk.MenuShell.signals.cancel", "contents": "Gtk.MenuShell.signals.cancel(menu_shell)" },
        { "trigger": "Gtk.MenuShell.signals.cycle_focus", "contents": "Gtk.MenuShell.signals.cycle_focus(menu_shell, direction)" },
        { "trigger": "Gtk.MenuShell.signals.deactivate", "contents": "Gtk.MenuShell.signals.deactivate(menu_shell)" },
        { "trigger": "Gtk.MenuShell.signals.insert", "contents": "Gtk.MenuShell.signals.insert(menu_shell, child, position)" },
        { "trigger": "Gtk.MenuShell.signals.move_current", "contents": "Gtk.MenuShell.signals.move_current(menu_shell, direction)" },
        { "trigger": "Gtk.MenuShell.signals.move_selected", "contents": "Gtk.MenuShell.signals.move_selected(menu_shell, distance)" },
        { "trigger": "Gtk.MenuShell.signals.selection_done", "contents": "Gtk.MenuShell.signals.selection_done(menu_shell)" },
        { "trigger": "Gtk.MenuShell.props.take_focus", "contents": "Gtk.MenuShell.props.take_focus" },
        { "trigger": "Gtk.MenuToolButton", "contents": "Gtk.MenuToolButton(*args, **kwargs)" },
        { "trigger": "Gtk.MenuToolButton.new", "contents": "Gtk.MenuToolButton.new(icon_widget, label)" },
        { "trigger": "Gtk.MenuToolButton.new_from_stock", "contents": "Gtk.MenuToolButton.new_from_stock(stock_id)" },
        { "trigger": "Gtk.MenuToolButton.get_menu", "contents": "Gtk.MenuToolButton.get_menu()" },
        { "trigger": "Gtk.MenuToolButton.set_arrow_tooltip_markup", "contents": "Gtk.MenuToolButton.set_arrow_tooltip_markup(markup)" },
        { "trigger": "Gtk.MenuToolButton.set_arrow_tooltip_text", "contents": "Gtk.MenuToolButton.set_arrow_tooltip_text(text)" },
        { "trigger": "Gtk.MenuToolButton.set_menu", "contents": "Gtk.MenuToolButton.set_menu(menu)" },
        { "trigger": "Gtk.MenuToolButton.do_show_menu", "contents": "Gtk.MenuToolButton.do_show_menu()" },
        { "trigger": "Gtk.MenuToolButton.signals.show_menu", "contents": "Gtk.MenuToolButton.signals.show_menu(menu_tool_button)" },
        { "trigger": "Gtk.MenuToolButton.props.menu", "contents": "Gtk.MenuToolButton.props.menu" },
        { "trigger": "Gtk.MessageDialog", "contents": "Gtk.MessageDialog(*args, **kwargs)" },
        { "trigger": "Gtk.MessageDialog.format_secondary_markup", "contents": "Gtk.MessageDialog.format_secondary_markup(message_format)" },
        { "trigger": "Gtk.MessageDialog.format_secondary_text", "contents": "Gtk.MessageDialog.format_secondary_text(message_format)" },
        { "trigger": "Gtk.MessageDialog.get_image", "contents": "Gtk.MessageDialog.get_image()" },
        { "trigger": "Gtk.MessageDialog.get_message_area", "contents": "Gtk.MessageDialog.get_message_area()" },
        { "trigger": "Gtk.MessageDialog.set_image", "contents": "Gtk.MessageDialog.set_image(image)" },
        { "trigger": "Gtk.MessageDialog.set_markup", "contents": "Gtk.MessageDialog.set_markup(str)" },
        { "trigger": "Gtk.MessageDialog.props.buttons", "contents": "Gtk.MessageDialog.props.buttons" },
        { "trigger": "Gtk.MessageDialog.props.image", "contents": "Gtk.MessageDialog.props.image" },
        { "trigger": "Gtk.MessageDialog.props.message_area", "contents": "Gtk.MessageDialog.props.message_area" },
        { "trigger": "Gtk.MessageDialog.props.message_type", "contents": "Gtk.MessageDialog.props.message_type" },
        { "trigger": "Gtk.MessageDialog.props.secondary_text", "contents": "Gtk.MessageDialog.props.secondary_text" },
        { "trigger": "Gtk.MessageDialog.props.secondary_use_markup", "contents": "Gtk.MessageDialog.props.secondary_use_markup" },
        { "trigger": "Gtk.MessageDialog.props.text", "contents": "Gtk.MessageDialog.props.text" },
        { "trigger": "Gtk.MessageDialog.props.use_markup", "contents": "Gtk.MessageDialog.props.use_markup" },
        { "trigger": "Gtk.Misc", "contents": "Gtk.Misc(**kwargs)" },
        { "trigger": "Gtk.Misc.get_alignment", "contents": "Gtk.Misc.get_alignment()" },
        { "trigger": "Gtk.Misc.get_padding", "contents": "Gtk.Misc.get_padding()" },
        { "trigger": "Gtk.Misc.set_alignment", "contents": "Gtk.Misc.set_alignment(xalign, yalign)" },
        { "trigger": "Gtk.Misc.set_padding", "contents": "Gtk.Misc.set_padding(xpad, ypad)" },
        { "trigger": "Gtk.Misc.props.xalign", "contents": "Gtk.Misc.props.xalign" },
        { "trigger": "Gtk.Misc.props.xpad", "contents": "Gtk.Misc.props.xpad" },
        { "trigger": "Gtk.Misc.props.yalign", "contents": "Gtk.Misc.props.yalign" },
        { "trigger": "Gtk.Misc.props.ypad", "contents": "Gtk.Misc.props.ypad" },
        { "trigger": "Gtk.ModelButton", "contents": "Gtk.ModelButton(*args, **kwargs)" },
        { "trigger": "Gtk.ModelButton.new", "contents": "Gtk.ModelButton.new()" },
        { "trigger": "Gtk.ModelButton.props.active", "contents": "Gtk.ModelButton.props.active" },
        { "trigger": "Gtk.ModelButton.props.centered", "contents": "Gtk.ModelButton.props.centered" },
        { "trigger": "Gtk.ModelButton.props.icon", "contents": "Gtk.ModelButton.props.icon" },
        { "trigger": "Gtk.ModelButton.props.iconic", "contents": "Gtk.ModelButton.props.iconic" },
        { "trigger": "Gtk.ModelButton.props.inverted", "contents": "Gtk.ModelButton.props.inverted" },
        { "trigger": "Gtk.ModelButton.props.menu_name", "contents": "Gtk.ModelButton.props.menu_name" },
        { "trigger": "Gtk.ModelButton.props.role", "contents": "Gtk.ModelButton.props.role" },
        { "trigger": "Gtk.ModelButton.props.text", "contents": "Gtk.ModelButton.props.text" },
        { "trigger": "Gtk.MountOperation", "contents": "Gtk.MountOperation(**kwargs)" },
        { "trigger": "Gtk.MountOperation.new", "contents": "Gtk.MountOperation.new(parent)" },
        { "trigger": "Gtk.MountOperation.get_parent", "contents": "Gtk.MountOperation.get_parent()" },
        { "trigger": "Gtk.MountOperation.get_screen", "contents": "Gtk.MountOperation.get_screen()" },
        { "trigger": "Gtk.MountOperation.is_showing", "contents": "Gtk.MountOperation.is_showing()" },
        { "trigger": "Gtk.MountOperation.set_parent", "contents": "Gtk.MountOperation.set_parent(parent)" },
        { "trigger": "Gtk.MountOperation.set_screen", "contents": "Gtk.MountOperation.set_screen(screen)" },
        { "trigger": "Gtk.MountOperation.props.is_showing", "contents": "Gtk.MountOperation.props.is_showing" },
        { "trigger": "Gtk.MountOperation.props.parent", "contents": "Gtk.MountOperation.props.parent" },
        { "trigger": "Gtk.MountOperation.props.screen", "contents": "Gtk.MountOperation.props.screen" },
        { "trigger": "Gtk.NotebookAccessible", "contents": "Gtk.NotebookAccessible(**kwargs)" },
        { "trigger": "Gtk.Notebook", "contents": "Gtk.Notebook(**kwargs)" },
        { "trigger": "Gtk.Notebook.new", "contents": "Gtk.Notebook.new()" },
        { "trigger": "Gtk.Notebook.append_page", "contents": "Gtk.Notebook.append_page(child, tab_label)" },
        { "trigger": "Gtk.Notebook.append_page_menu", "contents": "Gtk.Notebook.append_page_menu(child, tab_label, menu_label)" },
        { "trigger": "Gtk.Notebook.detach_tab", "contents": "Gtk.Notebook.detach_tab(child)" },
        { "trigger": "Gtk.Notebook.get_action_widget", "contents": "Gtk.Notebook.get_action_widget(pack_type)" },
        { "trigger": "Gtk.Notebook.get_current_page", "contents": "Gtk.Notebook.get_current_page()" },
        { "trigger": "Gtk.Notebook.get_group_name", "contents": "Gtk.Notebook.get_group_name()" },
        { "trigger": "Gtk.Notebook.get_menu_label", "contents": "Gtk.Notebook.get_menu_label(child)" },
        { "trigger": "Gtk.Notebook.get_menu_label_text", "contents": "Gtk.Notebook.get_menu_label_text(child)" },
        { "trigger": "Gtk.Notebook.get_n_pages", "contents": "Gtk.Notebook.get_n_pages()" },
        { "trigger": "Gtk.Notebook.get_nth_page", "contents": "Gtk.Notebook.get_nth_page(page_num)" },
        { "trigger": "Gtk.Notebook.get_scrollable", "contents": "Gtk.Notebook.get_scrollable()" },
        { "trigger": "Gtk.Notebook.get_show_border", "contents": "Gtk.Notebook.get_show_border()" },
        { "trigger": "Gtk.Notebook.get_show_tabs", "contents": "Gtk.Notebook.get_show_tabs()" },
        { "trigger": "Gtk.Notebook.get_tab_detachable", "contents": "Gtk.Notebook.get_tab_detachable(child)" },
        { "trigger": "Gtk.Notebook.get_tab_hborder", "contents": "Gtk.Notebook.get_tab_hborder()" },
        { "trigger": "Gtk.Notebook.get_tab_label", "contents": "Gtk.Notebook.get_tab_label(child)" },
        { "trigger": "Gtk.Notebook.get_tab_label_text", "contents": "Gtk.Notebook.get_tab_label_text(child)" },
        { "trigger": "Gtk.Notebook.get_tab_pos", "contents": "Gtk.Notebook.get_tab_pos()" },
        { "trigger": "Gtk.Notebook.get_tab_reorderable", "contents": "Gtk.Notebook.get_tab_reorderable(child)" },
        { "trigger": "Gtk.Notebook.get_tab_vborder", "contents": "Gtk.Notebook.get_tab_vborder()" },
        { "trigger": "Gtk.Notebook.insert_page", "contents": "Gtk.Notebook.insert_page(child, tab_label, position)" },
        { "trigger": "Gtk.Notebook.insert_page_menu", "contents": "Gtk.Notebook.insert_page_menu(child, tab_label, menu_label, position)" },
        { "trigger": "Gtk.Notebook.next_page", "contents": "Gtk.Notebook.next_page()" },
        { "trigger": "Gtk.Notebook.page_num", "contents": "Gtk.Notebook.page_num(child)" },
        { "trigger": "Gtk.Notebook.popup_disable", "contents": "Gtk.Notebook.popup_disable()" },
        { "trigger": "Gtk.Notebook.popup_enable", "contents": "Gtk.Notebook.popup_enable()" },
        { "trigger": "Gtk.Notebook.prepend_page", "contents": "Gtk.Notebook.prepend_page(child, tab_label)" },
        { "trigger": "Gtk.Notebook.prepend_page_menu", "contents": "Gtk.Notebook.prepend_page_menu(child, tab_label, menu_label)" },
        { "trigger": "Gtk.Notebook.prev_page", "contents": "Gtk.Notebook.prev_page()" },
        { "trigger": "Gtk.Notebook.remove_page", "contents": "Gtk.Notebook.remove_page(page_num)" },
        { "trigger": "Gtk.Notebook.reorder_child", "contents": "Gtk.Notebook.reorder_child(child, position)" },
        { "trigger": "Gtk.Notebook.set_action_widget", "contents": "Gtk.Notebook.set_action_widget(widget, pack_type)" },
        { "trigger": "Gtk.Notebook.set_current_page", "contents": "Gtk.Notebook.set_current_page(page_num)" },
        { "trigger": "Gtk.Notebook.set_group_name", "contents": "Gtk.Notebook.set_group_name(group_name)" },
        { "trigger": "Gtk.Notebook.set_menu_label", "contents": "Gtk.Notebook.set_menu_label(child, menu_label)" },
        { "trigger": "Gtk.Notebook.set_menu_label_text", "contents": "Gtk.Notebook.set_menu_label_text(child, menu_text)" },
        { "trigger": "Gtk.Notebook.set_scrollable", "contents": "Gtk.Notebook.set_scrollable(scrollable)" },
        { "trigger": "Gtk.Notebook.set_show_border", "contents": "Gtk.Notebook.set_show_border(show_border)" },
        { "trigger": "Gtk.Notebook.set_show_tabs", "contents": "Gtk.Notebook.set_show_tabs(show_tabs)" },
        { "trigger": "Gtk.Notebook.set_tab_detachable", "contents": "Gtk.Notebook.set_tab_detachable(child, detachable)" },
        { "trigger": "Gtk.Notebook.set_tab_label", "contents": "Gtk.Notebook.set_tab_label(child, tab_label)" },
        { "trigger": "Gtk.Notebook.set_tab_label_text", "contents": "Gtk.Notebook.set_tab_label_text(child, tab_text)" },
        { "trigger": "Gtk.Notebook.set_tab_pos", "contents": "Gtk.Notebook.set_tab_pos(pos)" },
        { "trigger": "Gtk.Notebook.set_tab_reorderable", "contents": "Gtk.Notebook.set_tab_reorderable(child, reorderable)" },
        { "trigger": "Gtk.Notebook.do_change_current_page", "contents": "Gtk.Notebook.do_change_current_page(offset)" },
        { "trigger": "Gtk.Notebook.do_focus_tab", "contents": "Gtk.Notebook.do_focus_tab(type)" },
        { "trigger": "Gtk.Notebook.do_insert_page", "contents": "Gtk.Notebook.do_insert_page(child, tab_label, menu_label, position)" },
        { "trigger": "Gtk.Notebook.do_move_focus_out", "contents": "Gtk.Notebook.do_move_focus_out(direction)" },
        { "trigger": "Gtk.Notebook.do_page_added", "contents": "Gtk.Notebook.do_page_added(child, page_num)" },
        { "trigger": "Gtk.Notebook.do_page_removed", "contents": "Gtk.Notebook.do_page_removed(child, page_num)" },
        { "trigger": "Gtk.Notebook.do_page_reordered", "contents": "Gtk.Notebook.do_page_reordered(child, page_num)" },
        { "trigger": "Gtk.Notebook.do_reorder_tab", "contents": "Gtk.Notebook.do_reorder_tab(direction, move_to_last)" },
        { "trigger": "Gtk.Notebook.do_select_page", "contents": "Gtk.Notebook.do_select_page(move_focus)" },
        { "trigger": "Gtk.Notebook.do_switch_page", "contents": "Gtk.Notebook.do_switch_page(page, page_num)" },
        { "trigger": "Gtk.Notebook.signals.change_current_page", "contents": "Gtk.Notebook.signals.change_current_page(notebook, object)" },
        { "trigger": "Gtk.Notebook.signals.create_window", "contents": "Gtk.Notebook.signals.create_window(notebook, page, x, y)" },
        { "trigger": "Gtk.Notebook.signals.focus_tab", "contents": "Gtk.Notebook.signals.focus_tab(notebook, object)" },
        { "trigger": "Gtk.Notebook.signals.move_focus_out", "contents": "Gtk.Notebook.signals.move_focus_out(notebook, object)" },
        { "trigger": "Gtk.Notebook.signals.page_added", "contents": "Gtk.Notebook.signals.page_added(notebook, child, page_num)" },
        { "trigger": "Gtk.Notebook.signals.page_removed", "contents": "Gtk.Notebook.signals.page_removed(notebook, child, page_num)" },
        { "trigger": "Gtk.Notebook.signals.page_reordered", "contents": "Gtk.Notebook.signals.page_reordered(notebook, child, page_num)" },
        { "trigger": "Gtk.Notebook.signals.reorder_tab", "contents": "Gtk.Notebook.signals.reorder_tab(notebook, object, p0)" },
        { "trigger": "Gtk.Notebook.signals.select_page", "contents": "Gtk.Notebook.signals.select_page(notebook, object)" },
        { "trigger": "Gtk.Notebook.signals.switch_page", "contents": "Gtk.Notebook.signals.switch_page(notebook, page, page_num)" },
        { "trigger": "Gtk.Notebook.props.enable_popup", "contents": "Gtk.Notebook.props.enable_popup" },
        { "trigger": "Gtk.Notebook.props.group_name", "contents": "Gtk.Notebook.props.group_name" },
        { "trigger": "Gtk.Notebook.props.page", "contents": "Gtk.Notebook.props.page" },
        { "trigger": "Gtk.Notebook.props.scrollable", "contents": "Gtk.Notebook.props.scrollable" },
        { "trigger": "Gtk.Notebook.props.show_border", "contents": "Gtk.Notebook.props.show_border" },
        { "trigger": "Gtk.Notebook.props.show_tabs", "contents": "Gtk.Notebook.props.show_tabs" },
        { "trigger": "Gtk.Notebook.props.tab_pos", "contents": "Gtk.Notebook.props.tab_pos" },
        { "trigger": "Gtk.NotebookPageAccessible", "contents": "Gtk.NotebookPageAccessible(**kwargs)" },
        { "trigger": "Gtk.NotebookPageAccessible.new", "contents": "Gtk.NotebookPageAccessible.new(notebook, child)" },
        { "trigger": "Gtk.NotebookPageAccessible.invalidate", "contents": "Gtk.NotebookPageAccessible.invalidate()" },
        { "trigger": "Gtk.NumerableIcon", "contents": "Gtk.NumerableIcon(**kwargs)" },
        { "trigger": "Gtk.NumerableIcon.new", "contents": "Gtk.NumerableIcon.new(base_icon)" },
        { "trigger": "Gtk.NumerableIcon.new_with_style_context", "contents": "Gtk.NumerableIcon.new_with_style_context(base_icon, context)" },
        { "trigger": "Gtk.NumerableIcon.get_background_gicon", "contents": "Gtk.NumerableIcon.get_background_gicon()" },
        { "trigger": "Gtk.NumerableIcon.get_background_icon_name", "contents": "Gtk.NumerableIcon.get_background_icon_name()" },
        { "trigger": "Gtk.NumerableIcon.get_count", "contents": "Gtk.NumerableIcon.get_count()" },
        { "trigger": "Gtk.NumerableIcon.get_label", "contents": "Gtk.NumerableIcon.get_label()" },
        { "trigger": "Gtk.NumerableIcon.get_style_context", "contents": "Gtk.NumerableIcon.get_style_context()" },
        { "trigger": "Gtk.NumerableIcon.set_background_gicon", "contents": "Gtk.NumerableIcon.set_background_gicon(icon)" },
        { "trigger": "Gtk.NumerableIcon.set_background_icon_name", "contents": "Gtk.NumerableIcon.set_background_icon_name(icon_name)" },
        { "trigger": "Gtk.NumerableIcon.set_count", "contents": "Gtk.NumerableIcon.set_count(count)" },
        { "trigger": "Gtk.NumerableIcon.set_label", "contents": "Gtk.NumerableIcon.set_label(label)" },
        { "trigger": "Gtk.NumerableIcon.set_style_context", "contents": "Gtk.NumerableIcon.set_style_context(style)" },
        { "trigger": "Gtk.NumerableIcon.props.background_icon", "contents": "Gtk.NumerableIcon.props.background_icon" },
        { "trigger": "Gtk.NumerableIcon.props.background_icon_name", "contents": "Gtk.NumerableIcon.props.background_icon_name" },
        { "trigger": "Gtk.NumerableIcon.props.count", "contents": "Gtk.NumerableIcon.props.count" },
        { "trigger": "Gtk.NumerableIcon.props.label", "contents": "Gtk.NumerableIcon.props.label" },
        { "trigger": "Gtk.NumerableIcon.props.style_context", "contents": "Gtk.NumerableIcon.props.style_context" },
        { "trigger": "Gtk.OffscreenWindow", "contents": "Gtk.OffscreenWindow(*args, **kwargs)" },
        { "trigger": "Gtk.OffscreenWindow.new", "contents": "Gtk.OffscreenWindow.new()" },
        { "trigger": "Gtk.OffscreenWindow.get_pixbuf", "contents": "Gtk.OffscreenWindow.get_pixbuf()" },
        { "trigger": "Gtk.OffscreenWindow.get_surface", "contents": "Gtk.OffscreenWindow.get_surface()" },
        { "trigger": "Gtk.Overlay", "contents": "Gtk.Overlay(**kwargs)" },
        { "trigger": "Gtk.Overlay.new", "contents": "Gtk.Overlay.new()" },
        { "trigger": "Gtk.Overlay.add_overlay", "contents": "Gtk.Overlay.add_overlay(widget)" },
        { "trigger": "Gtk.Overlay.get_overlay_pass_through", "contents": "Gtk.Overlay.get_overlay_pass_through(widget)" },
        { "trigger": "Gtk.Overlay.reorder_overlay", "contents": "Gtk.Overlay.reorder_overlay(child, position)" },
        { "trigger": "Gtk.Overlay.set_overlay_pass_through", "contents": "Gtk.Overlay.set_overlay_pass_through(widget, pass_through)" },
        { "trigger": "Gtk.Overlay.do_get_child_position", "contents": "Gtk.Overlay.do_get_child_position(widget, allocation)" },
        { "trigger": "Gtk.Overlay.signals.get_child_position", "contents": "Gtk.Overlay.signals.get_child_position(overlay, widget)" },
        { "trigger": "Gtk.PageSetup", "contents": "Gtk.PageSetup(**kwargs)" },
        { "trigger": "Gtk.PageSetup.new", "contents": "Gtk.PageSetup.new()" },
        { "trigger": "Gtk.PageSetup.new_from_file", "contents": "Gtk.PageSetup.new_from_file(file_name)" },
        { "trigger": "Gtk.PageSetup.new_from_key_file", "contents": "Gtk.PageSetup.new_from_key_file(key_file, group_name)" },
        { "trigger": "Gtk.PageSetup.copy", "contents": "Gtk.PageSetup.copy()" },
        { "trigger": "Gtk.PageSetup.get_bottom_margin", "contents": "Gtk.PageSetup.get_bottom_margin(unit)" },
        { "trigger": "Gtk.PageSetup.get_left_margin", "contents": "Gtk.PageSetup.get_left_margin(unit)" },
        { "trigger": "Gtk.PageSetup.get_orientation", "contents": "Gtk.PageSetup.get_orientation()" },
        { "trigger": "Gtk.PageSetup.get_page_height", "contents": "Gtk.PageSetup.get_page_height(unit)" },
        { "trigger": "Gtk.PageSetup.get_page_width", "contents": "Gtk.PageSetup.get_page_width(unit)" },
        { "trigger": "Gtk.PageSetup.get_paper_height", "contents": "Gtk.PageSetup.get_paper_height(unit)" },
        { "trigger": "Gtk.PageSetup.get_paper_size", "contents": "Gtk.PageSetup.get_paper_size()" },
        { "trigger": "Gtk.PageSetup.get_paper_width", "contents": "Gtk.PageSetup.get_paper_width(unit)" },
        { "trigger": "Gtk.PageSetup.get_right_margin", "contents": "Gtk.PageSetup.get_right_margin(unit)" },
        { "trigger": "Gtk.PageSetup.get_top_margin", "contents": "Gtk.PageSetup.get_top_margin(unit)" },
        { "trigger": "Gtk.PageSetup.load_file", "contents": "Gtk.PageSetup.load_file(file_name)" },
        { "trigger": "Gtk.PageSetup.load_key_file", "contents": "Gtk.PageSetup.load_key_file(key_file, group_name)" },
        { "trigger": "Gtk.PageSetup.set_bottom_margin", "contents": "Gtk.PageSetup.set_bottom_margin(margin, unit)" },
        { "trigger": "Gtk.PageSetup.set_left_margin", "contents": "Gtk.PageSetup.set_left_margin(margin, unit)" },
        { "trigger": "Gtk.PageSetup.set_orientation", "contents": "Gtk.PageSetup.set_orientation(orientation)" },
        { "trigger": "Gtk.PageSetup.set_paper_size", "contents": "Gtk.PageSetup.set_paper_size(size)" },
        { "trigger": "Gtk.PageSetup.set_paper_size_and_default_margins", "contents": "Gtk.PageSetup.set_paper_size_and_default_margins(size)" },
        { "trigger": "Gtk.PageSetup.set_right_margin", "contents": "Gtk.PageSetup.set_right_margin(margin, unit)" },
        { "trigger": "Gtk.PageSetup.set_top_margin", "contents": "Gtk.PageSetup.set_top_margin(margin, unit)" },
        { "trigger": "Gtk.PageSetup.to_file", "contents": "Gtk.PageSetup.to_file(file_name)" },
        { "trigger": "Gtk.PageSetup.to_key_file", "contents": "Gtk.PageSetup.to_key_file(key_file, group_name)" },
        { "trigger": "Gtk.PanedAccessible", "contents": "Gtk.PanedAccessible(**kwargs)" },
        { "trigger": "Gtk.Paned", "contents": "Gtk.Paned(**kwargs)" },
        { "trigger": "Gtk.Paned.new", "contents": "Gtk.Paned.new(orientation)" },
        { "trigger": "Gtk.Paned.add1", "contents": "Gtk.Paned.add1(child)" },
        { "trigger": "Gtk.Paned.add2", "contents": "Gtk.Paned.add2(child)" },
        { "trigger": "Gtk.Paned.get_child1", "contents": "Gtk.Paned.get_child1()" },
        { "trigger": "Gtk.Paned.get_child2", "contents": "Gtk.Paned.get_child2()" },
        { "trigger": "Gtk.Paned.get_handle_window", "contents": "Gtk.Paned.get_handle_window()" },
        { "trigger": "Gtk.Paned.get_position", "contents": "Gtk.Paned.get_position()" },
        { "trigger": "Gtk.Paned.get_wide_handle", "contents": "Gtk.Paned.get_wide_handle()" },
        { "trigger": "Gtk.Paned.pack1", "contents": "Gtk.Paned.pack1(child, resize, shrink)" },
        { "trigger": "Gtk.Paned.pack2", "contents": "Gtk.Paned.pack2(child, resize, shrink)" },
        { "trigger": "Gtk.Paned.set_position", "contents": "Gtk.Paned.set_position(position)" },
        { "trigger": "Gtk.Paned.set_wide_handle", "contents": "Gtk.Paned.set_wide_handle(wide)" },
        { "trigger": "Gtk.Paned.do_accept_position", "contents": "Gtk.Paned.do_accept_position()" },
        { "trigger": "Gtk.Paned.do_cancel_position", "contents": "Gtk.Paned.do_cancel_position()" },
        { "trigger": "Gtk.Paned.do_cycle_child_focus", "contents": "Gtk.Paned.do_cycle_child_focus(reverse)" },
        { "trigger": "Gtk.Paned.do_cycle_handle_focus", "contents": "Gtk.Paned.do_cycle_handle_focus(reverse)" },
        { "trigger": "Gtk.Paned.do_move_handle", "contents": "Gtk.Paned.do_move_handle(scroll)" },
        { "trigger": "Gtk.Paned.do_toggle_handle_focus", "contents": "Gtk.Paned.do_toggle_handle_focus()" },
        { "trigger": "Gtk.Paned.signals.accept_position", "contents": "Gtk.Paned.signals.accept_position(paned)" },
        { "trigger": "Gtk.Paned.signals.cancel_position", "contents": "Gtk.Paned.signals.cancel_position(paned)" },
        { "trigger": "Gtk.Paned.signals.cycle_child_focus", "contents": "Gtk.Paned.signals.cycle_child_focus(paned, reversed)" },
        { "trigger": "Gtk.Paned.signals.cycle_handle_focus", "contents": "Gtk.Paned.signals.cycle_handle_focus(paned, reversed)" },
        { "trigger": "Gtk.Paned.signals.move_handle", "contents": "Gtk.Paned.signals.move_handle(paned, scroll_type)" },
        { "trigger": "Gtk.Paned.signals.toggle_handle_focus", "contents": "Gtk.Paned.signals.toggle_handle_focus(paned)" },
        { "trigger": "Gtk.Paned.props.max_position", "contents": "Gtk.Paned.props.max_position" },
        { "trigger": "Gtk.Paned.props.min_position", "contents": "Gtk.Paned.props.min_position" },
        { "trigger": "Gtk.Paned.props.position", "contents": "Gtk.Paned.props.position" },
        { "trigger": "Gtk.Paned.props.position_set", "contents": "Gtk.Paned.props.position_set" },
        { "trigger": "Gtk.Paned.props.wide_handle", "contents": "Gtk.Paned.props.wide_handle" },
        { "trigger": "Gtk.PlacesSidebar", "contents": "Gtk.PlacesSidebar(*args, **kwargs)" },
        { "trigger": "Gtk.PlacesSidebar.new", "contents": "Gtk.PlacesSidebar.new()" },
        { "trigger": "Gtk.PlacesSidebar.add_shortcut", "contents": "Gtk.PlacesSidebar.add_shortcut(location)" },
        { "trigger": "Gtk.PlacesSidebar.get_local_only", "contents": "Gtk.PlacesSidebar.get_local_only()" },
        { "trigger": "Gtk.PlacesSidebar.get_location", "contents": "Gtk.PlacesSidebar.get_location()" },
        { "trigger": "Gtk.PlacesSidebar.get_nth_bookmark", "contents": "Gtk.PlacesSidebar.get_nth_bookmark(n)" },
        { "trigger": "Gtk.PlacesSidebar.get_open_flags", "contents": "Gtk.PlacesSidebar.get_open_flags()" },
        { "trigger": "Gtk.PlacesSidebar.get_show_connect_to_server", "contents": "Gtk.PlacesSidebar.get_show_connect_to_server()" },
        { "trigger": "Gtk.PlacesSidebar.get_show_desktop", "contents": "Gtk.PlacesSidebar.get_show_desktop()" },
        { "trigger": "Gtk.PlacesSidebar.get_show_enter_location", "contents": "Gtk.PlacesSidebar.get_show_enter_location()" },
        { "trigger": "Gtk.PlacesSidebar.get_show_other_locations", "contents": "Gtk.PlacesSidebar.get_show_other_locations()" },
        { "trigger": "Gtk.PlacesSidebar.get_show_recent", "contents": "Gtk.PlacesSidebar.get_show_recent()" },
        { "trigger": "Gtk.PlacesSidebar.get_show_trash", "contents": "Gtk.PlacesSidebar.get_show_trash()" },
        { "trigger": "Gtk.PlacesSidebar.list_shortcuts", "contents": "Gtk.PlacesSidebar.list_shortcuts()" },
        { "trigger": "Gtk.PlacesSidebar.remove_shortcut", "contents": "Gtk.PlacesSidebar.remove_shortcut(location)" },
        { "trigger": "Gtk.PlacesSidebar.set_drop_targets_visible", "contents": "Gtk.PlacesSidebar.set_drop_targets_visible(visible, context)" },
        { "trigger": "Gtk.PlacesSidebar.set_local_only", "contents": "Gtk.PlacesSidebar.set_local_only(local_only)" },
        { "trigger": "Gtk.PlacesSidebar.set_location", "contents": "Gtk.PlacesSidebar.set_location(location)" },
        { "trigger": "Gtk.PlacesSidebar.set_open_flags", "contents": "Gtk.PlacesSidebar.set_open_flags(flags)" },
        { "trigger": "Gtk.PlacesSidebar.set_show_connect_to_server", "contents": "Gtk.PlacesSidebar.set_show_connect_to_server(show_connect_to_server)" },
        { "trigger": "Gtk.PlacesSidebar.set_show_desktop", "contents": "Gtk.PlacesSidebar.set_show_desktop(show_desktop)" },
        { "trigger": "Gtk.PlacesSidebar.set_show_enter_location", "contents": "Gtk.PlacesSidebar.set_show_enter_location(show_enter_location)" },
        { "trigger": "Gtk.PlacesSidebar.set_show_other_locations", "contents": "Gtk.PlacesSidebar.set_show_other_locations(show_other_locations)" },
        { "trigger": "Gtk.PlacesSidebar.set_show_recent", "contents": "Gtk.PlacesSidebar.set_show_recent(show_recent)" },
        { "trigger": "Gtk.PlacesSidebar.set_show_trash", "contents": "Gtk.PlacesSidebar.set_show_trash(show_trash)" },
        { "trigger": "Gtk.PlacesSidebar.signals.drag_action_ask", "contents": "Gtk.PlacesSidebar.signals.drag_action_ask(places_sidebar, actions)" },
        { "trigger": "Gtk.PlacesSidebar.signals.drag_action_requested", "contents": "Gtk.PlacesSidebar.signals.drag_action_requested(places_sidebar, context, dest_file, source_file_list)" },
        { "trigger": "Gtk.PlacesSidebar.signals.drag_perform_drop", "contents": "Gtk.PlacesSidebar.signals.drag_perform_drop(places_sidebar, dest_file, source_file_list, action)" },
        { "trigger": "Gtk.PlacesSidebar.signals.open_location", "contents": "Gtk.PlacesSidebar.signals.open_location(places_sidebar, location, open_flags)" },
        { "trigger": "Gtk.PlacesSidebar.signals.populate_popup", "contents": "Gtk.PlacesSidebar.signals.populate_popup(places_sidebar, container, selected_item, selected_volume)" },
        { "trigger": "Gtk.PlacesSidebar.signals.show_connect_to_server", "contents": "Gtk.PlacesSidebar.signals.show_connect_to_server(places_sidebar)" },
        { "trigger": "Gtk.PlacesSidebar.signals.show_enter_location", "contents": "Gtk.PlacesSidebar.signals.show_enter_location(places_sidebar)" },
        { "trigger": "Gtk.PlacesSidebar.signals.show_error_message", "contents": "Gtk.PlacesSidebar.signals.show_error_message(places_sidebar, primary, secondary)" },
        { "trigger": "Gtk.PlacesSidebar.signals.show_other_locations", "contents": "Gtk.PlacesSidebar.signals.show_other_locations(places_sidebar)" },
        { "trigger": "Gtk.PlacesSidebar.props.local_only", "contents": "Gtk.PlacesSidebar.props.local_only" },
        { "trigger": "Gtk.PlacesSidebar.props.location", "contents": "Gtk.PlacesSidebar.props.location" },
        { "trigger": "Gtk.PlacesSidebar.props.open_flags", "contents": "Gtk.PlacesSidebar.props.open_flags" },
        { "trigger": "Gtk.PlacesSidebar.props.populate_all", "contents": "Gtk.PlacesSidebar.props.populate_all" },
        { "trigger": "Gtk.PlacesSidebar.props.show_connect_to_server", "contents": "Gtk.PlacesSidebar.props.show_connect_to_server" },
        { "trigger": "Gtk.PlacesSidebar.props.show_desktop", "contents": "Gtk.PlacesSidebar.props.show_desktop" },
        { "trigger": "Gtk.PlacesSidebar.props.show_enter_location", "contents": "Gtk.PlacesSidebar.props.show_enter_location" },
        { "trigger": "Gtk.PlacesSidebar.props.show_other_locations", "contents": "Gtk.PlacesSidebar.props.show_other_locations" },
        { "trigger": "Gtk.PlacesSidebar.props.show_recent", "contents": "Gtk.PlacesSidebar.props.show_recent" },
        { "trigger": "Gtk.PlacesSidebar.props.show_trash", "contents": "Gtk.PlacesSidebar.props.show_trash" },
        { "trigger": "Gtk.Plug", "contents": "Gtk.Plug(*args, **kwargs)" },
        { "trigger": "Gtk.Plug.new", "contents": "Gtk.Plug.new(socket_id)" },
        { "trigger": "Gtk.Plug.new_for_display", "contents": "Gtk.Plug.new_for_display(display, socket_id)" },
        { "trigger": "Gtk.Plug.construct", "contents": "Gtk.Plug.construct(socket_id)" },
        { "trigger": "Gtk.Plug.construct_for_display", "contents": "Gtk.Plug.construct_for_display(display, socket_id)" },
        { "trigger": "Gtk.Plug.get_embedded", "contents": "Gtk.Plug.get_embedded()" },
        { "trigger": "Gtk.Plug.get_id", "contents": "Gtk.Plug.get_id()" },
        { "trigger": "Gtk.Plug.get_socket_window", "contents": "Gtk.Plug.get_socket_window()" },
        { "trigger": "Gtk.Plug.do_embedded", "contents": "Gtk.Plug.do_embedded()" },
        { "trigger": "Gtk.Plug.signals.embedded", "contents": "Gtk.Plug.signals.embedded(plug)" },
        { "trigger": "Gtk.Plug.props.embedded", "contents": "Gtk.Plug.props.embedded" },
        { "trigger": "Gtk.Plug.props.socket_window", "contents": "Gtk.Plug.props.socket_window" },
        { "trigger": "Gtk.PopoverAccessible", "contents": "Gtk.PopoverAccessible(**kwargs)" },
        { "trigger": "Gtk.Popover", "contents": "Gtk.Popover(**kwargs)" },
        { "trigger": "Gtk.Popover.new", "contents": "Gtk.Popover.new(relative_to)" },
        { "trigger": "Gtk.Popover.new_from_model", "contents": "Gtk.Popover.new_from_model(relative_to, model)" },
        { "trigger": "Gtk.Popover.bind_model", "contents": "Gtk.Popover.bind_model(model, action_namespace)" },
        { "trigger": "Gtk.Popover.get_default_widget", "contents": "Gtk.Popover.get_default_widget()" },
        { "trigger": "Gtk.Popover.get_modal", "contents": "Gtk.Popover.get_modal()" },
        { "trigger": "Gtk.Popover.get_pointing_to", "contents": "Gtk.Popover.get_pointing_to()" },
        { "trigger": "Gtk.Popover.get_position", "contents": "Gtk.Popover.get_position()" },
        { "trigger": "Gtk.Popover.get_relative_to", "contents": "Gtk.Popover.get_relative_to()" },
        { "trigger": "Gtk.Popover.get_transitions_enabled", "contents": "Gtk.Popover.get_transitions_enabled()" },
        { "trigger": "Gtk.Popover.set_default_widget", "contents": "Gtk.Popover.set_default_widget(widget)" },
        { "trigger": "Gtk.Popover.set_modal", "contents": "Gtk.Popover.set_modal(modal)" },
        { "trigger": "Gtk.Popover.set_pointing_to", "contents": "Gtk.Popover.set_pointing_to(rect)" },
        { "trigger": "Gtk.Popover.set_position", "contents": "Gtk.Popover.set_position(position)" },
        { "trigger": "Gtk.Popover.set_relative_to", "contents": "Gtk.Popover.set_relative_to(relative_to)" },
        { "trigger": "Gtk.Popover.set_transitions_enabled", "contents": "Gtk.Popover.set_transitions_enabled(transitions_enabled)" },
        { "trigger": "Gtk.Popover.do_closed", "contents": "Gtk.Popover.do_closed()" },
        { "trigger": "Gtk.Popover.signals.closed", "contents": "Gtk.Popover.signals.closed(popover)" },
        { "trigger": "Gtk.Popover.props.modal", "contents": "Gtk.Popover.props.modal" },
        { "trigger": "Gtk.Popover.props.pointing_to", "contents": "Gtk.Popover.props.pointing_to" },
        { "trigger": "Gtk.Popover.props.position", "contents": "Gtk.Popover.props.position" },
        { "trigger": "Gtk.Popover.props.relative_to", "contents": "Gtk.Popover.props.relative_to" },
        { "trigger": "Gtk.Popover.props.transitions_enabled", "contents": "Gtk.Popover.props.transitions_enabled" },
        { "trigger": "Gtk.PopoverMenu", "contents": "Gtk.PopoverMenu(**kwargs)" },
        { "trigger": "Gtk.PopoverMenu.new", "contents": "Gtk.PopoverMenu.new()" },
        { "trigger": "Gtk.PopoverMenu.open_submenu", "contents": "Gtk.PopoverMenu.open_submenu(name)" },
        { "trigger": "Gtk.PopoverMenu.props.visible_submenu", "contents": "Gtk.PopoverMenu.props.visible_submenu" },
        { "trigger": "Gtk.PrintContext", "contents": "Gtk.PrintContext(**kwargs)" },
        { "trigger": "Gtk.PrintContext.create_pango_context", "contents": "Gtk.PrintContext.create_pango_context()" },
        { "trigger": "Gtk.PrintContext.create_pango_layout", "contents": "Gtk.PrintContext.create_pango_layout()" },
        { "trigger": "Gtk.PrintContext.get_cairo_context", "contents": "Gtk.PrintContext.get_cairo_context()" },
        { "trigger": "Gtk.PrintContext.get_dpi_x", "contents": "Gtk.PrintContext.get_dpi_x()" },
        { "trigger": "Gtk.PrintContext.get_dpi_y", "contents": "Gtk.PrintContext.get_dpi_y()" },
        { "trigger": "Gtk.PrintContext.get_hard_margins", "contents": "Gtk.PrintContext.get_hard_margins()" },
        { "trigger": "Gtk.PrintContext.get_height", "contents": "Gtk.PrintContext.get_height()" },
        { "trigger": "Gtk.PrintContext.get_page_setup", "contents": "Gtk.PrintContext.get_page_setup()" },
        { "trigger": "Gtk.PrintContext.get_pango_fontmap", "contents": "Gtk.PrintContext.get_pango_fontmap()" },
        { "trigger": "Gtk.PrintContext.get_width", "contents": "Gtk.PrintContext.get_width()" },
        { "trigger": "Gtk.PrintContext.set_cairo_context", "contents": "Gtk.PrintContext.set_cairo_context(cr, dpi_x, dpi_y)" },
        { "trigger": "Gtk.PrintOperation", "contents": "Gtk.PrintOperation(**kwargs)" },
        { "trigger": "Gtk.PrintOperation.new", "contents": "Gtk.PrintOperation.new()" },
        { "trigger": "Gtk.PrintOperation.cancel", "contents": "Gtk.PrintOperation.cancel()" },
        { "trigger": "Gtk.PrintOperation.draw_page_finish", "contents": "Gtk.PrintOperation.draw_page_finish()" },
        { "trigger": "Gtk.PrintOperation.get_default_page_setup", "contents": "Gtk.PrintOperation.get_default_page_setup()" },
        { "trigger": "Gtk.PrintOperation.get_embed_page_setup", "contents": "Gtk.PrintOperation.get_embed_page_setup()" },
        { "trigger": "Gtk.PrintOperation.get_error", "contents": "Gtk.PrintOperation.get_error()" },
        { "trigger": "Gtk.PrintOperation.get_has_selection", "contents": "Gtk.PrintOperation.get_has_selection()" },
        { "trigger": "Gtk.PrintOperation.get_n_pages_to_print", "contents": "Gtk.PrintOperation.get_n_pages_to_print()" },
        { "trigger": "Gtk.PrintOperation.get_print_settings", "contents": "Gtk.PrintOperation.get_print_settings()" },
        { "trigger": "Gtk.PrintOperation.get_status", "contents": "Gtk.PrintOperation.get_status()" },
        { "trigger": "Gtk.PrintOperation.get_status_string", "contents": "Gtk.PrintOperation.get_status_string()" },
        { "trigger": "Gtk.PrintOperation.get_support_selection", "contents": "Gtk.PrintOperation.get_support_selection()" },
        { "trigger": "Gtk.PrintOperation.is_finished", "contents": "Gtk.PrintOperation.is_finished()" },
        { "trigger": "Gtk.PrintOperation.run", "contents": "Gtk.PrintOperation.run(action, parent)" },
        { "trigger": "Gtk.PrintOperation.set_allow_async", "contents": "Gtk.PrintOperation.set_allow_async(allow_async)" },
        { "trigger": "Gtk.PrintOperation.set_current_page", "contents": "Gtk.PrintOperation.set_current_page(current_page)" },
        { "trigger": "Gtk.PrintOperation.set_custom_tab_label", "contents": "Gtk.PrintOperation.set_custom_tab_label(label)" },
        { "trigger": "Gtk.PrintOperation.set_default_page_setup", "contents": "Gtk.PrintOperation.set_default_page_setup(default_page_setup)" },
        { "trigger": "Gtk.PrintOperation.set_defer_drawing", "contents": "Gtk.PrintOperation.set_defer_drawing()" },
        { "trigger": "Gtk.PrintOperation.set_embed_page_setup", "contents": "Gtk.PrintOperation.set_embed_page_setup(embed)" },
        { "trigger": "Gtk.PrintOperation.set_export_filename", "contents": "Gtk.PrintOperation.set_export_filename(filename)" },
        { "trigger": "Gtk.PrintOperation.set_has_selection", "contents": "Gtk.PrintOperation.set_has_selection(has_selection)" },
        { "trigger": "Gtk.PrintOperation.set_job_name", "contents": "Gtk.PrintOperation.set_job_name(job_name)" },
        { "trigger": "Gtk.PrintOperation.set_n_pages", "contents": "Gtk.PrintOperation.set_n_pages(n_pages)" },
        { "trigger": "Gtk.PrintOperation.set_print_settings", "contents": "Gtk.PrintOperation.set_print_settings(print_settings)" },
        { "trigger": "Gtk.PrintOperation.set_show_progress", "contents": "Gtk.PrintOperation.set_show_progress(show_progress)" },
        { "trigger": "Gtk.PrintOperation.set_support_selection", "contents": "Gtk.PrintOperation.set_support_selection(support_selection)" },
        { "trigger": "Gtk.PrintOperation.set_track_print_status", "contents": "Gtk.PrintOperation.set_track_print_status(track_status)" },
        { "trigger": "Gtk.PrintOperation.set_unit", "contents": "Gtk.PrintOperation.set_unit(unit)" },
        { "trigger": "Gtk.PrintOperation.set_use_full_page", "contents": "Gtk.PrintOperation.set_use_full_page(full_page)" },
        { "trigger": "Gtk.PrintOperation.do_begin_print", "contents": "Gtk.PrintOperation.do_begin_print(context)" },
        { "trigger": "Gtk.PrintOperation.do_custom_widget_apply", "contents": "Gtk.PrintOperation.do_custom_widget_apply(widget)" },
        { "trigger": "Gtk.PrintOperation.do_done", "contents": "Gtk.PrintOperation.do_done(result)" },
        { "trigger": "Gtk.PrintOperation.do_draw_page", "contents": "Gtk.PrintOperation.do_draw_page(context, page_nr)" },
        { "trigger": "Gtk.PrintOperation.do_end_print", "contents": "Gtk.PrintOperation.do_end_print(context)" },
        { "trigger": "Gtk.PrintOperation.do_paginate", "contents": "Gtk.PrintOperation.do_paginate(context)" },
        { "trigger": "Gtk.PrintOperation.do_preview", "contents": "Gtk.PrintOperation.do_preview(preview, context, parent)" },
        { "trigger": "Gtk.PrintOperation.do_request_page_setup", "contents": "Gtk.PrintOperation.do_request_page_setup(context, page_nr, setup)" },
        { "trigger": "Gtk.PrintOperation.do_status_changed", "contents": "Gtk.PrintOperation.do_status_changed()" },
        { "trigger": "Gtk.PrintOperation.do_update_custom_widget", "contents": "Gtk.PrintOperation.do_update_custom_widget(widget, setup, settings)" },
        { "trigger": "Gtk.PrintOperation.signals.begin_print", "contents": "Gtk.PrintOperation.signals.begin_print(print_operation, context)" },
        { "trigger": "Gtk.PrintOperation.signals.create_custom_widget", "contents": "Gtk.PrintOperation.signals.create_custom_widget(print_operation)" },
        { "trigger": "Gtk.PrintOperation.signals.custom_widget_apply", "contents": "Gtk.PrintOperation.signals.custom_widget_apply(print_operation, widget)" },
        { "trigger": "Gtk.PrintOperation.signals.done", "contents": "Gtk.PrintOperation.signals.done(print_operation, result)" },
        { "trigger": "Gtk.PrintOperation.signals.draw_page", "contents": "Gtk.PrintOperation.signals.draw_page(print_operation, context, page_nr)" },
        { "trigger": "Gtk.PrintOperation.signals.end_print", "contents": "Gtk.PrintOperation.signals.end_print(print_operation, context)" },
        { "trigger": "Gtk.PrintOperation.signals.paginate", "contents": "Gtk.PrintOperation.signals.paginate(print_operation, context)" },
        { "trigger": "Gtk.PrintOperation.signals.preview", "contents": "Gtk.PrintOperation.signals.preview(print_operation, preview, context, parent)" },
        { "trigger": "Gtk.PrintOperation.signals.request_page_setup", "contents": "Gtk.PrintOperation.signals.request_page_setup(print_operation, context, page_nr, setup)" },
        { "trigger": "Gtk.PrintOperation.signals.status_changed", "contents": "Gtk.PrintOperation.signals.status_changed(print_operation)" },
        { "trigger": "Gtk.PrintOperation.signals.update_custom_widget", "contents": "Gtk.PrintOperation.signals.update_custom_widget(print_operation, widget, setup, settings)" },
        { "trigger": "Gtk.PrintOperation.props.allow_async", "contents": "Gtk.PrintOperation.props.allow_async" },
        { "trigger": "Gtk.PrintOperation.props.current_page", "contents": "Gtk.PrintOperation.props.current_page" },
        { "trigger": "Gtk.PrintOperation.props.custom_tab_label", "contents": "Gtk.PrintOperation.props.custom_tab_label" },
        { "trigger": "Gtk.PrintOperation.props.default_page_setup", "contents": "Gtk.PrintOperation.props.default_page_setup" },
        { "trigger": "Gtk.PrintOperation.props.embed_page_setup", "contents": "Gtk.PrintOperation.props.embed_page_setup" },
        { "trigger": "Gtk.PrintOperation.props.export_filename", "contents": "Gtk.PrintOperation.props.export_filename" },
        { "trigger": "Gtk.PrintOperation.props.has_selection", "contents": "Gtk.PrintOperation.props.has_selection" },
        { "trigger": "Gtk.PrintOperation.props.job_name", "contents": "Gtk.PrintOperation.props.job_name" },
        { "trigger": "Gtk.PrintOperation.props.n_pages", "contents": "Gtk.PrintOperation.props.n_pages" },
        { "trigger": "Gtk.PrintOperation.props.n_pages_to_print", "contents": "Gtk.PrintOperation.props.n_pages_to_print" },
        { "trigger": "Gtk.PrintOperation.props.print_settings", "contents": "Gtk.PrintOperation.props.print_settings" },
        { "trigger": "Gtk.PrintOperation.props.show_progress", "contents": "Gtk.PrintOperation.props.show_progress" },
        { "trigger": "Gtk.PrintOperation.props.status", "contents": "Gtk.PrintOperation.props.status" },
        { "trigger": "Gtk.PrintOperation.props.status_string", "contents": "Gtk.PrintOperation.props.status_string" },
        { "trigger": "Gtk.PrintOperation.props.support_selection", "contents": "Gtk.PrintOperation.props.support_selection" },
        { "trigger": "Gtk.PrintOperation.props.track_print_status", "contents": "Gtk.PrintOperation.props.track_print_status" },
        { "trigger": "Gtk.PrintOperation.props.unit", "contents": "Gtk.PrintOperation.props.unit" },
        { "trigger": "Gtk.PrintOperation.props.use_full_page", "contents": "Gtk.PrintOperation.props.use_full_page" },
        { "trigger": "Gtk.PrintSettings", "contents": "Gtk.PrintSettings(**kwargs)" },
        { "trigger": "Gtk.PrintSettings.new", "contents": "Gtk.PrintSettings.new()" },
        { "trigger": "Gtk.PrintSettings.new_from_file", "contents": "Gtk.PrintSettings.new_from_file(file_name)" },
        { "trigger": "Gtk.PrintSettings.new_from_key_file", "contents": "Gtk.PrintSettings.new_from_key_file(key_file, group_name)" },
        { "trigger": "Gtk.PrintSettings.copy", "contents": "Gtk.PrintSettings.copy()" },
        { "trigger": "Gtk.PrintSettings.foreach", "contents": "Gtk.PrintSettings.foreach(func, *user_data)" },
        { "trigger": "Gtk.PrintSettings.get", "contents": "Gtk.PrintSettings.get(key)" },
        { "trigger": "Gtk.PrintSettings.get_bool", "contents": "Gtk.PrintSettings.get_bool(key)" },
        { "trigger": "Gtk.PrintSettings.get_collate", "contents": "Gtk.PrintSettings.get_collate()" },
        { "trigger": "Gtk.PrintSettings.get_default_source", "contents": "Gtk.PrintSettings.get_default_source()" },
        { "trigger": "Gtk.PrintSettings.get_dither", "contents": "Gtk.PrintSettings.get_dither()" },
        { "trigger": "Gtk.PrintSettings.get_double", "contents": "Gtk.PrintSettings.get_double(key)" },
        { "trigger": "Gtk.PrintSettings.get_double_with_default", "contents": "Gtk.PrintSettings.get_double_with_default(key, def_)" },
        { "trigger": "Gtk.PrintSettings.get_duplex", "contents": "Gtk.PrintSettings.get_duplex()" },
        { "trigger": "Gtk.PrintSettings.get_finishings", "contents": "Gtk.PrintSettings.get_finishings()" },
        { "trigger": "Gtk.PrintSettings.get_int", "contents": "Gtk.PrintSettings.get_int(key)" },
        { "trigger": "Gtk.PrintSettings.get_int_with_default", "contents": "Gtk.PrintSettings.get_int_with_default(key, def_)" },
        { "trigger": "Gtk.PrintSettings.get_length", "contents": "Gtk.PrintSettings.get_length(key, unit)" },
        { "trigger": "Gtk.PrintSettings.get_media_type", "contents": "Gtk.PrintSettings.get_media_type()" },
        { "trigger": "Gtk.PrintSettings.get_n_copies", "contents": "Gtk.PrintSettings.get_n_copies()" },
        { "trigger": "Gtk.PrintSettings.get_number_up", "contents": "Gtk.PrintSettings.get_number_up()" },
        { "trigger": "Gtk.PrintSettings.get_number_up_layout", "contents": "Gtk.PrintSettings.get_number_up_layout()" },
        { "trigger": "Gtk.PrintSettings.get_orientation", "contents": "Gtk.PrintSettings.get_orientation()" },
        { "trigger": "Gtk.PrintSettings.get_output_bin", "contents": "Gtk.PrintSettings.get_output_bin()" },
        { "trigger": "Gtk.PrintSettings.get_page_ranges", "contents": "Gtk.PrintSettings.get_page_ranges()" },
        { "trigger": "Gtk.PrintSettings.get_page_set", "contents": "Gtk.PrintSettings.get_page_set()" },
        { "trigger": "Gtk.PrintSettings.get_paper_height", "contents": "Gtk.PrintSettings.get_paper_height(unit)" },
        { "trigger": "Gtk.PrintSettings.get_paper_size", "contents": "Gtk.PrintSettings.get_paper_size()" },
        { "trigger": "Gtk.PrintSettings.get_paper_width", "contents": "Gtk.PrintSettings.get_paper_width(unit)" },
        { "trigger": "Gtk.PrintSettings.get_print_pages", "contents": "Gtk.PrintSettings.get_print_pages()" },
        { "trigger": "Gtk.PrintSettings.get_printer", "contents": "Gtk.PrintSettings.get_printer()" },
        { "trigger": "Gtk.PrintSettings.get_printer_lpi", "contents": "Gtk.PrintSettings.get_printer_lpi()" },
        { "trigger": "Gtk.PrintSettings.get_quality", "contents": "Gtk.PrintSettings.get_quality()" },
        { "trigger": "Gtk.PrintSettings.get_resolution", "contents": "Gtk.PrintSettings.get_resolution()" },
        { "trigger": "Gtk.PrintSettings.get_resolution_x", "contents": "Gtk.PrintSettings.get_resolution_x()" },
        { "trigger": "Gtk.PrintSettings.get_resolution_y", "contents": "Gtk.PrintSettings.get_resolution_y()" },
        { "trigger": "Gtk.PrintSettings.get_reverse", "contents": "Gtk.PrintSettings.get_reverse()" },
        { "trigger": "Gtk.PrintSettings.get_scale", "contents": "Gtk.PrintSettings.get_scale()" },
        { "trigger": "Gtk.PrintSettings.get_use_color", "contents": "Gtk.PrintSettings.get_use_color()" },
        { "trigger": "Gtk.PrintSettings.has_key", "contents": "Gtk.PrintSettings.has_key(key)" },
        { "trigger": "Gtk.PrintSettings.load_file", "contents": "Gtk.PrintSettings.load_file(file_name)" },
        { "trigger": "Gtk.PrintSettings.load_key_file", "contents": "Gtk.PrintSettings.load_key_file(key_file, group_name)" },
        { "trigger": "Gtk.PrintSettings.set", "contents": "Gtk.PrintSettings.set(key, value)" },
        { "trigger": "Gtk.PrintSettings.set_bool", "contents": "Gtk.PrintSettings.set_bool(key, value)" },
        { "trigger": "Gtk.PrintSettings.set_collate", "contents": "Gtk.PrintSettings.set_collate(collate)" },
        { "trigger": "Gtk.PrintSettings.set_default_source", "contents": "Gtk.PrintSettings.set_default_source(default_source)" },
        { "trigger": "Gtk.PrintSettings.set_dither", "contents": "Gtk.PrintSettings.set_dither(dither)" },
        { "trigger": "Gtk.PrintSettings.set_double", "contents": "Gtk.PrintSettings.set_double(key, value)" },
        { "trigger": "Gtk.PrintSettings.set_duplex", "contents": "Gtk.PrintSettings.set_duplex(duplex)" },
        { "trigger": "Gtk.PrintSettings.set_finishings", "contents": "Gtk.PrintSettings.set_finishings(finishings)" },
        { "trigger": "Gtk.PrintSettings.set_int", "contents": "Gtk.PrintSettings.set_int(key, value)" },
        { "trigger": "Gtk.PrintSettings.set_length", "contents": "Gtk.PrintSettings.set_length(key, value, unit)" },
        { "trigger": "Gtk.PrintSettings.set_media_type", "contents": "Gtk.PrintSettings.set_media_type(media_type)" },
        { "trigger": "Gtk.PrintSettings.set_n_copies", "contents": "Gtk.PrintSettings.set_n_copies(num_copies)" },
        { "trigger": "Gtk.PrintSettings.set_number_up", "contents": "Gtk.PrintSettings.set_number_up(number_up)" },
        { "trigger": "Gtk.PrintSettings.set_number_up_layout", "contents": "Gtk.PrintSettings.set_number_up_layout(number_up_layout)" },
        { "trigger": "Gtk.PrintSettings.set_orientation", "contents": "Gtk.PrintSettings.set_orientation(orientation)" },
        { "trigger": "Gtk.PrintSettings.set_output_bin", "contents": "Gtk.PrintSettings.set_output_bin(output_bin)" },
        { "trigger": "Gtk.PrintSettings.set_page_ranges", "contents": "Gtk.PrintSettings.set_page_ranges(page_ranges)" },
        { "trigger": "Gtk.PrintSettings.set_page_set", "contents": "Gtk.PrintSettings.set_page_set(page_set)" },
        { "trigger": "Gtk.PrintSettings.set_paper_height", "contents": "Gtk.PrintSettings.set_paper_height(height, unit)" },
        { "trigger": "Gtk.PrintSettings.set_paper_size", "contents": "Gtk.PrintSettings.set_paper_size(paper_size)" },
        { "trigger": "Gtk.PrintSettings.set_paper_width", "contents": "Gtk.PrintSettings.set_paper_width(width, unit)" },
        { "trigger": "Gtk.PrintSettings.set_print_pages", "contents": "Gtk.PrintSettings.set_print_pages(pages)" },
        { "trigger": "Gtk.PrintSettings.set_printer", "contents": "Gtk.PrintSettings.set_printer(printer)" },
        { "trigger": "Gtk.PrintSettings.set_printer_lpi", "contents": "Gtk.PrintSettings.set_printer_lpi(lpi)" },
        { "trigger": "Gtk.PrintSettings.set_quality", "contents": "Gtk.PrintSettings.set_quality(quality)" },
        { "trigger": "Gtk.PrintSettings.set_resolution", "contents": "Gtk.PrintSettings.set_resolution(resolution)" },
        { "trigger": "Gtk.PrintSettings.set_resolution_xy", "contents": "Gtk.PrintSettings.set_resolution_xy(resolution_x, resolution_y)" },
        { "trigger": "Gtk.PrintSettings.set_reverse", "contents": "Gtk.PrintSettings.set_reverse(reverse)" },
        { "trigger": "Gtk.PrintSettings.set_scale", "contents": "Gtk.PrintSettings.set_scale(scale)" },
        { "trigger": "Gtk.PrintSettings.set_use_color", "contents": "Gtk.PrintSettings.set_use_color(use_color)" },
        { "trigger": "Gtk.PrintSettings.to_file", "contents": "Gtk.PrintSettings.to_file(file_name)" },
        { "trigger": "Gtk.PrintSettings.to_key_file", "contents": "Gtk.PrintSettings.to_key_file(key_file, group_name)" },
        { "trigger": "Gtk.PrintSettings.unset", "contents": "Gtk.PrintSettings.unset(key)" },
        { "trigger": "Gtk.ProgressBarAccessible", "contents": "Gtk.ProgressBarAccessible(**kwargs)" },
        { "trigger": "Gtk.ProgressBar", "contents": "Gtk.ProgressBar(**kwargs)" },
        { "trigger": "Gtk.ProgressBar.new", "contents": "Gtk.ProgressBar.new()" },
        { "trigger": "Gtk.ProgressBar.get_ellipsize", "contents": "Gtk.ProgressBar.get_ellipsize()" },
        { "trigger": "Gtk.ProgressBar.get_fraction", "contents": "Gtk.ProgressBar.get_fraction()" },
        { "trigger": "Gtk.ProgressBar.get_inverted", "contents": "Gtk.ProgressBar.get_inverted()" },
        { "trigger": "Gtk.ProgressBar.get_pulse_step", "contents": "Gtk.ProgressBar.get_pulse_step()" },
        { "trigger": "Gtk.ProgressBar.get_show_text", "contents": "Gtk.ProgressBar.get_show_text()" },
        { "trigger": "Gtk.ProgressBar.get_text", "contents": "Gtk.ProgressBar.get_text()" },
        { "trigger": "Gtk.ProgressBar.pulse", "contents": "Gtk.ProgressBar.pulse()" },
        { "trigger": "Gtk.ProgressBar.set_ellipsize", "contents": "Gtk.ProgressBar.set_ellipsize(mode)" },
        { "trigger": "Gtk.ProgressBar.set_fraction", "contents": "Gtk.ProgressBar.set_fraction(fraction)" },
        { "trigger": "Gtk.ProgressBar.set_inverted", "contents": "Gtk.ProgressBar.set_inverted(inverted)" },
        { "trigger": "Gtk.ProgressBar.set_pulse_step", "contents": "Gtk.ProgressBar.set_pulse_step(fraction)" },
        { "trigger": "Gtk.ProgressBar.set_show_text", "contents": "Gtk.ProgressBar.set_show_text(show_text)" },
        { "trigger": "Gtk.ProgressBar.set_text", "contents": "Gtk.ProgressBar.set_text(text)" },
        { "trigger": "Gtk.ProgressBar.props.ellipsize", "contents": "Gtk.ProgressBar.props.ellipsize" },
        { "trigger": "Gtk.ProgressBar.props.fraction", "contents": "Gtk.ProgressBar.props.fraction" },
        { "trigger": "Gtk.ProgressBar.props.inverted", "contents": "Gtk.ProgressBar.props.inverted" },
        { "trigger": "Gtk.ProgressBar.props.pulse_step", "contents": "Gtk.ProgressBar.props.pulse_step" },
        { "trigger": "Gtk.ProgressBar.props.show_text", "contents": "Gtk.ProgressBar.props.show_text" },
        { "trigger": "Gtk.ProgressBar.props.text", "contents": "Gtk.ProgressBar.props.text" },
        { "trigger": "Gtk.PyGTKDeprecationWarning", "contents": "Gtk.PyGTKDeprecationWarning" },
        { "trigger": "Gtk.PyGTKDeprecationWarning.args", "contents": "Gtk.PyGTKDeprecationWarning.args" },
        { "trigger": "Gtk.PyGTKDeprecationWarning.message", "contents": "Gtk.PyGTKDeprecationWarning.message" },
        { "trigger": "Gtk.RadioAction", "contents": "Gtk.RadioAction(*args, **kwargs)" },
        { "trigger": "Gtk.RadioAction.new", "contents": "Gtk.RadioAction.new(name, label, tooltip, stock_id, value)" },
        { "trigger": "Gtk.RadioAction.get_current_value", "contents": "Gtk.RadioAction.get_current_value()" },
        { "trigger": "Gtk.RadioAction.get_group", "contents": "Gtk.RadioAction.get_group()" },
        { "trigger": "Gtk.RadioAction.join_group", "contents": "Gtk.RadioAction.join_group(group_source)" },
        { "trigger": "Gtk.RadioAction.set_current_value", "contents": "Gtk.RadioAction.set_current_value(current_value)" },
        { "trigger": "Gtk.RadioAction.set_group", "contents": "Gtk.RadioAction.set_group(group)" },
        { "trigger": "Gtk.RadioAction.do_changed", "contents": "Gtk.RadioAction.do_changed(current)" },
        { "trigger": "Gtk.RadioAction.signals.changed", "contents": "Gtk.RadioAction.signals.changed(radio_action, current)" },
        { "trigger": "Gtk.RadioAction.props.current_value", "contents": "Gtk.RadioAction.props.current_value" },
        { "trigger": "Gtk.RadioAction.props.group", "contents": "Gtk.RadioAction.props.group" },
        { "trigger": "Gtk.RadioAction.props.value", "contents": "Gtk.RadioAction.props.value" },
        { "trigger": "Gtk.RadioButtonAccessible", "contents": "Gtk.RadioButtonAccessible(**kwargs)" },
        { "trigger": "Gtk.RadioButton", "contents": "Gtk.RadioButton(*args, **kwargs)" },
        { "trigger": "Gtk.RadioButton.new", "contents": "Gtk.RadioButton.new(group)" },
        { "trigger": "Gtk.RadioButton.new_from_widget", "contents": "Gtk.RadioButton.new_from_widget(radio_group_member)" },
        { "trigger": "Gtk.RadioButton.new_with_label", "contents": "Gtk.RadioButton.new_with_label(group, label)" },
        { "trigger": "Gtk.RadioButton.new_with_label_from_widget", "contents": "Gtk.RadioButton.new_with_label_from_widget(radio_group_member, label)" },
        { "trigger": "Gtk.RadioButton.new_with_mnemonic", "contents": "Gtk.RadioButton.new_with_mnemonic(group, label)" },
        { "trigger": "Gtk.RadioButton.new_with_mnemonic_from_widget", "contents": "Gtk.RadioButton.new_with_mnemonic_from_widget(radio_group_member, label)" },
        { "trigger": "Gtk.RadioButton.get_group", "contents": "Gtk.RadioButton.get_group()" },
        { "trigger": "Gtk.RadioButton.join_group", "contents": "Gtk.RadioButton.join_group(group_source)" },
        { "trigger": "Gtk.RadioButton.set_group", "contents": "Gtk.RadioButton.set_group(group)" },
        { "trigger": "Gtk.RadioButton.do_group_changed", "contents": "Gtk.RadioButton.do_group_changed()" },
        { "trigger": "Gtk.RadioButton.signals.group_changed", "contents": "Gtk.RadioButton.signals.group_changed(radio_button)" },
        { "trigger": "Gtk.RadioButton.props.group", "contents": "Gtk.RadioButton.props.group" },
        { "trigger": "Gtk.RadioMenuItemAccessible", "contents": "Gtk.RadioMenuItemAccessible(**kwargs)" },
        { "trigger": "Gtk.RadioMenuItem", "contents": "Gtk.RadioMenuItem(*args, **kwargs)" },
        { "trigger": "Gtk.RadioMenuItem.new", "contents": "Gtk.RadioMenuItem.new(group)" },
        { "trigger": "Gtk.RadioMenuItem.new_from_widget", "contents": "Gtk.RadioMenuItem.new_from_widget(group)" },
        { "trigger": "Gtk.RadioMenuItem.new_with_label", "contents": "Gtk.RadioMenuItem.new_with_label(group, label)" },
        { "trigger": "Gtk.RadioMenuItem.new_with_label_from_widget", "contents": "Gtk.RadioMenuItem.new_with_label_from_widget(group, label)" },
        { "trigger": "Gtk.RadioMenuItem.new_with_mnemonic", "contents": "Gtk.RadioMenuItem.new_with_mnemonic(group, label)" },
        { "trigger": "Gtk.RadioMenuItem.new_with_mnemonic_from_widget", "contents": "Gtk.RadioMenuItem.new_with_mnemonic_from_widget(group, label)" },
        { "trigger": "Gtk.RadioMenuItem.get_group", "contents": "Gtk.RadioMenuItem.get_group()" },
        { "trigger": "Gtk.RadioMenuItem.join_group", "contents": "Gtk.RadioMenuItem.join_group(group_source)" },
        { "trigger": "Gtk.RadioMenuItem.set_group", "contents": "Gtk.RadioMenuItem.set_group(group)" },
        { "trigger": "Gtk.RadioMenuItem.do_group_changed", "contents": "Gtk.RadioMenuItem.do_group_changed()" },
        { "trigger": "Gtk.RadioMenuItem.signals.group_changed", "contents": "Gtk.RadioMenuItem.signals.group_changed(radio_menu_item)" },
        { "trigger": "Gtk.RadioMenuItem.props.group", "contents": "Gtk.RadioMenuItem.props.group" },
        { "trigger": "Gtk.RadioToolButton", "contents": "Gtk.RadioToolButton(*args, **kwargs)" },
        { "trigger": "Gtk.RadioToolButton.new", "contents": "Gtk.RadioToolButton.new(group)" },
        { "trigger": "Gtk.RadioToolButton.new_from_stock", "contents": "Gtk.RadioToolButton.new_from_stock(group, stock_id)" },
        { "trigger": "Gtk.RadioToolButton.new_from_widget", "contents": "Gtk.RadioToolButton.new_from_widget(group)" },
        { "trigger": "Gtk.RadioToolButton.new_with_stock_from_widget", "contents": "Gtk.RadioToolButton.new_with_stock_from_widget(group, stock_id)" },
        { "trigger": "Gtk.RadioToolButton.get_group", "contents": "Gtk.RadioToolButton.get_group()" },
        { "trigger": "Gtk.RadioToolButton.set_group", "contents": "Gtk.RadioToolButton.set_group(group)" },
        { "trigger": "Gtk.RadioToolButton.props.group", "contents": "Gtk.RadioToolButton.props.group" },
        { "trigger": "Gtk.RangeAccessible", "contents": "Gtk.RangeAccessible(**kwargs)" },
        { "trigger": "Gtk.Range", "contents": "Gtk.Range(**kwargs)" },
        { "trigger": "Gtk.Range.get_adjustment", "contents": "Gtk.Range.get_adjustment()" },
        { "trigger": "Gtk.Range.get_fill_level", "contents": "Gtk.Range.get_fill_level()" },
        { "trigger": "Gtk.Range.get_flippable", "contents": "Gtk.Range.get_flippable()" },
        { "trigger": "Gtk.Range.get_inverted", "contents": "Gtk.Range.get_inverted()" },
        { "trigger": "Gtk.Range.get_lower_stepper_sensitivity", "contents": "Gtk.Range.get_lower_stepper_sensitivity()" },
        { "trigger": "Gtk.Range.get_min_slider_size", "contents": "Gtk.Range.get_min_slider_size()" },
        { "trigger": "Gtk.Range.get_range_rect", "contents": "Gtk.Range.get_range_rect()" },
        { "trigger": "Gtk.Range.get_restrict_to_fill_level", "contents": "Gtk.Range.get_restrict_to_fill_level()" },
        { "trigger": "Gtk.Range.get_round_digits", "contents": "Gtk.Range.get_round_digits()" },
        { "trigger": "Gtk.Range.get_show_fill_level", "contents": "Gtk.Range.get_show_fill_level()" },
        { "trigger": "Gtk.Range.get_slider_range", "contents": "Gtk.Range.get_slider_range()" },
        { "trigger": "Gtk.Range.get_slider_size_fixed", "contents": "Gtk.Range.get_slider_size_fixed()" },
        { "trigger": "Gtk.Range.get_upper_stepper_sensitivity", "contents": "Gtk.Range.get_upper_stepper_sensitivity()" },
        { "trigger": "Gtk.Range.get_value", "contents": "Gtk.Range.get_value()" },
        { "trigger": "Gtk.Range.set_adjustment", "contents": "Gtk.Range.set_adjustment(adjustment)" },
        { "trigger": "Gtk.Range.set_fill_level", "contents": "Gtk.Range.set_fill_level(fill_level)" },
        { "trigger": "Gtk.Range.set_flippable", "contents": "Gtk.Range.set_flippable(flippable)" },
        { "trigger": "Gtk.Range.set_increments", "contents": "Gtk.Range.set_increments(step, page)" },
        { "trigger": "Gtk.Range.set_inverted", "contents": "Gtk.Range.set_inverted(setting)" },
        { "trigger": "Gtk.Range.set_lower_stepper_sensitivity", "contents": "Gtk.Range.set_lower_stepper_sensitivity(sensitivity)" },
        { "trigger": "Gtk.Range.set_min_slider_size", "contents": "Gtk.Range.set_min_slider_size(min_size)" },
        { "trigger": "Gtk.Range.set_range", "contents": "Gtk.Range.set_range(min, max)" },
        { "trigger": "Gtk.Range.set_restrict_to_fill_level", "contents": "Gtk.Range.set_restrict_to_fill_level(restrict_to_fill_level)" },
        { "trigger": "Gtk.Range.set_round_digits", "contents": "Gtk.Range.set_round_digits(round_digits)" },
        { "trigger": "Gtk.Range.set_show_fill_level", "contents": "Gtk.Range.set_show_fill_level(show_fill_level)" },
        { "trigger": "Gtk.Range.set_slider_size_fixed", "contents": "Gtk.Range.set_slider_size_fixed(size_fixed)" },
        { "trigger": "Gtk.Range.set_upper_stepper_sensitivity", "contents": "Gtk.Range.set_upper_stepper_sensitivity(sensitivity)" },
        { "trigger": "Gtk.Range.set_value", "contents": "Gtk.Range.set_value(value)" },
        { "trigger": "Gtk.Range.do_adjust_bounds", "contents": "Gtk.Range.do_adjust_bounds(new_value)" },
        { "trigger": "Gtk.Range.do_change_value", "contents": "Gtk.Range.do_change_value(scroll, new_value)" },
        { "trigger": "Gtk.Range.do_get_range_border", "contents": "Gtk.Range.do_get_range_border(border_)" },
        { "trigger": "Gtk.Range.do_move_slider", "contents": "Gtk.Range.do_move_slider(scroll)" },
        { "trigger": "Gtk.Range.do_value_changed", "contents": "Gtk.Range.do_value_changed()" },
        { "trigger": "Gtk.Range.signals.adjust_bounds", "contents": "Gtk.Range.signals.adjust_bounds(range, value)" },
        { "trigger": "Gtk.Range.signals.change_value", "contents": "Gtk.Range.signals.change_value(range, scroll, value)" },
        { "trigger": "Gtk.Range.signals.move_slider", "contents": "Gtk.Range.signals.move_slider(range, step)" },
        { "trigger": "Gtk.Range.signals.value_changed", "contents": "Gtk.Range.signals.value_changed(range)" },
        { "trigger": "Gtk.Range.props.adjustment", "contents": "Gtk.Range.props.adjustment" },
        { "trigger": "Gtk.Range.props.fill_level", "contents": "Gtk.Range.props.fill_level" },
        { "trigger": "Gtk.Range.props.inverted", "contents": "Gtk.Range.props.inverted" },
        { "trigger": "Gtk.Range.props.lower_stepper_sensitivity", "contents": "Gtk.Range.props.lower_stepper_sensitivity" },
        { "trigger": "Gtk.Range.props.restrict_to_fill_level", "contents": "Gtk.Range.props.restrict_to_fill_level" },
        { "trigger": "Gtk.Range.props.round_digits", "contents": "Gtk.Range.props.round_digits" },
        { "trigger": "Gtk.Range.props.show_fill_level", "contents": "Gtk.Range.props.show_fill_level" },
        { "trigger": "Gtk.Range.props.upper_stepper_sensitivity", "contents": "Gtk.Range.props.upper_stepper_sensitivity" },
        { "trigger": "Gtk.RcStyle", "contents": "Gtk.RcStyle(**kwargs)" },
        { "trigger": "Gtk.RcStyle.new", "contents": "Gtk.RcStyle.new()" },
        { "trigger": "Gtk.RcStyle.copy", "contents": "Gtk.RcStyle.copy()" },
        { "trigger": "Gtk.RcStyle.do_merge", "contents": "Gtk.RcStyle.do_merge(src)" },
        { "trigger": "Gtk.RcStyle.do_parse", "contents": "Gtk.RcStyle.do_parse(settings, scanner)" },
        { "trigger": "Gtk.RecentAction", "contents": "Gtk.RecentAction(*args, **kwargs)" },
        { "trigger": "Gtk.RecentAction.new", "contents": "Gtk.RecentAction.new(name, label, tooltip, stock_id)" },
        { "trigger": "Gtk.RecentAction.new_for_manager", "contents": "Gtk.RecentAction.new_for_manager(name, label, tooltip, stock_id, manager)" },
        { "trigger": "Gtk.RecentAction.get_show_numbers", "contents": "Gtk.RecentAction.get_show_numbers()" },
        { "trigger": "Gtk.RecentAction.set_show_numbers", "contents": "Gtk.RecentAction.set_show_numbers(show_numbers)" },
        { "trigger": "Gtk.RecentAction.props.show_numbers", "contents": "Gtk.RecentAction.props.show_numbers" },
        { "trigger": "Gtk.RecentChooserDialog", "contents": "Gtk.RecentChooserDialog(*args, **kwargs)" },
        { "trigger": "Gtk.RecentChooserMenu", "contents": "Gtk.RecentChooserMenu(**kwargs)" },
        { "trigger": "Gtk.RecentChooserMenu.new", "contents": "Gtk.RecentChooserMenu.new()" },
        { "trigger": "Gtk.RecentChooserMenu.new_for_manager", "contents": "Gtk.RecentChooserMenu.new_for_manager(manager)" },
        { "trigger": "Gtk.RecentChooserMenu.get_show_numbers", "contents": "Gtk.RecentChooserMenu.get_show_numbers()" },
        { "trigger": "Gtk.RecentChooserMenu.set_show_numbers", "contents": "Gtk.RecentChooserMenu.set_show_numbers(show_numbers)" },
        { "trigger": "Gtk.RecentChooserMenu.props.show_numbers", "contents": "Gtk.RecentChooserMenu.props.show_numbers" },
        { "trigger": "Gtk.RecentChooserWidget", "contents": "Gtk.RecentChooserWidget(*args, **kwargs)" },
        { "trigger": "Gtk.RecentChooserWidget.new", "contents": "Gtk.RecentChooserWidget.new()" },
        { "trigger": "Gtk.RecentChooserWidget.new_for_manager", "contents": "Gtk.RecentChooserWidget.new_for_manager(manager)" },
        { "trigger": "Gtk.RecentFilter", "contents": "Gtk.RecentFilter(**kwargs)" },
        { "trigger": "Gtk.RecentFilter.new", "contents": "Gtk.RecentFilter.new()" },
        { "trigger": "Gtk.RecentFilter.add_age", "contents": "Gtk.RecentFilter.add_age(days)" },
        { "trigger": "Gtk.RecentFilter.add_application", "contents": "Gtk.RecentFilter.add_application(application)" },
        { "trigger": "Gtk.RecentFilter.add_custom", "contents": "Gtk.RecentFilter.add_custom(needed, func, *data)" },
        { "trigger": "Gtk.RecentFilter.add_group", "contents": "Gtk.RecentFilter.add_group(group)" },
        { "trigger": "Gtk.RecentFilter.add_mime_type", "contents": "Gtk.RecentFilter.add_mime_type(mime_type)" },
        { "trigger": "Gtk.RecentFilter.add_pattern", "contents": "Gtk.RecentFilter.add_pattern(pattern)" },
        { "trigger": "Gtk.RecentFilter.add_pixbuf_formats", "contents": "Gtk.RecentFilter.add_pixbuf_formats()" },
        { "trigger": "Gtk.RecentFilter.filter", "contents": "Gtk.RecentFilter.filter(filter_info)" },
        { "trigger": "Gtk.RecentFilter.get_name", "contents": "Gtk.RecentFilter.get_name()" },
        { "trigger": "Gtk.RecentFilter.get_needed", "contents": "Gtk.RecentFilter.get_needed()" },
        { "trigger": "Gtk.RecentFilter.set_name", "contents": "Gtk.RecentFilter.set_name(name)" },
        { "trigger": "Gtk.RecentManager", "contents": "Gtk.RecentManager(**kwargs)" },
        { "trigger": "Gtk.RecentManager.get_default", "contents": "Gtk.RecentManager.get_default()" },
        { "trigger": "Gtk.RecentManager.new", "contents": "Gtk.RecentManager.new()" },
        { "trigger": "Gtk.RecentManager.add_full", "contents": "Gtk.RecentManager.add_full(uri, recent_data)" },
        { "trigger": "Gtk.RecentManager.add_item", "contents": "Gtk.RecentManager.add_item(uri)" },
        { "trigger": "Gtk.RecentManager.get_items", "contents": "Gtk.RecentManager.get_items()" },
        { "trigger": "Gtk.RecentManager.has_item", "contents": "Gtk.RecentManager.has_item(uri)" },
        { "trigger": "Gtk.RecentManager.lookup_item", "contents": "Gtk.RecentManager.lookup_item(uri)" },
        { "trigger": "Gtk.RecentManager.move_item", "contents": "Gtk.RecentManager.move_item(uri, new_uri)" },
        { "trigger": "Gtk.RecentManager.purge_items", "contents": "Gtk.RecentManager.purge_items()" },
        { "trigger": "Gtk.RecentManager.remove_item", "contents": "Gtk.RecentManager.remove_item(uri)" },
        { "trigger": "Gtk.RecentManager.do_changed", "contents": "Gtk.RecentManager.do_changed()" },
        { "trigger": "Gtk.RecentManager.signals.changed", "contents": "Gtk.RecentManager.signals.changed(recent_manager)" },
        { "trigger": "Gtk.RecentManager.props.filename", "contents": "Gtk.RecentManager.props.filename" },
        { "trigger": "Gtk.RecentManager.props.size", "contents": "Gtk.RecentManager.props.size" },
        { "trigger": "Gtk.RendererCellAccessible", "contents": "Gtk.RendererCellAccessible(**kwargs)" },
        { "trigger": "Gtk.RendererCellAccessible.new", "contents": "Gtk.RendererCellAccessible.new(renderer)" },
        { "trigger": "Gtk.RendererCellAccessible.props.renderer", "contents": "Gtk.RendererCellAccessible.props.renderer" },
        { "trigger": "Gtk.Revealer", "contents": "Gtk.Revealer(**kwargs)" },
        { "trigger": "Gtk.Revealer.new", "contents": "Gtk.Revealer.new()" },
        { "trigger": "Gtk.Revealer.get_child_revealed", "contents": "Gtk.Revealer.get_child_revealed()" },
        { "trigger": "Gtk.Revealer.get_reveal_child", "contents": "Gtk.Revealer.get_reveal_child()" },
        { "trigger": "Gtk.Revealer.get_transition_duration", "contents": "Gtk.Revealer.get_transition_duration()" },
        { "trigger": "Gtk.Revealer.get_transition_type", "contents": "Gtk.Revealer.get_transition_type()" },
        { "trigger": "Gtk.Revealer.set_reveal_child", "contents": "Gtk.Revealer.set_reveal_child(reveal_child)" },
        { "trigger": "Gtk.Revealer.set_transition_duration", "contents": "Gtk.Revealer.set_transition_duration(duration)" },
        { "trigger": "Gtk.Revealer.set_transition_type", "contents": "Gtk.Revealer.set_transition_type(transition)" },
        { "trigger": "Gtk.Revealer.props.child_revealed", "contents": "Gtk.Revealer.props.child_revealed" },
        { "trigger": "Gtk.Revealer.props.reveal_child", "contents": "Gtk.Revealer.props.reveal_child" },
        { "trigger": "Gtk.Revealer.props.transition_duration", "contents": "Gtk.Revealer.props.transition_duration" },
        { "trigger": "Gtk.Revealer.props.transition_type", "contents": "Gtk.Revealer.props.transition_type" },
        { "trigger": "Gtk.ScaleAccessible", "contents": "Gtk.ScaleAccessible(**kwargs)" },
        { "trigger": "Gtk.ScaleButtonAccessible", "contents": "Gtk.ScaleButtonAccessible(**kwargs)" },
        { "trigger": "Gtk.ScaleButton", "contents": "Gtk.ScaleButton(*args, **kwargs)" },
        { "trigger": "Gtk.ScaleButton.new", "contents": "Gtk.ScaleButton.new(size, min, max, step, icons)" },
        { "trigger": "Gtk.ScaleButton.get_adjustment", "contents": "Gtk.ScaleButton.get_adjustment()" },
        { "trigger": "Gtk.ScaleButton.get_minus_button", "contents": "Gtk.ScaleButton.get_minus_button()" },
        { "trigger": "Gtk.ScaleButton.get_plus_button", "contents": "Gtk.ScaleButton.get_plus_button()" },
        { "trigger": "Gtk.ScaleButton.get_popup", "contents": "Gtk.ScaleButton.get_popup()" },
        { "trigger": "Gtk.ScaleButton.get_value", "contents": "Gtk.ScaleButton.get_value()" },
        { "trigger": "Gtk.ScaleButton.set_adjustment", "contents": "Gtk.ScaleButton.set_adjustment(adjustment)" },
        { "trigger": "Gtk.ScaleButton.set_icons", "contents": "Gtk.ScaleButton.set_icons(icons)" },
        { "trigger": "Gtk.ScaleButton.set_value", "contents": "Gtk.ScaleButton.set_value(value)" },
        { "trigger": "Gtk.ScaleButton.do_value_changed", "contents": "Gtk.ScaleButton.do_value_changed(value)" },
        { "trigger": "Gtk.ScaleButton.signals.popdown", "contents": "Gtk.ScaleButton.signals.popdown(scale_button)" },
        { "trigger": "Gtk.ScaleButton.signals.popup", "contents": "Gtk.ScaleButton.signals.popup(scale_button)" },
        { "trigger": "Gtk.ScaleButton.signals.value_changed", "contents": "Gtk.ScaleButton.signals.value_changed(scale_button, value)" },
        { "trigger": "Gtk.ScaleButton.props.adjustment", "contents": "Gtk.ScaleButton.props.adjustment" },
        { "trigger": "Gtk.ScaleButton.props.icons", "contents": "Gtk.ScaleButton.props.icons" },
        { "trigger": "Gtk.ScaleButton.props.size", "contents": "Gtk.ScaleButton.props.size" },
        { "trigger": "Gtk.ScaleButton.props.value", "contents": "Gtk.ScaleButton.props.value" },
        { "trigger": "Gtk.Scale", "contents": "Gtk.Scale(**kwargs)" },
        { "trigger": "Gtk.Scale.new", "contents": "Gtk.Scale.new(orientation, adjustment)" },
        { "trigger": "Gtk.Scale.new_with_range", "contents": "Gtk.Scale.new_with_range(orientation, min, max, step)" },
        { "trigger": "Gtk.Scale.add_mark", "contents": "Gtk.Scale.add_mark(value, position, markup)" },
        { "trigger": "Gtk.Scale.clear_marks", "contents": "Gtk.Scale.clear_marks()" },
        { "trigger": "Gtk.Scale.get_digits", "contents": "Gtk.Scale.get_digits()" },
        { "trigger": "Gtk.Scale.get_draw_value", "contents": "Gtk.Scale.get_draw_value()" },
        { "trigger": "Gtk.Scale.get_has_origin", "contents": "Gtk.Scale.get_has_origin()" },
        { "trigger": "Gtk.Scale.get_layout", "contents": "Gtk.Scale.get_layout()" },
        { "trigger": "Gtk.Scale.get_layout_offsets", "contents": "Gtk.Scale.get_layout_offsets()" },
        { "trigger": "Gtk.Scale.get_value_pos", "contents": "Gtk.Scale.get_value_pos()" },
        { "trigger": "Gtk.Scale.set_digits", "contents": "Gtk.Scale.set_digits(digits)" },
        { "trigger": "Gtk.Scale.set_draw_value", "contents": "Gtk.Scale.set_draw_value(draw_value)" },
        { "trigger": "Gtk.Scale.set_has_origin", "contents": "Gtk.Scale.set_has_origin(has_origin)" },
        { "trigger": "Gtk.Scale.set_value_pos", "contents": "Gtk.Scale.set_value_pos(pos)" },
        { "trigger": "Gtk.Scale.do_draw_value", "contents": "Gtk.Scale.do_draw_value()" },
        { "trigger": "Gtk.Scale.do_format_value", "contents": "Gtk.Scale.do_format_value(value)" },
        { "trigger": "Gtk.Scale.do_get_layout_offsets", "contents": "Gtk.Scale.do_get_layout_offsets()" },
        { "trigger": "Gtk.Scale.signals.format_value", "contents": "Gtk.Scale.signals.format_value(scale, value)" },
        { "trigger": "Gtk.Scale.props.digits", "contents": "Gtk.Scale.props.digits" },
        { "trigger": "Gtk.Scale.props.draw_value", "contents": "Gtk.Scale.props.draw_value" },
        { "trigger": "Gtk.Scale.props.has_origin", "contents": "Gtk.Scale.props.has_origin" },
        { "trigger": "Gtk.Scale.props.value_pos", "contents": "Gtk.Scale.props.value_pos" },
        { "trigger": "Gtk.Scrollbar", "contents": "Gtk.Scrollbar(**kwargs)" },
        { "trigger": "Gtk.Scrollbar.new", "contents": "Gtk.Scrollbar.new(orientation, adjustment)" },
        { "trigger": "Gtk.ScrolledWindowAccessible", "contents": "Gtk.ScrolledWindowAccessible(**kwargs)" },
        { "trigger": "Gtk.ScrolledWindow", "contents": "Gtk.ScrolledWindow(*args, **kwargs)" },
        { "trigger": "Gtk.ScrolledWindow.new", "contents": "Gtk.ScrolledWindow.new(hadjustment, vadjustment)" },
        { "trigger": "Gtk.ScrolledWindow.add_with_viewport", "contents": "Gtk.ScrolledWindow.add_with_viewport(child)" },
        { "trigger": "Gtk.ScrolledWindow.get_capture_button_press", "contents": "Gtk.ScrolledWindow.get_capture_button_press()" },
        { "trigger": "Gtk.ScrolledWindow.get_hadjustment", "contents": "Gtk.ScrolledWindow.get_hadjustment()" },
        { "trigger": "Gtk.ScrolledWindow.get_hscrollbar", "contents": "Gtk.ScrolledWindow.get_hscrollbar()" },
        { "trigger": "Gtk.ScrolledWindow.get_kinetic_scrolling", "contents": "Gtk.ScrolledWindow.get_kinetic_scrolling()" },
        { "trigger": "Gtk.ScrolledWindow.get_min_content_height", "contents": "Gtk.ScrolledWindow.get_min_content_height()" },
        { "trigger": "Gtk.ScrolledWindow.get_min_content_width", "contents": "Gtk.ScrolledWindow.get_min_content_width()" },
        { "trigger": "Gtk.ScrolledWindow.get_overlay_scrolling", "contents": "Gtk.ScrolledWindow.get_overlay_scrolling()" },
        { "trigger": "Gtk.ScrolledWindow.get_placement", "contents": "Gtk.ScrolledWindow.get_placement()" },
        { "trigger": "Gtk.ScrolledWindow.get_policy", "contents": "Gtk.ScrolledWindow.get_policy()" },
        { "trigger": "Gtk.ScrolledWindow.get_shadow_type", "contents": "Gtk.ScrolledWindow.get_shadow_type()" },
        { "trigger": "Gtk.ScrolledWindow.get_vadjustment", "contents": "Gtk.ScrolledWindow.get_vadjustment()" },
        { "trigger": "Gtk.ScrolledWindow.get_vscrollbar", "contents": "Gtk.ScrolledWindow.get_vscrollbar()" },
        { "trigger": "Gtk.ScrolledWindow.set_capture_button_press", "contents": "Gtk.ScrolledWindow.set_capture_button_press(capture_button_press)" },
        { "trigger": "Gtk.ScrolledWindow.set_hadjustment", "contents": "Gtk.ScrolledWindow.set_hadjustment(hadjustment)" },
        { "trigger": "Gtk.ScrolledWindow.set_kinetic_scrolling", "contents": "Gtk.ScrolledWindow.set_kinetic_scrolling(kinetic_scrolling)" },
        { "trigger": "Gtk.ScrolledWindow.set_min_content_height", "contents": "Gtk.ScrolledWindow.set_min_content_height(height)" },
        { "trigger": "Gtk.ScrolledWindow.set_min_content_width", "contents": "Gtk.ScrolledWindow.set_min_content_width(width)" },
        { "trigger": "Gtk.ScrolledWindow.set_overlay_scrolling", "contents": "Gtk.ScrolledWindow.set_overlay_scrolling(overlay_scrolling)" },
        { "trigger": "Gtk.ScrolledWindow.set_placement", "contents": "Gtk.ScrolledWindow.set_placement(window_placement)" },
        { "trigger": "Gtk.ScrolledWindow.set_policy", "contents": "Gtk.ScrolledWindow.set_policy(hscrollbar_policy, vscrollbar_policy)" },
        { "trigger": "Gtk.ScrolledWindow.set_shadow_type", "contents": "Gtk.ScrolledWindow.set_shadow_type(type)" },
        { "trigger": "Gtk.ScrolledWindow.set_vadjustment", "contents": "Gtk.ScrolledWindow.set_vadjustment(vadjustment)" },
        { "trigger": "Gtk.ScrolledWindow.unset_placement", "contents": "Gtk.ScrolledWindow.unset_placement()" },
        { "trigger": "Gtk.ScrolledWindow.do_move_focus_out", "contents": "Gtk.ScrolledWindow.do_move_focus_out(direction)" },
        { "trigger": "Gtk.ScrolledWindow.do_scroll_child", "contents": "Gtk.ScrolledWindow.do_scroll_child(scroll, horizontal)" },
        { "trigger": "Gtk.ScrolledWindow.signals.edge_overshot", "contents": "Gtk.ScrolledWindow.signals.edge_overshot(scrolled_window, pos)" },
        { "trigger": "Gtk.ScrolledWindow.signals.edge_reached", "contents": "Gtk.ScrolledWindow.signals.edge_reached(scrolled_window, pos)" },
        { "trigger": "Gtk.ScrolledWindow.signals.move_focus_out", "contents": "Gtk.ScrolledWindow.signals.move_focus_out(scrolled_window, direction_type)" },
        { "trigger": "Gtk.ScrolledWindow.signals.scroll_child", "contents": "Gtk.ScrolledWindow.signals.scroll_child(scrolled_window, scroll, horizontal)" },
        { "trigger": "Gtk.ScrolledWindow.props.hadjustment", "contents": "Gtk.ScrolledWindow.props.hadjustment" },
        { "trigger": "Gtk.ScrolledWindow.props.hscrollbar_policy", "contents": "Gtk.ScrolledWindow.props.hscrollbar_policy" },
        { "trigger": "Gtk.ScrolledWindow.props.kinetic_scrolling", "contents": "Gtk.ScrolledWindow.props.kinetic_scrolling" },
        { "trigger": "Gtk.ScrolledWindow.props.min_content_height", "contents": "Gtk.ScrolledWindow.props.min_content_height" },
        { "trigger": "Gtk.ScrolledWindow.props.min_content_width", "contents": "Gtk.ScrolledWindow.props.min_content_width" },
        { "trigger": "Gtk.ScrolledWindow.props.overlay_scrolling", "contents": "Gtk.ScrolledWindow.props.overlay_scrolling" },
        { "trigger": "Gtk.ScrolledWindow.props.shadow_type", "contents": "Gtk.ScrolledWindow.props.shadow_type" },
        { "trigger": "Gtk.ScrolledWindow.props.vadjustment", "contents": "Gtk.ScrolledWindow.props.vadjustment" },
        { "trigger": "Gtk.ScrolledWindow.props.vscrollbar_policy", "contents": "Gtk.ScrolledWindow.props.vscrollbar_policy" },
        { "trigger": "Gtk.ScrolledWindow.props.window_placement", "contents": "Gtk.ScrolledWindow.props.window_placement" },
        { "trigger": "Gtk.ScrolledWindow.props.window_placement_set", "contents": "Gtk.ScrolledWindow.props.window_placement_set" },
        { "trigger": "Gtk.SearchBar", "contents": "Gtk.SearchBar(**kwargs)" },
        { "trigger": "Gtk.SearchBar.new", "contents": "Gtk.SearchBar.new()" },
        { "trigger": "Gtk.SearchBar.connect_entry", "contents": "Gtk.SearchBar.connect_entry(entry)" },
        { "trigger": "Gtk.SearchBar.get_search_mode", "contents": "Gtk.SearchBar.get_search_mode()" },
        { "trigger": "Gtk.SearchBar.get_show_close_button", "contents": "Gtk.SearchBar.get_show_close_button()" },
        { "trigger": "Gtk.SearchBar.handle_event", "contents": "Gtk.SearchBar.handle_event(event)" },
        { "trigger": "Gtk.SearchBar.set_search_mode", "contents": "Gtk.SearchBar.set_search_mode(search_mode)" },
        { "trigger": "Gtk.SearchBar.set_show_close_button", "contents": "Gtk.SearchBar.set_show_close_button(visible)" },
        { "trigger": "Gtk.SearchBar.props.search_mode_enabled", "contents": "Gtk.SearchBar.props.search_mode_enabled" },
        { "trigger": "Gtk.SearchBar.props.show_close_button", "contents": "Gtk.SearchBar.props.show_close_button" },
        { "trigger": "Gtk.SearchEntry", "contents": "Gtk.SearchEntry(**kwargs)" },
        { "trigger": "Gtk.SearchEntry.new", "contents": "Gtk.SearchEntry.new()" },
        { "trigger": "Gtk.SearchEntry.handle_event", "contents": "Gtk.SearchEntry.handle_event(event)" },
        { "trigger": "Gtk.SearchEntry.do_next_match", "contents": "Gtk.SearchEntry.do_next_match()" },
        { "trigger": "Gtk.SearchEntry.do_previous_match", "contents": "Gtk.SearchEntry.do_previous_match()" },
        { "trigger": "Gtk.SearchEntry.do_search_changed", "contents": "Gtk.SearchEntry.do_search_changed()" },
        { "trigger": "Gtk.SearchEntry.do_stop_search", "contents": "Gtk.SearchEntry.do_stop_search()" },
        { "trigger": "Gtk.SearchEntry.signals.next_match", "contents": "Gtk.SearchEntry.signals.next_match(search_entry)" },
        { "trigger": "Gtk.SearchEntry.signals.previous_match", "contents": "Gtk.SearchEntry.signals.previous_match(search_entry)" },
        { "trigger": "Gtk.SearchEntry.signals.search_changed", "contents": "Gtk.SearchEntry.signals.search_changed(search_entry)" },
        { "trigger": "Gtk.SearchEntry.signals.stop_search", "contents": "Gtk.SearchEntry.signals.stop_search(search_entry)" },
        { "trigger": "Gtk.Separator", "contents": "Gtk.Separator(**kwargs)" },
        { "trigger": "Gtk.Separator.new", "contents": "Gtk.Separator.new(orientation)" },
        { "trigger": "Gtk.SeparatorMenuItem", "contents": "Gtk.SeparatorMenuItem(*args, **kwargs)" },
        { "trigger": "Gtk.SeparatorMenuItem.new", "contents": "Gtk.SeparatorMenuItem.new()" },
        { "trigger": "Gtk.SeparatorToolItem", "contents": "Gtk.SeparatorToolItem(**kwargs)" },
        { "trigger": "Gtk.SeparatorToolItem.new", "contents": "Gtk.SeparatorToolItem.new()" },
        { "trigger": "Gtk.SeparatorToolItem.get_draw", "contents": "Gtk.SeparatorToolItem.get_draw()" },
        { "trigger": "Gtk.SeparatorToolItem.set_draw", "contents": "Gtk.SeparatorToolItem.set_draw(draw)" },
        { "trigger": "Gtk.SeparatorToolItem.props.draw", "contents": "Gtk.SeparatorToolItem.props.draw" },
        { "trigger": "Gtk.Settings", "contents": "Gtk.Settings(**kwargs)" },
        { "trigger": "Gtk.Settings.get_default", "contents": "Gtk.Settings.get_default()" },
        { "trigger": "Gtk.Settings.get_for_screen", "contents": "Gtk.Settings.get_for_screen(screen)" },
        { "trigger": "Gtk.Settings.install_property", "contents": "Gtk.Settings.install_property(pspec)" },
        { "trigger": "Gtk.Settings.install_property_parser", "contents": "Gtk.Settings.install_property_parser(pspec, parser)" },
        { "trigger": "Gtk.Settings.set_double_property", "contents": "Gtk.Settings.set_double_property(name, v_double, origin)" },
        { "trigger": "Gtk.Settings.set_long_property", "contents": "Gtk.Settings.set_long_property(name, v_long, origin)" },
        { "trigger": "Gtk.Settings.set_property_value", "contents": "Gtk.Settings.set_property_value(name, svalue)" },
        { "trigger": "Gtk.Settings.set_string_property", "contents": "Gtk.Settings.set_string_property(name, v_string, origin)" },
        { "trigger": "Gtk.Settings.props.color_hash", "contents": "Gtk.Settings.props.color_hash" },
        { "trigger": "Gtk.Settings.props.gtk_alternative_button_order", "contents": "Gtk.Settings.props.gtk_alternative_button_order" },
        { "trigger": "Gtk.Settings.props.gtk_alternative_sort_arrows", "contents": "Gtk.Settings.props.gtk_alternative_sort_arrows" },
        { "trigger": "Gtk.Settings.props.gtk_application_prefer_dark_theme", "contents": "Gtk.Settings.props.gtk_application_prefer_dark_theme" },
        { "trigger": "Gtk.Settings.props.gtk_auto_mnemonics", "contents": "Gtk.Settings.props.gtk_auto_mnemonics" },
        { "trigger": "Gtk.Settings.props.gtk_button_images", "contents": "Gtk.Settings.props.gtk_button_images" },
        { "trigger": "Gtk.Settings.props.gtk_can_change_accels", "contents": "Gtk.Settings.props.gtk_can_change_accels" },
        { "trigger": "Gtk.Settings.props.gtk_color_palette", "contents": "Gtk.Settings.props.gtk_color_palette" },
        { "trigger": "Gtk.Settings.props.gtk_color_scheme", "contents": "Gtk.Settings.props.gtk_color_scheme" },
        { "trigger": "Gtk.Settings.props.gtk_cursor_blink", "contents": "Gtk.Settings.props.gtk_cursor_blink" },
        { "trigger": "Gtk.Settings.props.gtk_cursor_blink_time", "contents": "Gtk.Settings.props.gtk_cursor_blink_time" },
        { "trigger": "Gtk.Settings.props.gtk_cursor_blink_timeout", "contents": "Gtk.Settings.props.gtk_cursor_blink_timeout" },
        { "trigger": "Gtk.Settings.props.gtk_cursor_theme_name", "contents": "Gtk.Settings.props.gtk_cursor_theme_name" },
        { "trigger": "Gtk.Settings.props.gtk_cursor_theme_size", "contents": "Gtk.Settings.props.gtk_cursor_theme_size" },
        { "trigger": "Gtk.Settings.props.gtk_decoration_layout", "contents": "Gtk.Settings.props.gtk_decoration_layout" },
        { "trigger": "Gtk.Settings.props.gtk_dialogs_use_header", "contents": "Gtk.Settings.props.gtk_dialogs_use_header" },
        { "trigger": "Gtk.Settings.props.gtk_dnd_drag_threshold", "contents": "Gtk.Settings.props.gtk_dnd_drag_threshold" },
        { "trigger": "Gtk.Settings.props.gtk_double_click_distance", "contents": "Gtk.Settings.props.gtk_double_click_distance" },
        { "trigger": "Gtk.Settings.props.gtk_double_click_time", "contents": "Gtk.Settings.props.gtk_double_click_time" },
        { "trigger": "Gtk.Settings.props.gtk_enable_accels", "contents": "Gtk.Settings.props.gtk_enable_accels" },
        { "trigger": "Gtk.Settings.props.gtk_enable_animations", "contents": "Gtk.Settings.props.gtk_enable_animations" },
        { "trigger": "Gtk.Settings.props.gtk_enable_event_sounds", "contents": "Gtk.Settings.props.gtk_enable_event_sounds" },
        { "trigger": "Gtk.Settings.props.gtk_enable_input_feedback_sounds", "contents": "Gtk.Settings.props.gtk_enable_input_feedback_sounds" },
        { "trigger": "Gtk.Settings.props.gtk_enable_mnemonics", "contents": "Gtk.Settings.props.gtk_enable_mnemonics" },
        { "trigger": "Gtk.Settings.props.gtk_enable_primary_paste", "contents": "Gtk.Settings.props.gtk_enable_primary_paste" },
        { "trigger": "Gtk.Settings.props.gtk_enable_tooltips", "contents": "Gtk.Settings.props.gtk_enable_tooltips" },
        { "trigger": "Gtk.Settings.props.gtk_entry_password_hint_timeout", "contents": "Gtk.Settings.props.gtk_entry_password_hint_timeout" },
        { "trigger": "Gtk.Settings.props.gtk_entry_select_on_focus", "contents": "Gtk.Settings.props.gtk_entry_select_on_focus" },
        { "trigger": "Gtk.Settings.props.gtk_error_bell", "contents": "Gtk.Settings.props.gtk_error_bell" },
        { "trigger": "Gtk.Settings.props.gtk_fallback_icon_theme", "contents": "Gtk.Settings.props.gtk_fallback_icon_theme" },
        { "trigger": "Gtk.Settings.props.gtk_file_chooser_backend", "contents": "Gtk.Settings.props.gtk_file_chooser_backend" },
        { "trigger": "Gtk.Settings.props.gtk_font_name", "contents": "Gtk.Settings.props.gtk_font_name" },
        { "trigger": "Gtk.Settings.props.gtk_fontconfig_timestamp", "contents": "Gtk.Settings.props.gtk_fontconfig_timestamp" },
        { "trigger": "Gtk.Settings.props.gtk_icon_sizes", "contents": "Gtk.Settings.props.gtk_icon_sizes" },
        { "trigger": "Gtk.Settings.props.gtk_icon_theme_name", "contents": "Gtk.Settings.props.gtk_icon_theme_name" },
        { "trigger": "Gtk.Settings.props.gtk_im_module", "contents": "Gtk.Settings.props.gtk_im_module" },
        { "trigger": "Gtk.Settings.props.gtk_im_preedit_style", "contents": "Gtk.Settings.props.gtk_im_preedit_style" },
        { "trigger": "Gtk.Settings.props.gtk_im_status_style", "contents": "Gtk.Settings.props.gtk_im_status_style" },
        { "trigger": "Gtk.Settings.props.gtk_key_theme_name", "contents": "Gtk.Settings.props.gtk_key_theme_name" },
        { "trigger": "Gtk.Settings.props.gtk_keynav_cursor_only", "contents": "Gtk.Settings.props.gtk_keynav_cursor_only" },
        { "trigger": "Gtk.Settings.props.gtk_keynav_wrap_around", "contents": "Gtk.Settings.props.gtk_keynav_wrap_around" },
        { "trigger": "Gtk.Settings.props.gtk_label_select_on_focus", "contents": "Gtk.Settings.props.gtk_label_select_on_focus" },
        { "trigger": "Gtk.Settings.props.gtk_long_press_time", "contents": "Gtk.Settings.props.gtk_long_press_time" },
        { "trigger": "Gtk.Settings.props.gtk_menu_bar_accel", "contents": "Gtk.Settings.props.gtk_menu_bar_accel" },
        { "trigger": "Gtk.Settings.props.gtk_menu_bar_popup_delay", "contents": "Gtk.Settings.props.gtk_menu_bar_popup_delay" },
        { "trigger": "Gtk.Settings.props.gtk_menu_images", "contents": "Gtk.Settings.props.gtk_menu_images" },
        { "trigger": "Gtk.Settings.props.gtk_menu_popdown_delay", "contents": "Gtk.Settings.props.gtk_menu_popdown_delay" },
        { "trigger": "Gtk.Settings.props.gtk_menu_popup_delay", "contents": "Gtk.Settings.props.gtk_menu_popup_delay" },
        { "trigger": "Gtk.Settings.props.gtk_modules", "contents": "Gtk.Settings.props.gtk_modules" },
        { "trigger": "Gtk.Settings.props.gtk_primary_button_warps_slider", "contents": "Gtk.Settings.props.gtk_primary_button_warps_slider" },
        { "trigger": "Gtk.Settings.props.gtk_print_backends", "contents": "Gtk.Settings.props.gtk_print_backends" },
        { "trigger": "Gtk.Settings.props.gtk_print_preview_command", "contents": "Gtk.Settings.props.gtk_print_preview_command" },
        { "trigger": "Gtk.Settings.props.gtk_recent_files_enabled", "contents": "Gtk.Settings.props.gtk_recent_files_enabled" },
        { "trigger": "Gtk.Settings.props.gtk_recent_files_limit", "contents": "Gtk.Settings.props.gtk_recent_files_limit" },
        { "trigger": "Gtk.Settings.props.gtk_recent_files_max_age", "contents": "Gtk.Settings.props.gtk_recent_files_max_age" },
        { "trigger": "Gtk.Settings.props.gtk_scrolled_window_placement", "contents": "Gtk.Settings.props.gtk_scrolled_window_placement" },
        { "trigger": "Gtk.Settings.props.gtk_shell_shows_app_menu", "contents": "Gtk.Settings.props.gtk_shell_shows_app_menu" },
        { "trigger": "Gtk.Settings.props.gtk_shell_shows_desktop", "contents": "Gtk.Settings.props.gtk_shell_shows_desktop" },
        { "trigger": "Gtk.Settings.props.gtk_shell_shows_menubar", "contents": "Gtk.Settings.props.gtk_shell_shows_menubar" },
        { "trigger": "Gtk.Settings.props.gtk_show_input_method_menu", "contents": "Gtk.Settings.props.gtk_show_input_method_menu" },
        { "trigger": "Gtk.Settings.props.gtk_show_unicode_menu", "contents": "Gtk.Settings.props.gtk_show_unicode_menu" },
        { "trigger": "Gtk.Settings.props.gtk_sound_theme_name", "contents": "Gtk.Settings.props.gtk_sound_theme_name" },
        { "trigger": "Gtk.Settings.props.gtk_split_cursor", "contents": "Gtk.Settings.props.gtk_split_cursor" },
        { "trigger": "Gtk.Settings.props.gtk_theme_name", "contents": "Gtk.Settings.props.gtk_theme_name" },
        { "trigger": "Gtk.Settings.props.gtk_timeout_expand", "contents": "Gtk.Settings.props.gtk_timeout_expand" },
        { "trigger": "Gtk.Settings.props.gtk_timeout_initial", "contents": "Gtk.Settings.props.gtk_timeout_initial" },
        { "trigger": "Gtk.Settings.props.gtk_timeout_repeat", "contents": "Gtk.Settings.props.gtk_timeout_repeat" },
        { "trigger": "Gtk.Settings.props.gtk_titlebar_double_click", "contents": "Gtk.Settings.props.gtk_titlebar_double_click" },
        { "trigger": "Gtk.Settings.props.gtk_titlebar_middle_click", "contents": "Gtk.Settings.props.gtk_titlebar_middle_click" },
        { "trigger": "Gtk.Settings.props.gtk_titlebar_right_click", "contents": "Gtk.Settings.props.gtk_titlebar_right_click" },
        { "trigger": "Gtk.Settings.props.gtk_toolbar_icon_size", "contents": "Gtk.Settings.props.gtk_toolbar_icon_size" },
        { "trigger": "Gtk.Settings.props.gtk_toolbar_style", "contents": "Gtk.Settings.props.gtk_toolbar_style" },
        { "trigger": "Gtk.Settings.props.gtk_tooltip_browse_mode_timeout", "contents": "Gtk.Settings.props.gtk_tooltip_browse_mode_timeout" },
        { "trigger": "Gtk.Settings.props.gtk_tooltip_browse_timeout", "contents": "Gtk.Settings.props.gtk_tooltip_browse_timeout" },
        { "trigger": "Gtk.Settings.props.gtk_tooltip_timeout", "contents": "Gtk.Settings.props.gtk_tooltip_timeout" },
        { "trigger": "Gtk.Settings.props.gtk_touchscreen_mode", "contents": "Gtk.Settings.props.gtk_touchscreen_mode" },
        { "trigger": "Gtk.Settings.props.gtk_visible_focus", "contents": "Gtk.Settings.props.gtk_visible_focus" },
        { "trigger": "Gtk.Settings.props.gtk_xft_antialias", "contents": "Gtk.Settings.props.gtk_xft_antialias" },
        { "trigger": "Gtk.Settings.props.gtk_xft_dpi", "contents": "Gtk.Settings.props.gtk_xft_dpi" },
        { "trigger": "Gtk.Settings.props.gtk_xft_hinting", "contents": "Gtk.Settings.props.gtk_xft_hinting" },
        { "trigger": "Gtk.Settings.props.gtk_xft_hintstyle", "contents": "Gtk.Settings.props.gtk_xft_hintstyle" },
        { "trigger": "Gtk.Settings.props.gtk_xft_rgba", "contents": "Gtk.Settings.props.gtk_xft_rgba" },
        { "trigger": "Gtk.SizeGroup", "contents": "Gtk.SizeGroup(*args, **kwargs)" },
        { "trigger": "Gtk.SizeGroup.new", "contents": "Gtk.SizeGroup.new(mode)" },
        { "trigger": "Gtk.SizeGroup.add_widget", "contents": "Gtk.SizeGroup.add_widget(widget)" },
        { "trigger": "Gtk.SizeGroup.get_ignore_hidden", "contents": "Gtk.SizeGroup.get_ignore_hidden()" },
        { "trigger": "Gtk.SizeGroup.get_mode", "contents": "Gtk.SizeGroup.get_mode()" },
        { "trigger": "Gtk.SizeGroup.get_widgets", "contents": "Gtk.SizeGroup.get_widgets()" },
        { "trigger": "Gtk.SizeGroup.remove_widget", "contents": "Gtk.SizeGroup.remove_widget(widget)" },
        { "trigger": "Gtk.SizeGroup.set_ignore_hidden", "contents": "Gtk.SizeGroup.set_ignore_hidden(ignore_hidden)" },
        { "trigger": "Gtk.SizeGroup.set_mode", "contents": "Gtk.SizeGroup.set_mode(mode)" },
        { "trigger": "Gtk.SizeGroup.props.ignore_hidden", "contents": "Gtk.SizeGroup.props.ignore_hidden" },
        { "trigger": "Gtk.SizeGroup.props.mode", "contents": "Gtk.SizeGroup.props.mode" },
        { "trigger": "Gtk.Socket", "contents": "Gtk.Socket(**kwargs)" },
        { "trigger": "Gtk.Socket.new", "contents": "Gtk.Socket.new()" },
        { "trigger": "Gtk.Socket.add_id", "contents": "Gtk.Socket.add_id(window)" },
        { "trigger": "Gtk.Socket.get_id", "contents": "Gtk.Socket.get_id()" },
        { "trigger": "Gtk.Socket.get_plug_window", "contents": "Gtk.Socket.get_plug_window()" },
        { "trigger": "Gtk.Socket.do_plug_added", "contents": "Gtk.Socket.do_plug_added()" },
        { "trigger": "Gtk.Socket.do_plug_removed", "contents": "Gtk.Socket.do_plug_removed()" },
        { "trigger": "Gtk.Socket.signals.plug_added", "contents": "Gtk.Socket.signals.plug_added(socket)" },
        { "trigger": "Gtk.Socket.signals.plug_removed", "contents": "Gtk.Socket.signals.plug_removed(socket)" },
        { "trigger": "Gtk.SpinButtonAccessible", "contents": "Gtk.SpinButtonAccessible(**kwargs)" },
        { "trigger": "Gtk.SpinButton", "contents": "Gtk.SpinButton(**kwargs)" },
        { "trigger": "Gtk.SpinButton.new", "contents": "Gtk.SpinButton.new(adjustment, climb_rate, digits)" },
        { "trigger": "Gtk.SpinButton.new_with_range", "contents": "Gtk.SpinButton.new_with_range(min, max, step)" },
        { "trigger": "Gtk.SpinButton.configure", "contents": "Gtk.SpinButton.configure(adjustment, climb_rate, digits)" },
        { "trigger": "Gtk.SpinButton.get_adjustment", "contents": "Gtk.SpinButton.get_adjustment()" },
        { "trigger": "Gtk.SpinButton.get_digits", "contents": "Gtk.SpinButton.get_digits()" },
        { "trigger": "Gtk.SpinButton.get_increments", "contents": "Gtk.SpinButton.get_increments()" },
        { "trigger": "Gtk.SpinButton.get_numeric", "contents": "Gtk.SpinButton.get_numeric()" },
        { "trigger": "Gtk.SpinButton.get_range", "contents": "Gtk.SpinButton.get_range()" },
        { "trigger": "Gtk.SpinButton.get_snap_to_ticks", "contents": "Gtk.SpinButton.get_snap_to_ticks()" },
        { "trigger": "Gtk.SpinButton.get_update_policy", "contents": "Gtk.SpinButton.get_update_policy()" },
        { "trigger": "Gtk.SpinButton.get_value", "contents": "Gtk.SpinButton.get_value()" },
        { "trigger": "Gtk.SpinButton.get_value_as_int", "contents": "Gtk.SpinButton.get_value_as_int()" },
        { "trigger": "Gtk.SpinButton.get_wrap", "contents": "Gtk.SpinButton.get_wrap()" },
        { "trigger": "Gtk.SpinButton.set_adjustment", "contents": "Gtk.SpinButton.set_adjustment(adjustment)" },
        { "trigger": "Gtk.SpinButton.set_digits", "contents": "Gtk.SpinButton.set_digits(digits)" },
        { "trigger": "Gtk.SpinButton.set_increments", "contents": "Gtk.SpinButton.set_increments(step, page)" },
        { "trigger": "Gtk.SpinButton.set_numeric", "contents": "Gtk.SpinButton.set_numeric(numeric)" },
        { "trigger": "Gtk.SpinButton.set_range", "contents": "Gtk.SpinButton.set_range(min, max)" },
        { "trigger": "Gtk.SpinButton.set_snap_to_ticks", "contents": "Gtk.SpinButton.set_snap_to_ticks(snap_to_ticks)" },
        { "trigger": "Gtk.SpinButton.set_update_policy", "contents": "Gtk.SpinButton.set_update_policy(policy)" },
        { "trigger": "Gtk.SpinButton.set_value", "contents": "Gtk.SpinButton.set_value(value)" },
        { "trigger": "Gtk.SpinButton.set_wrap", "contents": "Gtk.SpinButton.set_wrap(wrap)" },
        { "trigger": "Gtk.SpinButton.spin", "contents": "Gtk.SpinButton.spin(direction, increment)" },
        { "trigger": "Gtk.SpinButton.update", "contents": "Gtk.SpinButton.update()" },
        { "trigger": "Gtk.SpinButton.do_change_value", "contents": "Gtk.SpinButton.do_change_value(scroll)" },
        { "trigger": "Gtk.SpinButton.do_input", "contents": "Gtk.SpinButton.do_input(new_value)" },
        { "trigger": "Gtk.SpinButton.do_output", "contents": "Gtk.SpinButton.do_output()" },
        { "trigger": "Gtk.SpinButton.do_value_changed", "contents": "Gtk.SpinButton.do_value_changed()" },
        { "trigger": "Gtk.SpinButton.do_wrapped", "contents": "Gtk.SpinButton.do_wrapped()" },
        { "trigger": "Gtk.SpinButton.signals.change_value", "contents": "Gtk.SpinButton.signals.change_value(spin_button, scroll)" },
        { "trigger": "Gtk.SpinButton.signals.input", "contents": "Gtk.SpinButton.signals.input(spin_button)" },
        { "trigger": "Gtk.SpinButton.signals.output", "contents": "Gtk.SpinButton.signals.output(spin_button)" },
        { "trigger": "Gtk.SpinButton.signals.value_changed", "contents": "Gtk.SpinButton.signals.value_changed(spin_button)" },
        { "trigger": "Gtk.SpinButton.signals.wrapped", "contents": "Gtk.SpinButton.signals.wrapped(spin_button)" },
        { "trigger": "Gtk.SpinButton.props.adjustment", "contents": "Gtk.SpinButton.props.adjustment" },
        { "trigger": "Gtk.SpinButton.props.climb_rate", "contents": "Gtk.SpinButton.props.climb_rate" },
        { "trigger": "Gtk.SpinButton.props.digits", "contents": "Gtk.SpinButton.props.digits" },
        { "trigger": "Gtk.SpinButton.props.numeric", "contents": "Gtk.SpinButton.props.numeric" },
        { "trigger": "Gtk.SpinButton.props.snap_to_ticks", "contents": "Gtk.SpinButton.props.snap_to_ticks" },
        { "trigger": "Gtk.SpinButton.props.update_policy", "contents": "Gtk.SpinButton.props.update_policy" },
        { "trigger": "Gtk.SpinButton.props.value", "contents": "Gtk.SpinButton.props.value" },
        { "trigger": "Gtk.SpinButton.props.wrap", "contents": "Gtk.SpinButton.props.wrap" },
        { "trigger": "Gtk.SpinnerAccessible", "contents": "Gtk.SpinnerAccessible(**kwargs)" },
        { "trigger": "Gtk.Spinner", "contents": "Gtk.Spinner(**kwargs)" },
        { "trigger": "Gtk.Spinner.new", "contents": "Gtk.Spinner.new()" },
        { "trigger": "Gtk.Spinner.start", "contents": "Gtk.Spinner.start()" },
        { "trigger": "Gtk.Spinner.stop", "contents": "Gtk.Spinner.stop()" },
        { "trigger": "Gtk.Spinner.props.active", "contents": "Gtk.Spinner.props.active" },
        { "trigger": "Gtk.Stack", "contents": "Gtk.Stack(**kwargs)" },
        { "trigger": "Gtk.Stack.new", "contents": "Gtk.Stack.new()" },
        { "trigger": "Gtk.Stack.add_named", "contents": "Gtk.Stack.add_named(child, name)" },
        { "trigger": "Gtk.Stack.add_titled", "contents": "Gtk.Stack.add_titled(child, name, title)" },
        { "trigger": "Gtk.Stack.get_child_by_name", "contents": "Gtk.Stack.get_child_by_name(name)" },
        { "trigger": "Gtk.Stack.get_hhomogeneous", "contents": "Gtk.Stack.get_hhomogeneous()" },
        { "trigger": "Gtk.Stack.get_homogeneous", "contents": "Gtk.Stack.get_homogeneous()" },
        { "trigger": "Gtk.Stack.get_interpolate_size", "contents": "Gtk.Stack.get_interpolate_size()" },
        { "trigger": "Gtk.Stack.get_transition_duration", "contents": "Gtk.Stack.get_transition_duration()" },
        { "trigger": "Gtk.Stack.get_transition_running", "contents": "Gtk.Stack.get_transition_running()" },
        { "trigger": "Gtk.Stack.get_transition_type", "contents": "Gtk.Stack.get_transition_type()" },
        { "trigger": "Gtk.Stack.get_vhomogeneous", "contents": "Gtk.Stack.get_vhomogeneous()" },
        { "trigger": "Gtk.Stack.get_visible_child", "contents": "Gtk.Stack.get_visible_child()" },
        { "trigger": "Gtk.Stack.get_visible_child_name", "contents": "Gtk.Stack.get_visible_child_name()" },
        { "trigger": "Gtk.Stack.set_hhomogeneous", "contents": "Gtk.Stack.set_hhomogeneous(hhomogeneous)" },
        { "trigger": "Gtk.Stack.set_homogeneous", "contents": "Gtk.Stack.set_homogeneous(homogeneous)" },
        { "trigger": "Gtk.Stack.set_interpolate_size", "contents": "Gtk.Stack.set_interpolate_size(interpolate_size)" },
        { "trigger": "Gtk.Stack.set_transition_duration", "contents": "Gtk.Stack.set_transition_duration(duration)" },
        { "trigger": "Gtk.Stack.set_transition_type", "contents": "Gtk.Stack.set_transition_type(transition)" },
        { "trigger": "Gtk.Stack.set_vhomogeneous", "contents": "Gtk.Stack.set_vhomogeneous(vhomogeneous)" },
        { "trigger": "Gtk.Stack.set_visible_child", "contents": "Gtk.Stack.set_visible_child(child)" },
        { "trigger": "Gtk.Stack.set_visible_child_full", "contents": "Gtk.Stack.set_visible_child_full(name, transition)" },
        { "trigger": "Gtk.Stack.set_visible_child_name", "contents": "Gtk.Stack.set_visible_child_name(name)" },
        { "trigger": "Gtk.Stack.props.hhomogeneous", "contents": "Gtk.Stack.props.hhomogeneous" },
        { "trigger": "Gtk.Stack.props.homogeneous", "contents": "Gtk.Stack.props.homogeneous" },
        { "trigger": "Gtk.Stack.props.interpolate_size", "contents": "Gtk.Stack.props.interpolate_size" },
        { "trigger": "Gtk.Stack.props.transition_duration", "contents": "Gtk.Stack.props.transition_duration" },
        { "trigger": "Gtk.Stack.props.transition_running", "contents": "Gtk.Stack.props.transition_running" },
        { "trigger": "Gtk.Stack.props.transition_type", "contents": "Gtk.Stack.props.transition_type" },
        { "trigger": "Gtk.Stack.props.vhomogeneous", "contents": "Gtk.Stack.props.vhomogeneous" },
        { "trigger": "Gtk.Stack.props.visible_child", "contents": "Gtk.Stack.props.visible_child" },
        { "trigger": "Gtk.Stack.props.visible_child_name", "contents": "Gtk.Stack.props.visible_child_name" },
        { "trigger": "Gtk.StackSidebar", "contents": "Gtk.StackSidebar(**kwargs)" },
        { "trigger": "Gtk.StackSidebar.new", "contents": "Gtk.StackSidebar.new()" },
        { "trigger": "Gtk.StackSidebar.get_stack", "contents": "Gtk.StackSidebar.get_stack()" },
        { "trigger": "Gtk.StackSidebar.set_stack", "contents": "Gtk.StackSidebar.set_stack(stack)" },
        { "trigger": "Gtk.StackSidebar.props.stack", "contents": "Gtk.StackSidebar.props.stack" },
        { "trigger": "Gtk.StackSwitcher", "contents": "Gtk.StackSwitcher(*args, **kwargs)" },
        { "trigger": "Gtk.StackSwitcher.new", "contents": "Gtk.StackSwitcher.new()" },
        { "trigger": "Gtk.StackSwitcher.get_stack", "contents": "Gtk.StackSwitcher.get_stack()" },
        { "trigger": "Gtk.StackSwitcher.set_stack", "contents": "Gtk.StackSwitcher.set_stack(stack)" },
        { "trigger": "Gtk.StackSwitcher.props.stack", "contents": "Gtk.StackSwitcher.props.stack" },
        { "trigger": "Gtk.StatusbarAccessible", "contents": "Gtk.StatusbarAccessible(**kwargs)" },
        { "trigger": "Gtk.Statusbar", "contents": "Gtk.Statusbar(*args, **kwargs)" },
        { "trigger": "Gtk.Statusbar.new", "contents": "Gtk.Statusbar.new()" },
        { "trigger": "Gtk.Statusbar.get_context_id", "contents": "Gtk.Statusbar.get_context_id(context_description)" },
        { "trigger": "Gtk.Statusbar.get_message_area", "contents": "Gtk.Statusbar.get_message_area()" },
        { "trigger": "Gtk.Statusbar.pop", "contents": "Gtk.Statusbar.pop(context_id)" },
        { "trigger": "Gtk.Statusbar.push", "contents": "Gtk.Statusbar.push(context_id, text)" },
        { "trigger": "Gtk.Statusbar.remove", "contents": "Gtk.Statusbar.remove(context_id, message_id)" },
        { "trigger": "Gtk.Statusbar.remove_all", "contents": "Gtk.Statusbar.remove_all(context_id)" },
        { "trigger": "Gtk.Statusbar.do_text_popped", "contents": "Gtk.Statusbar.do_text_popped(context_id, text)" },
        { "trigger": "Gtk.Statusbar.do_text_pushed", "contents": "Gtk.Statusbar.do_text_pushed(context_id, text)" },
        { "trigger": "Gtk.Statusbar.signals.text_popped", "contents": "Gtk.Statusbar.signals.text_popped(statusbar, context_id, text)" },
        { "trigger": "Gtk.Statusbar.signals.text_pushed", "contents": "Gtk.Statusbar.signals.text_pushed(statusbar, context_id, text)" },
        { "trigger": "Gtk.StatusIcon", "contents": "Gtk.StatusIcon(**kwargs)" },
        { "trigger": "Gtk.StatusIcon.new", "contents": "Gtk.StatusIcon.new()" },
        { "trigger": "Gtk.StatusIcon.new_from_file", "contents": "Gtk.StatusIcon.new_from_file(filename)" },
        { "trigger": "Gtk.StatusIcon.new_from_gicon", "contents": "Gtk.StatusIcon.new_from_gicon(icon)" },
        { "trigger": "Gtk.StatusIcon.new_from_icon_name", "contents": "Gtk.StatusIcon.new_from_icon_name(icon_name)" },
        { "trigger": "Gtk.StatusIcon.new_from_pixbuf", "contents": "Gtk.StatusIcon.new_from_pixbuf(pixbuf)" },
        { "trigger": "Gtk.StatusIcon.new_from_stock", "contents": "Gtk.StatusIcon.new_from_stock(stock_id)" },
        { "trigger": "Gtk.StatusIcon.position_menu", "contents": "Gtk.StatusIcon.position_menu(menu, x, y, user_data)" },
        { "trigger": "Gtk.StatusIcon.get_geometry", "contents": "Gtk.StatusIcon.get_geometry()" },
        { "trigger": "Gtk.StatusIcon.get_gicon", "contents": "Gtk.StatusIcon.get_gicon()" },
        { "trigger": "Gtk.StatusIcon.get_has_tooltip", "contents": "Gtk.StatusIcon.get_has_tooltip()" },
        { "trigger": "Gtk.StatusIcon.get_icon_name", "contents": "Gtk.StatusIcon.get_icon_name()" },
        { "trigger": "Gtk.StatusIcon.get_pixbuf", "contents": "Gtk.StatusIcon.get_pixbuf()" },
        { "trigger": "Gtk.StatusIcon.get_screen", "contents": "Gtk.StatusIcon.get_screen()" },
        { "trigger": "Gtk.StatusIcon.get_size", "contents": "Gtk.StatusIcon.get_size()" },
        { "trigger": "Gtk.StatusIcon.get_stock", "contents": "Gtk.StatusIcon.get_stock()" },
        { "trigger": "Gtk.StatusIcon.get_storage_type", "contents": "Gtk.StatusIcon.get_storage_type()" },
        { "trigger": "Gtk.StatusIcon.get_title", "contents": "Gtk.StatusIcon.get_title()" },
        { "trigger": "Gtk.StatusIcon.get_tooltip_markup", "contents": "Gtk.StatusIcon.get_tooltip_markup()" },
        { "trigger": "Gtk.StatusIcon.get_tooltip_text", "contents": "Gtk.StatusIcon.get_tooltip_text()" },
        { "trigger": "Gtk.StatusIcon.get_visible", "contents": "Gtk.StatusIcon.get_visible()" },
        { "trigger": "Gtk.StatusIcon.get_x11_window_id", "contents": "Gtk.StatusIcon.get_x11_window_id()" },
        { "trigger": "Gtk.StatusIcon.is_embedded", "contents": "Gtk.StatusIcon.is_embedded()" },
        { "trigger": "Gtk.StatusIcon.set_from_file", "contents": "Gtk.StatusIcon.set_from_file(filename)" },
        { "trigger": "Gtk.StatusIcon.set_from_gicon", "contents": "Gtk.StatusIcon.set_from_gicon(icon)" },
        { "trigger": "Gtk.StatusIcon.set_from_icon_name", "contents": "Gtk.StatusIcon.set_from_icon_name(icon_name)" },
        { "trigger": "Gtk.StatusIcon.set_from_pixbuf", "contents": "Gtk.StatusIcon.set_from_pixbuf(pixbuf)" },
        { "trigger": "Gtk.StatusIcon.set_from_stock", "contents": "Gtk.StatusIcon.set_from_stock(stock_id)" },
        { "trigger": "Gtk.StatusIcon.set_has_tooltip", "contents": "Gtk.StatusIcon.set_has_tooltip(has_tooltip)" },
        { "trigger": "Gtk.StatusIcon.set_name", "contents": "Gtk.StatusIcon.set_name(name)" },
        { "trigger": "Gtk.StatusIcon.set_screen", "contents": "Gtk.StatusIcon.set_screen(screen)" },
        { "trigger": "Gtk.StatusIcon.set_title", "contents": "Gtk.StatusIcon.set_title(title)" },
        { "trigger": "Gtk.StatusIcon.set_tooltip_markup", "contents": "Gtk.StatusIcon.set_tooltip_markup(markup)" },
        { "trigger": "Gtk.StatusIcon.set_tooltip_text", "contents": "Gtk.StatusIcon.set_tooltip_text(text)" },
        { "trigger": "Gtk.StatusIcon.set_visible", "contents": "Gtk.StatusIcon.set_visible(visible)" },
        { "trigger": "Gtk.StatusIcon.do_activate", "contents": "Gtk.StatusIcon.do_activate()" },
        { "trigger": "Gtk.StatusIcon.do_button_press_event", "contents": "Gtk.StatusIcon.do_button_press_event(event)" },
        { "trigger": "Gtk.StatusIcon.do_button_release_event", "contents": "Gtk.StatusIcon.do_button_release_event(event)" },
        { "trigger": "Gtk.StatusIcon.do_popup_menu", "contents": "Gtk.StatusIcon.do_popup_menu(button, activate_time)" },
        { "trigger": "Gtk.StatusIcon.do_query_tooltip", "contents": "Gtk.StatusIcon.do_query_tooltip(x, y, keyboard_mode, tooltip)" },
        { "trigger": "Gtk.StatusIcon.do_scroll_event", "contents": "Gtk.StatusIcon.do_scroll_event(event)" },
        { "trigger": "Gtk.StatusIcon.do_size_changed", "contents": "Gtk.StatusIcon.do_size_changed(size)" },
        { "trigger": "Gtk.StatusIcon.signals.activate", "contents": "Gtk.StatusIcon.signals.activate(status_icon)" },
        { "trigger": "Gtk.StatusIcon.signals.button_press_event", "contents": "Gtk.StatusIcon.signals.button_press_event(status_icon, event)" },
        { "trigger": "Gtk.StatusIcon.signals.button_release_event", "contents": "Gtk.StatusIcon.signals.button_release_event(status_icon, event)" },
        { "trigger": "Gtk.StatusIcon.signals.popup_menu", "contents": "Gtk.StatusIcon.signals.popup_menu(status_icon, button, activate_time)" },
        { "trigger": "Gtk.StatusIcon.signals.query_tooltip", "contents": "Gtk.StatusIcon.signals.query_tooltip(status_icon, x, y, keyboard_mode, tooltip)" },
        { "trigger": "Gtk.StatusIcon.signals.scroll_event", "contents": "Gtk.StatusIcon.signals.scroll_event(status_icon, event)" },
        { "trigger": "Gtk.StatusIcon.signals.size_changed", "contents": "Gtk.StatusIcon.signals.size_changed(status_icon, size)" },
        { "trigger": "Gtk.StatusIcon.props.embedded", "contents": "Gtk.StatusIcon.props.embedded" },
        { "trigger": "Gtk.StatusIcon.props.file", "contents": "Gtk.StatusIcon.props.file" },
        { "trigger": "Gtk.StatusIcon.props.gicon", "contents": "Gtk.StatusIcon.props.gicon" },
        { "trigger": "Gtk.StatusIcon.props.has_tooltip", "contents": "Gtk.StatusIcon.props.has_tooltip" },
        { "trigger": "Gtk.StatusIcon.props.icon_name", "contents": "Gtk.StatusIcon.props.icon_name" },
        { "trigger": "Gtk.StatusIcon.props.orientation", "contents": "Gtk.StatusIcon.props.orientation" },
        { "trigger": "Gtk.StatusIcon.props.pixbuf", "contents": "Gtk.StatusIcon.props.pixbuf" },
        { "trigger": "Gtk.StatusIcon.props.screen", "contents": "Gtk.StatusIcon.props.screen" },
        { "trigger": "Gtk.StatusIcon.props.size", "contents": "Gtk.StatusIcon.props.size" },
        { "trigger": "Gtk.StatusIcon.props.stock", "contents": "Gtk.StatusIcon.props.stock" },
        { "trigger": "Gtk.StatusIcon.props.storage_type", "contents": "Gtk.StatusIcon.props.storage_type" },
        { "trigger": "Gtk.StatusIcon.props.title", "contents": "Gtk.StatusIcon.props.title" },
        { "trigger": "Gtk.StatusIcon.props.tooltip_markup", "contents": "Gtk.StatusIcon.props.tooltip_markup" },
        { "trigger": "Gtk.StatusIcon.props.tooltip_text", "contents": "Gtk.StatusIcon.props.tooltip_text" },
        { "trigger": "Gtk.StatusIcon.props.visible", "contents": "Gtk.StatusIcon.props.visible" },
        { "trigger": "Gtk.StyleContext", "contents": "Gtk.StyleContext(**kwargs)" },
        { "trigger": "Gtk.StyleContext.add_provider_for_screen", "contents": "Gtk.StyleContext.add_provider_for_screen(screen, provider, priority)" },
        { "trigger": "Gtk.StyleContext.new", "contents": "Gtk.StyleContext.new()" },
        { "trigger": "Gtk.StyleContext.remove_provider_for_screen", "contents": "Gtk.StyleContext.remove_provider_for_screen(screen, provider)" },
        { "trigger": "Gtk.StyleContext.reset_widgets", "contents": "Gtk.StyleContext.reset_widgets(screen)" },
        { "trigger": "Gtk.StyleContext.add_class", "contents": "Gtk.StyleContext.add_class(class_name)" },
        { "trigger": "Gtk.StyleContext.add_provider", "contents": "Gtk.StyleContext.add_provider(provider, priority)" },
        { "trigger": "Gtk.StyleContext.add_region", "contents": "Gtk.StyleContext.add_region(region_name, flags)" },
        { "trigger": "Gtk.StyleContext.cancel_animations", "contents": "Gtk.StyleContext.cancel_animations(region_id)" },
        { "trigger": "Gtk.StyleContext.get_background_color", "contents": "Gtk.StyleContext.get_background_color(state)" },
        { "trigger": "Gtk.StyleContext.get_border", "contents": "Gtk.StyleContext.get_border(state)" },
        { "trigger": "Gtk.StyleContext.get_border_color", "contents": "Gtk.StyleContext.get_border_color(state)" },
        { "trigger": "Gtk.StyleContext.get_color", "contents": "Gtk.StyleContext.get_color(state)" },
        { "trigger": "Gtk.StyleContext.get_direction", "contents": "Gtk.StyleContext.get_direction()" },
        { "trigger": "Gtk.StyleContext.get_font", "contents": "Gtk.StyleContext.get_font(state)" },
        { "trigger": "Gtk.StyleContext.get_frame_clock", "contents": "Gtk.StyleContext.get_frame_clock()" },
        { "trigger": "Gtk.StyleContext.get_junction_sides", "contents": "Gtk.StyleContext.get_junction_sides()" },
        { "trigger": "Gtk.StyleContext.get_margin", "contents": "Gtk.StyleContext.get_margin(state)" },
        { "trigger": "Gtk.StyleContext.get_padding", "contents": "Gtk.StyleContext.get_padding(state)" },
        { "trigger": "Gtk.StyleContext.get_parent", "contents": "Gtk.StyleContext.get_parent()" },
        { "trigger": "Gtk.StyleContext.get_path", "contents": "Gtk.StyleContext.get_path()" },
        { "trigger": "Gtk.StyleContext.get_property", "contents": "Gtk.StyleContext.get_property(property, state)" },
        { "trigger": "Gtk.StyleContext.get_scale", "contents": "Gtk.StyleContext.get_scale()" },
        { "trigger": "Gtk.StyleContext.get_screen", "contents": "Gtk.StyleContext.get_screen()" },
        { "trigger": "Gtk.StyleContext.get_section", "contents": "Gtk.StyleContext.get_section(property)" },
        { "trigger": "Gtk.StyleContext.get_state", "contents": "Gtk.StyleContext.get_state()" },
        { "trigger": "Gtk.StyleContext.get_style_property", "contents": "Gtk.StyleContext.get_style_property(property_name, value)" },
        { "trigger": "Gtk.StyleContext.has_class", "contents": "Gtk.StyleContext.has_class(class_name)" },
        { "trigger": "Gtk.StyleContext.has_region", "contents": "Gtk.StyleContext.has_region(region_name)" },
        { "trigger": "Gtk.StyleContext.invalidate", "contents": "Gtk.StyleContext.invalidate()" },
        { "trigger": "Gtk.StyleContext.list_classes", "contents": "Gtk.StyleContext.list_classes()" },
        { "trigger": "Gtk.StyleContext.list_regions", "contents": "Gtk.StyleContext.list_regions()" },
        { "trigger": "Gtk.StyleContext.lookup_color", "contents": "Gtk.StyleContext.lookup_color(color_name)" },
        { "trigger": "Gtk.StyleContext.lookup_icon_set", "contents": "Gtk.StyleContext.lookup_icon_set(stock_id)" },
        { "trigger": "Gtk.StyleContext.notify_state_change", "contents": "Gtk.StyleContext.notify_state_change(window, region_id, state, state_value)" },
        { "trigger": "Gtk.StyleContext.pop_animatable_region", "contents": "Gtk.StyleContext.pop_animatable_region()" },
        { "trigger": "Gtk.StyleContext.push_animatable_region", "contents": "Gtk.StyleContext.push_animatable_region(region_id)" },
        { "trigger": "Gtk.StyleContext.remove_class", "contents": "Gtk.StyleContext.remove_class(class_name)" },
        { "trigger": "Gtk.StyleContext.remove_provider", "contents": "Gtk.StyleContext.remove_provider(provider)" },
        { "trigger": "Gtk.StyleContext.remove_region", "contents": "Gtk.StyleContext.remove_region(region_name)" },
        { "trigger": "Gtk.StyleContext.restore", "contents": "Gtk.StyleContext.restore()" },
        { "trigger": "Gtk.StyleContext.save", "contents": "Gtk.StyleContext.save()" },
        { "trigger": "Gtk.StyleContext.scroll_animations", "contents": "Gtk.StyleContext.scroll_animations(window, dx, dy)" },
        { "trigger": "Gtk.StyleContext.set_background", "contents": "Gtk.StyleContext.set_background(window)" },
        { "trigger": "Gtk.StyleContext.set_direction", "contents": "Gtk.StyleContext.set_direction(direction)" },
        { "trigger": "Gtk.StyleContext.set_frame_clock", "contents": "Gtk.StyleContext.set_frame_clock(frame_clock)" },
        { "trigger": "Gtk.StyleContext.set_junction_sides", "contents": "Gtk.StyleContext.set_junction_sides(sides)" },
        { "trigger": "Gtk.StyleContext.set_parent", "contents": "Gtk.StyleContext.set_parent(parent)" },
        { "trigger": "Gtk.StyleContext.set_path", "contents": "Gtk.StyleContext.set_path(path)" },
        { "trigger": "Gtk.StyleContext.set_scale", "contents": "Gtk.StyleContext.set_scale(scale)" },
        { "trigger": "Gtk.StyleContext.set_screen", "contents": "Gtk.StyleContext.set_screen(screen)" },
        { "trigger": "Gtk.StyleContext.set_state", "contents": "Gtk.StyleContext.set_state(flags)" },
        { "trigger": "Gtk.StyleContext.state_is_running", "contents": "Gtk.StyleContext.state_is_running(state)" },
        { "trigger": "Gtk.StyleContext.do_changed", "contents": "Gtk.StyleContext.do_changed()" },
        { "trigger": "Gtk.StyleContext.signals.changed", "contents": "Gtk.StyleContext.signals.changed(style_context)" },
        { "trigger": "Gtk.StyleContext.props.direction", "contents": "Gtk.StyleContext.props.direction" },
        { "trigger": "Gtk.StyleContext.props.paint_clock", "contents": "Gtk.StyleContext.props.paint_clock" },
        { "trigger": "Gtk.StyleContext.props.parent", "contents": "Gtk.StyleContext.props.parent" },
        { "trigger": "Gtk.StyleContext.props.screen", "contents": "Gtk.StyleContext.props.screen" },
        { "trigger": "Gtk.Style", "contents": "Gtk.Style(**kwargs)" },
        { "trigger": "Gtk.Style.new", "contents": "Gtk.Style.new()" },
        { "trigger": "Gtk.Style.apply_default_background", "contents": "Gtk.Style.apply_default_background(cr, window, state_type, x, y, width, height)" },
        { "trigger": "Gtk.Style.copy", "contents": "Gtk.Style.copy()" },
        { "trigger": "Gtk.Style.detach", "contents": "Gtk.Style.detach()" },
        { "trigger": "Gtk.Style.get_style_property", "contents": "Gtk.Style.get_style_property(widget_type, property_name)" },
        { "trigger": "Gtk.Style.has_context", "contents": "Gtk.Style.has_context()" },
        { "trigger": "Gtk.Style.lookup_color", "contents": "Gtk.Style.lookup_color(color_name)" },
        { "trigger": "Gtk.Style.lookup_icon_set", "contents": "Gtk.Style.lookup_icon_set(stock_id)" },
        { "trigger": "Gtk.Style.render_icon", "contents": "Gtk.Style.render_icon(source, direction, state, size, widget, detail)" },
        { "trigger": "Gtk.Style.set_background", "contents": "Gtk.Style.set_background(window, state_type)" },
        { "trigger": "Gtk.Style.do_copy", "contents": "Gtk.Style.do_copy(src)" },
        { "trigger": "Gtk.Style.do_draw_arrow", "contents": "Gtk.Style.do_draw_arrow(cr, state_type, shadow_type, widget, detail, arrow_type, fill, x, y, width, height)" },
        { "trigger": "Gtk.Style.do_draw_box", "contents": "Gtk.Style.do_draw_box(cr, state_type, shadow_type, widget, detail, x, y, width, height)" },
        { "trigger": "Gtk.Style.do_draw_box_gap", "contents": "Gtk.Style.do_draw_box_gap(cr, state_type, shadow_type, widget, detail, x, y, width, height, gap_side, gap_x, gap_width)" },
        { "trigger": "Gtk.Style.do_draw_check", "contents": "Gtk.Style.do_draw_check(cr, state_type, shadow_type, widget, detail, x, y, width, height)" },
        { "trigger": "Gtk.Style.do_draw_diamond", "contents": "Gtk.Style.do_draw_diamond(cr, state_type, shadow_type, widget, detail, x, y, width, height)" },
        { "trigger": "Gtk.Style.do_draw_expander", "contents": "Gtk.Style.do_draw_expander(cr, state_type, widget, detail, x, y, expander_style)" },
        { "trigger": "Gtk.Style.do_draw_extension", "contents": "Gtk.Style.do_draw_extension(cr, state_type, shadow_type, widget, detail, x, y, width, height, gap_side)" },
        { "trigger": "Gtk.Style.do_draw_flat_box", "contents": "Gtk.Style.do_draw_flat_box(cr, state_type, shadow_type, widget, detail, x, y, width, height)" },
        { "trigger": "Gtk.Style.do_draw_focus", "contents": "Gtk.Style.do_draw_focus(cr, state_type, widget, detail, x, y, width, height)" },
        { "trigger": "Gtk.Style.do_draw_handle", "contents": "Gtk.Style.do_draw_handle(cr, state_type, shadow_type, widget, detail, x, y, width, height, orientation)" },
        { "trigger": "Gtk.Style.do_draw_hline", "contents": "Gtk.Style.do_draw_hline(cr, state_type, widget, detail, x1, x2, y)" },
        { "trigger": "Gtk.Style.do_draw_layout", "contents": "Gtk.Style.do_draw_layout(cr, state_type, use_text, widget, detail, x, y, layout)" },
        { "trigger": "Gtk.Style.do_draw_option", "contents": "Gtk.Style.do_draw_option(cr, state_type, shadow_type, widget, detail, x, y, width, height)" },
        { "trigger": "Gtk.Style.do_draw_resize_grip", "contents": "Gtk.Style.do_draw_resize_grip(cr, state_type, widget, detail, edge, x, y, width, height)" },
        { "trigger": "Gtk.Style.do_draw_shadow", "contents": "Gtk.Style.do_draw_shadow(cr, state_type, shadow_type, widget, detail, x, y, width, height)" },
        { "trigger": "Gtk.Style.do_draw_shadow_gap", "contents": "Gtk.Style.do_draw_shadow_gap(cr, state_type, shadow_type, widget, detail, x, y, width, height, gap_side, gap_x, gap_width)" },
        { "trigger": "Gtk.Style.do_draw_slider", "contents": "Gtk.Style.do_draw_slider(cr, state_type, shadow_type, widget, detail, x, y, width, height, orientation)" },
        { "trigger": "Gtk.Style.do_draw_spinner", "contents": "Gtk.Style.do_draw_spinner(cr, state_type, widget, detail, step, x, y, width, height)" },
        { "trigger": "Gtk.Style.do_draw_tab", "contents": "Gtk.Style.do_draw_tab(cr, state_type, shadow_type, widget, detail, x, y, width, height)" },
        { "trigger": "Gtk.Style.do_draw_vline", "contents": "Gtk.Style.do_draw_vline(cr, state_type, widget, detail, y1_, y2_, x)" },
        { "trigger": "Gtk.Style.do_init_from_rc", "contents": "Gtk.Style.do_init_from_rc(rc_style)" },
        { "trigger": "Gtk.Style.do_realize", "contents": "Gtk.Style.do_realize()" },
        { "trigger": "Gtk.Style.do_render_icon", "contents": "Gtk.Style.do_render_icon(source, direction, state, size, widget, detail)" },
        { "trigger": "Gtk.Style.do_set_background", "contents": "Gtk.Style.do_set_background(window, state_type)" },
        { "trigger": "Gtk.Style.do_unrealize", "contents": "Gtk.Style.do_unrealize()" },
        { "trigger": "Gtk.Style.signals.realize", "contents": "Gtk.Style.signals.realize(style)" },
        { "trigger": "Gtk.Style.signals.unrealize", "contents": "Gtk.Style.signals.unrealize(style)" },
        { "trigger": "Gtk.Style.props.context", "contents": "Gtk.Style.props.context" },
        { "trigger": "Gtk.StyleProperties", "contents": "Gtk.StyleProperties(**kwargs)" },
        { "trigger": "Gtk.StyleProperties.new", "contents": "Gtk.StyleProperties.new()" },
        { "trigger": "Gtk.StyleProperties.clear", "contents": "Gtk.StyleProperties.clear()" },
        { "trigger": "Gtk.StyleProperties.get_property", "contents": "Gtk.StyleProperties.get_property(property, state)" },
        { "trigger": "Gtk.StyleProperties.lookup_color", "contents": "Gtk.StyleProperties.lookup_color(name)" },
        { "trigger": "Gtk.StyleProperties.map_color", "contents": "Gtk.StyleProperties.map_color(name, color)" },
        { "trigger": "Gtk.StyleProperties.merge", "contents": "Gtk.StyleProperties.merge(props_to_merge, replace)" },
        { "trigger": "Gtk.StyleProperties.set_property", "contents": "Gtk.StyleProperties.set_property(property, state, value)" },
        { "trigger": "Gtk.StyleProperties.unset_property", "contents": "Gtk.StyleProperties.unset_property(property, state)" },
        { "trigger": "Gtk.SwitchAccessible", "contents": "Gtk.SwitchAccessible(**kwargs)" },
        { "trigger": "Gtk.Switch", "contents": "Gtk.Switch(**kwargs)" },
        { "trigger": "Gtk.Switch.new", "contents": "Gtk.Switch.new()" },
        { "trigger": "Gtk.Switch.get_active", "contents": "Gtk.Switch.get_active()" },
        { "trigger": "Gtk.Switch.get_state", "contents": "Gtk.Switch.get_state()" },
        { "trigger": "Gtk.Switch.set_active", "contents": "Gtk.Switch.set_active(is_active)" },
        { "trigger": "Gtk.Switch.set_state", "contents": "Gtk.Switch.set_state(state)" },
        { "trigger": "Gtk.Switch.do_activate", "contents": "Gtk.Switch.do_activate()" },
        { "trigger": "Gtk.Switch.do_state_set", "contents": "Gtk.Switch.do_state_set(state)" },
        { "trigger": "Gtk.Switch.signals.activate", "contents": "Gtk.Switch.signals.activate(switch)" },
        { "trigger": "Gtk.Switch.signals.state_set", "contents": "Gtk.Switch.signals.state_set(switch, state)" },
        { "trigger": "Gtk.Switch.props.active", "contents": "Gtk.Switch.props.active" },
        { "trigger": "Gtk.Switch.props.state", "contents": "Gtk.Switch.props.state" },
        { "trigger": "Gtk.Table", "contents": "Gtk.Table(*args, **kwargs)" },
        { "trigger": "Gtk.Table.new", "contents": "Gtk.Table.new(rows, columns, homogeneous)" },
        { "trigger": "Gtk.Table.attach", "contents": "Gtk.Table.attach(child, left_attach, right_attach, top_attach, bottom_attach, xoptions, yoptions, xpadding, ypadding)" },
        { "trigger": "Gtk.Table.attach_defaults", "contents": "Gtk.Table.attach_defaults(widget, left_attach, right_attach, top_attach, bottom_attach)" },
        { "trigger": "Gtk.Table.get_col_spacing", "contents": "Gtk.Table.get_col_spacing(column)" },
        { "trigger": "Gtk.Table.get_default_col_spacing", "contents": "Gtk.Table.get_default_col_spacing()" },
        { "trigger": "Gtk.Table.get_default_row_spacing", "contents": "Gtk.Table.get_default_row_spacing()" },
        { "trigger": "Gtk.Table.get_homogeneous", "contents": "Gtk.Table.get_homogeneous()" },
        { "trigger": "Gtk.Table.get_row_spacing", "contents": "Gtk.Table.get_row_spacing(row)" },
        { "trigger": "Gtk.Table.get_size", "contents": "Gtk.Table.get_size()" },
        { "trigger": "Gtk.Table.resize", "contents": "Gtk.Table.resize(rows, columns)" },
        { "trigger": "Gtk.Table.set_col_spacing", "contents": "Gtk.Table.set_col_spacing(column, spacing)" },
        { "trigger": "Gtk.Table.set_col_spacings", "contents": "Gtk.Table.set_col_spacings(spacing)" },
        { "trigger": "Gtk.Table.set_homogeneous", "contents": "Gtk.Table.set_homogeneous(homogeneous)" },
        { "trigger": "Gtk.Table.set_row_spacing", "contents": "Gtk.Table.set_row_spacing(row, spacing)" },
        { "trigger": "Gtk.Table.set_row_spacings", "contents": "Gtk.Table.set_row_spacings(spacing)" },
        { "trigger": "Gtk.Table.props.column_spacing", "contents": "Gtk.Table.props.column_spacing" },
        { "trigger": "Gtk.Table.props.homogeneous", "contents": "Gtk.Table.props.homogeneous" },
        { "trigger": "Gtk.Table.props.n_columns", "contents": "Gtk.Table.props.n_columns" },
        { "trigger": "Gtk.Table.props.n_rows", "contents": "Gtk.Table.props.n_rows" },
        { "trigger": "Gtk.Table.props.row_spacing", "contents": "Gtk.Table.props.row_spacing" },
        { "trigger": "Gtk.TearoffMenuItem", "contents": "Gtk.TearoffMenuItem(*args, **kwargs)" },
        { "trigger": "Gtk.TearoffMenuItem.new", "contents": "Gtk.TearoffMenuItem.new()" },
        { "trigger": "Gtk.TextBuffer", "contents": "Gtk.TextBuffer(**kwargs)" },
        { "trigger": "Gtk.TextBuffer.new", "contents": "Gtk.TextBuffer.new(table)" },
        { "trigger": "Gtk.TextBuffer.add_mark", "contents": "Gtk.TextBuffer.add_mark(mark, where)" },
        { "trigger": "Gtk.TextBuffer.add_selection_clipboard", "contents": "Gtk.TextBuffer.add_selection_clipboard(clipboard)" },
        { "trigger": "Gtk.TextBuffer.apply_tag", "contents": "Gtk.TextBuffer.apply_tag(tag, start, end)" },
        { "trigger": "Gtk.TextBuffer.apply_tag_by_name", "contents": "Gtk.TextBuffer.apply_tag_by_name(name, start, end)" },
        { "trigger": "Gtk.TextBuffer.backspace", "contents": "Gtk.TextBuffer.backspace(iter, interactive, default_editable)" },
        { "trigger": "Gtk.TextBuffer.begin_user_action", "contents": "Gtk.TextBuffer.begin_user_action()" },
        { "trigger": "Gtk.TextBuffer.copy_clipboard", "contents": "Gtk.TextBuffer.copy_clipboard(clipboard)" },
        { "trigger": "Gtk.TextBuffer.create_child_anchor", "contents": "Gtk.TextBuffer.create_child_anchor(iter)" },
        { "trigger": "Gtk.TextBuffer.create_mark", "contents": "Gtk.TextBuffer.create_mark(mark_name, where, left_gravity)" },
        { "trigger": "Gtk.TextBuffer.create_tag", "contents": "Gtk.TextBuffer.create_tag(tag_name=None, **properties)" },
        { "trigger": "Gtk.TextBuffer.cut_clipboard", "contents": "Gtk.TextBuffer.cut_clipboard(clipboard, default_editable)" },
        { "trigger": "Gtk.TextBuffer.delete", "contents": "Gtk.TextBuffer.delete(start, end)" },
        { "trigger": "Gtk.TextBuffer.delete_interactive", "contents": "Gtk.TextBuffer.delete_interactive(start_iter, end_iter, default_editable)" },
        { "trigger": "Gtk.TextBuffer.delete_mark", "contents": "Gtk.TextBuffer.delete_mark(mark)" },
        { "trigger": "Gtk.TextBuffer.delete_mark_by_name", "contents": "Gtk.TextBuffer.delete_mark_by_name(name)" },
        { "trigger": "Gtk.TextBuffer.delete_selection", "contents": "Gtk.TextBuffer.delete_selection(interactive, default_editable)" },
        { "trigger": "Gtk.TextBuffer.deserialize", "contents": "Gtk.TextBuffer.deserialize(content_buffer, format, iter, data)" },
        { "trigger": "Gtk.TextBuffer.deserialize_get_can_create_tags", "contents": "Gtk.TextBuffer.deserialize_get_can_create_tags(format)" },
        { "trigger": "Gtk.TextBuffer.deserialize_set_can_create_tags", "contents": "Gtk.TextBuffer.deserialize_set_can_create_tags(format, can_create_tags)" },
        { "trigger": "Gtk.TextBuffer.end_user_action", "contents": "Gtk.TextBuffer.end_user_action()" },
        { "trigger": "Gtk.TextBuffer.get_bounds", "contents": "Gtk.TextBuffer.get_bounds()" },
        { "trigger": "Gtk.TextBuffer.get_char_count", "contents": "Gtk.TextBuffer.get_char_count()" },
        { "trigger": "Gtk.TextBuffer.get_copy_target_list", "contents": "Gtk.TextBuffer.get_copy_target_list()" },
        { "trigger": "Gtk.TextBuffer.get_deserialize_formats", "contents": "Gtk.TextBuffer.get_deserialize_formats()" },
        { "trigger": "Gtk.TextBuffer.get_end_iter", "contents": "Gtk.TextBuffer.get_end_iter()" },
        { "trigger": "Gtk.TextBuffer.get_has_selection", "contents": "Gtk.TextBuffer.get_has_selection()" },
        { "trigger": "Gtk.TextBuffer.get_insert", "contents": "Gtk.TextBuffer.get_insert()" },
        { "trigger": "Gtk.TextBuffer.get_iter_at_child_anchor", "contents": "Gtk.TextBuffer.get_iter_at_child_anchor(anchor)" },
        { "trigger": "Gtk.TextBuffer.get_iter_at_line", "contents": "Gtk.TextBuffer.get_iter_at_line(line_number)" },
        { "trigger": "Gtk.TextBuffer.get_iter_at_line_index", "contents": "Gtk.TextBuffer.get_iter_at_line_index(line_number, byte_index)" },
        { "trigger": "Gtk.TextBuffer.get_iter_at_line_offset", "contents": "Gtk.TextBuffer.get_iter_at_line_offset(line_number, char_offset)" },
        { "trigger": "Gtk.TextBuffer.get_iter_at_mark", "contents": "Gtk.TextBuffer.get_iter_at_mark(mark)" },
        { "trigger": "Gtk.TextBuffer.get_iter_at_offset", "contents": "Gtk.TextBuffer.get_iter_at_offset(char_offset)" },
        { "trigger": "Gtk.TextBuffer.get_line_count", "contents": "Gtk.TextBuffer.get_line_count()" },
        { "trigger": "Gtk.TextBuffer.get_mark", "contents": "Gtk.TextBuffer.get_mark(name)" },
        { "trigger": "Gtk.TextBuffer.get_modified", "contents": "Gtk.TextBuffer.get_modified()" },
        { "trigger": "Gtk.TextBuffer.get_paste_target_list", "contents": "Gtk.TextBuffer.get_paste_target_list()" },
        { "trigger": "Gtk.TextBuffer.get_selection_bound", "contents": "Gtk.TextBuffer.get_selection_bound()" },
        { "trigger": "Gtk.TextBuffer.get_selection_bounds", "contents": "Gtk.TextBuffer.get_selection_bounds()" },
        { "trigger": "Gtk.TextBuffer.get_serialize_formats", "contents": "Gtk.TextBuffer.get_serialize_formats()" },
        { "trigger": "Gtk.TextBuffer.get_slice", "contents": "Gtk.TextBuffer.get_slice(start, end, include_hidden_chars)" },
        { "trigger": "Gtk.TextBuffer.get_start_iter", "contents": "Gtk.TextBuffer.get_start_iter()" },
        { "trigger": "Gtk.TextBuffer.get_tag_table", "contents": "Gtk.TextBuffer.get_tag_table()" },
        { "trigger": "Gtk.TextBuffer.get_text", "contents": "Gtk.TextBuffer.get_text(start, end, include_hidden_chars)" },
        { "trigger": "Gtk.TextBuffer.insert", "contents": "Gtk.TextBuffer.insert(iter, text, length=-1)" },
        { "trigger": "Gtk.TextBuffer.insert_at_cursor", "contents": "Gtk.TextBuffer.insert_at_cursor(text, len)" },
        { "trigger": "Gtk.TextBuffer.insert_child_anchor", "contents": "Gtk.TextBuffer.insert_child_anchor(iter, anchor)" },
        { "trigger": "Gtk.TextBuffer.insert_interactive", "contents": "Gtk.TextBuffer.insert_interactive(iter, text, len, default_editable)" },
        { "trigger": "Gtk.TextBuffer.insert_interactive_at_cursor", "contents": "Gtk.TextBuffer.insert_interactive_at_cursor(text, len, default_editable)" },
        { "trigger": "Gtk.TextBuffer.insert_markup", "contents": "Gtk.TextBuffer.insert_markup(iter, markup, len)" },
        { "trigger": "Gtk.TextBuffer.insert_pixbuf", "contents": "Gtk.TextBuffer.insert_pixbuf(iter, pixbuf)" },
        { "trigger": "Gtk.TextBuffer.insert_range", "contents": "Gtk.TextBuffer.insert_range(iter, start, end)" },
        { "trigger": "Gtk.TextBuffer.insert_range_interactive", "contents": "Gtk.TextBuffer.insert_range_interactive(iter, start, end, default_editable)" },
        { "trigger": "Gtk.TextBuffer.insert_with_tags", "contents": "Gtk.TextBuffer.insert_with_tags(iter, text, *tags)" },
        { "trigger": "Gtk.TextBuffer.insert_with_tags_by_name", "contents": "Gtk.TextBuffer.insert_with_tags_by_name(iter, text, *tags)" },
        { "trigger": "Gtk.TextBuffer.move_mark", "contents": "Gtk.TextBuffer.move_mark(mark, where)" },
        { "trigger": "Gtk.TextBuffer.move_mark_by_name", "contents": "Gtk.TextBuffer.move_mark_by_name(name, where)" },
        { "trigger": "Gtk.TextBuffer.paste_clipboard", "contents": "Gtk.TextBuffer.paste_clipboard(clipboard, override_location, default_editable)" },
        { "trigger": "Gtk.TextBuffer.place_cursor", "contents": "Gtk.TextBuffer.place_cursor(where)" },
        { "trigger": "Gtk.TextBuffer.register_deserialize_format", "contents": "Gtk.TextBuffer.register_deserialize_format(mime_type, function, *user_data)" },
        { "trigger": "Gtk.TextBuffer.register_deserialize_tagset", "contents": "Gtk.TextBuffer.register_deserialize_tagset(tagset_name)" },
        { "trigger": "Gtk.TextBuffer.register_serialize_format", "contents": "Gtk.TextBuffer.register_serialize_format(mime_type, function, *user_data)" },
        { "trigger": "Gtk.TextBuffer.register_serialize_tagset", "contents": "Gtk.TextBuffer.register_serialize_tagset(tagset_name)" },
        { "trigger": "Gtk.TextBuffer.remove_all_tags", "contents": "Gtk.TextBuffer.remove_all_tags(start, end)" },
        { "trigger": "Gtk.TextBuffer.remove_selection_clipboard", "contents": "Gtk.TextBuffer.remove_selection_clipboard(clipboard)" },
        { "trigger": "Gtk.TextBuffer.remove_tag", "contents": "Gtk.TextBuffer.remove_tag(tag, start, end)" },
        { "trigger": "Gtk.TextBuffer.remove_tag_by_name", "contents": "Gtk.TextBuffer.remove_tag_by_name(name, start, end)" },
        { "trigger": "Gtk.TextBuffer.select_range", "contents": "Gtk.TextBuffer.select_range(ins, bound)" },
        { "trigger": "Gtk.TextBuffer.serialize", "contents": "Gtk.TextBuffer.serialize(content_buffer, format, start, end)" },
        { "trigger": "Gtk.TextBuffer.set_modified", "contents": "Gtk.TextBuffer.set_modified(setting)" },
        { "trigger": "Gtk.TextBuffer.set_text", "contents": "Gtk.TextBuffer.set_text(text, length=-1)" },
        { "trigger": "Gtk.TextBuffer.unregister_deserialize_format", "contents": "Gtk.TextBuffer.unregister_deserialize_format(format)" },
        { "trigger": "Gtk.TextBuffer.unregister_serialize_format", "contents": "Gtk.TextBuffer.unregister_serialize_format(format)" },
        { "trigger": "Gtk.TextBuffer.do_apply_tag", "contents": "Gtk.TextBuffer.do_apply_tag(tag, start, end)" },
        { "trigger": "Gtk.TextBuffer.do_begin_user_action", "contents": "Gtk.TextBuffer.do_begin_user_action()" },
        { "trigger": "Gtk.TextBuffer.do_changed", "contents": "Gtk.TextBuffer.do_changed()" },
        { "trigger": "Gtk.TextBuffer.do_delete_range", "contents": "Gtk.TextBuffer.do_delete_range(start, end)" },
        { "trigger": "Gtk.TextBuffer.do_end_user_action", "contents": "Gtk.TextBuffer.do_end_user_action()" },
        { "trigger": "Gtk.TextBuffer.do_insert_child_anchor", "contents": "Gtk.TextBuffer.do_insert_child_anchor(iter, anchor)" },
        { "trigger": "Gtk.TextBuffer.do_insert_pixbuf", "contents": "Gtk.TextBuffer.do_insert_pixbuf(iter, pixbuf)" },
        { "trigger": "Gtk.TextBuffer.do_insert_text", "contents": "Gtk.TextBuffer.do_insert_text(pos, new_text, new_text_length)" },
        { "trigger": "Gtk.TextBuffer.do_mark_deleted", "contents": "Gtk.TextBuffer.do_mark_deleted(mark)" },
        { "trigger": "Gtk.TextBuffer.do_mark_set", "contents": "Gtk.TextBuffer.do_mark_set(location, mark)" },
        { "trigger": "Gtk.TextBuffer.do_modified_changed", "contents": "Gtk.TextBuffer.do_modified_changed()" },
        { "trigger": "Gtk.TextBuffer.do_paste_done", "contents": "Gtk.TextBuffer.do_paste_done(clipboard)" },
        { "trigger": "Gtk.TextBuffer.do_remove_tag", "contents": "Gtk.TextBuffer.do_remove_tag(tag, start, end)" },
        { "trigger": "Gtk.TextBuffer.signals.apply_tag", "contents": "Gtk.TextBuffer.signals.apply_tag(text_buffer, tag, start, end)" },
        { "trigger": "Gtk.TextBuffer.signals.begin_user_action", "contents": "Gtk.TextBuffer.signals.begin_user_action(text_buffer)" },
        { "trigger": "Gtk.TextBuffer.signals.changed", "contents": "Gtk.TextBuffer.signals.changed(text_buffer)" },
        { "trigger": "Gtk.TextBuffer.signals.delete_range", "contents": "Gtk.TextBuffer.signals.delete_range(text_buffer, start, end)" },
        { "trigger": "Gtk.TextBuffer.signals.end_user_action", "contents": "Gtk.TextBuffer.signals.end_user_action(text_buffer)" },
        { "trigger": "Gtk.TextBuffer.signals.insert_child_anchor", "contents": "Gtk.TextBuffer.signals.insert_child_anchor(text_buffer, location, anchor)" },
        { "trigger": "Gtk.TextBuffer.signals.insert_pixbuf", "contents": "Gtk.TextBuffer.signals.insert_pixbuf(text_buffer, location, pixbuf)" },
        { "trigger": "Gtk.TextBuffer.signals.insert_text", "contents": "Gtk.TextBuffer.signals.insert_text(text_buffer, location, text, len)" },
        { "trigger": "Gtk.TextBuffer.signals.mark_deleted", "contents": "Gtk.TextBuffer.signals.mark_deleted(text_buffer, mark)" },
        { "trigger": "Gtk.TextBuffer.signals.mark_set", "contents": "Gtk.TextBuffer.signals.mark_set(text_buffer, location, mark)" },
        { "trigger": "Gtk.TextBuffer.signals.modified_changed", "contents": "Gtk.TextBuffer.signals.modified_changed(text_buffer)" },
        { "trigger": "Gtk.TextBuffer.signals.paste_done", "contents": "Gtk.TextBuffer.signals.paste_done(text_buffer, clipboard)" },
        { "trigger": "Gtk.TextBuffer.signals.remove_tag", "contents": "Gtk.TextBuffer.signals.remove_tag(text_buffer, tag, start, end)" },
        { "trigger": "Gtk.TextBuffer.props.copy_target_list", "contents": "Gtk.TextBuffer.props.copy_target_list" },
        { "trigger": "Gtk.TextBuffer.props.cursor_position", "contents": "Gtk.TextBuffer.props.cursor_position" },
        { "trigger": "Gtk.TextBuffer.props.has_selection", "contents": "Gtk.TextBuffer.props.has_selection" },
        { "trigger": "Gtk.TextBuffer.props.paste_target_list", "contents": "Gtk.TextBuffer.props.paste_target_list" },
        { "trigger": "Gtk.TextBuffer.props.tag_table", "contents": "Gtk.TextBuffer.props.tag_table" },
        { "trigger": "Gtk.TextBuffer.props.text", "contents": "Gtk.TextBuffer.props.text" },
        { "trigger": "Gtk.TextCellAccessible", "contents": "Gtk.TextCellAccessible(**kwargs)" },
        { "trigger": "Gtk.TextChildAnchor", "contents": "Gtk.TextChildAnchor(**kwargs)" },
        { "trigger": "Gtk.TextChildAnchor.new", "contents": "Gtk.TextChildAnchor.new()" },
        { "trigger": "Gtk.TextChildAnchor.get_deleted", "contents": "Gtk.TextChildAnchor.get_deleted()" },
        { "trigger": "Gtk.TextChildAnchor.get_widgets", "contents": "Gtk.TextChildAnchor.get_widgets()" },
        { "trigger": "Gtk.TextMark", "contents": "Gtk.TextMark(**kwargs)" },
        { "trigger": "Gtk.TextMark.new", "contents": "Gtk.TextMark.new(name, left_gravity)" },
        { "trigger": "Gtk.TextMark.get_buffer", "contents": "Gtk.TextMark.get_buffer()" },
        { "trigger": "Gtk.TextMark.get_deleted", "contents": "Gtk.TextMark.get_deleted()" },
        { "trigger": "Gtk.TextMark.get_left_gravity", "contents": "Gtk.TextMark.get_left_gravity()" },
        { "trigger": "Gtk.TextMark.get_name", "contents": "Gtk.TextMark.get_name()" },
        { "trigger": "Gtk.TextMark.get_visible", "contents": "Gtk.TextMark.get_visible()" },
        { "trigger": "Gtk.TextMark.set_visible", "contents": "Gtk.TextMark.set_visible(setting)" },
        { "trigger": "Gtk.TextMark.props.left_gravity", "contents": "Gtk.TextMark.props.left_gravity" },
        { "trigger": "Gtk.TextMark.props.name", "contents": "Gtk.TextMark.props.name" },
        { "trigger": "Gtk.TextTag", "contents": "Gtk.TextTag(**kwargs)" },
        { "trigger": "Gtk.TextTag.new", "contents": "Gtk.TextTag.new(name)" },
        { "trigger": "Gtk.TextTag.event", "contents": "Gtk.TextTag.event(event_object, event, iter)" },
        { "trigger": "Gtk.TextTag.get_priority", "contents": "Gtk.TextTag.get_priority()" },
        { "trigger": "Gtk.TextTag.set_priority", "contents": "Gtk.TextTag.set_priority(priority)" },
        { "trigger": "Gtk.TextTag.do_event", "contents": "Gtk.TextTag.do_event(event_object, event, iter)" },
        { "trigger": "Gtk.TextTag.signals.event", "contents": "Gtk.TextTag.signals.event(text_tag, object, event, iter)" },
        { "trigger": "Gtk.TextTag.props.accumulative_margin", "contents": "Gtk.TextTag.props.accumulative_margin" },
        { "trigger": "Gtk.TextTag.props.background", "contents": "Gtk.TextTag.props.background" },
        { "trigger": "Gtk.TextTag.props.background_full_height", "contents": "Gtk.TextTag.props.background_full_height" },
        { "trigger": "Gtk.TextTag.props.background_full_height_set", "contents": "Gtk.TextTag.props.background_full_height_set" },
        { "trigger": "Gtk.TextTag.props.background_gdk", "contents": "Gtk.TextTag.props.background_gdk" },
        { "trigger": "Gtk.TextTag.props.background_rgba", "contents": "Gtk.TextTag.props.background_rgba" },
        { "trigger": "Gtk.TextTag.props.background_set", "contents": "Gtk.TextTag.props.background_set" },
        { "trigger": "Gtk.TextTag.props.direction", "contents": "Gtk.TextTag.props.direction" },
        { "trigger": "Gtk.TextTag.props.editable", "contents": "Gtk.TextTag.props.editable" },
        { "trigger": "Gtk.TextTag.props.editable_set", "contents": "Gtk.TextTag.props.editable_set" },
        { "trigger": "Gtk.TextTag.props.fallback", "contents": "Gtk.TextTag.props.fallback" },
        { "trigger": "Gtk.TextTag.props.fallback_set", "contents": "Gtk.TextTag.props.fallback_set" },
        { "trigger": "Gtk.TextTag.props.family", "contents": "Gtk.TextTag.props.family" },
        { "trigger": "Gtk.TextTag.props.family_set", "contents": "Gtk.TextTag.props.family_set" },
        { "trigger": "Gtk.TextTag.props.font", "contents": "Gtk.TextTag.props.font" },
        { "trigger": "Gtk.TextTag.props.font_desc", "contents": "Gtk.TextTag.props.font_desc" },
        { "trigger": "Gtk.TextTag.props.font_features", "contents": "Gtk.TextTag.props.font_features" },
        { "trigger": "Gtk.TextTag.props.font_features_set", "contents": "Gtk.TextTag.props.font_features_set" },
        { "trigger": "Gtk.TextTag.props.foreground", "contents": "Gtk.TextTag.props.foreground" },
        { "trigger": "Gtk.TextTag.props.foreground_gdk", "contents": "Gtk.TextTag.props.foreground_gdk" },
        { "trigger": "Gtk.TextTag.props.foreground_rgba", "contents": "Gtk.TextTag.props.foreground_rgba" },
        { "trigger": "Gtk.TextTag.props.foreground_set", "contents": "Gtk.TextTag.props.foreground_set" },
        { "trigger": "Gtk.TextTag.props.indent", "contents": "Gtk.TextTag.props.indent" },
        { "trigger": "Gtk.TextTag.props.indent_set", "contents": "Gtk.TextTag.props.indent_set" },
        { "trigger": "Gtk.TextTag.props.invisible", "contents": "Gtk.TextTag.props.invisible" },
        { "trigger": "Gtk.TextTag.props.invisible_set", "contents": "Gtk.TextTag.props.invisible_set" },
        { "trigger": "Gtk.TextTag.props.justification", "contents": "Gtk.TextTag.props.justification" },
        { "trigger": "Gtk.TextTag.props.justification_set", "contents": "Gtk.TextTag.props.justification_set" },
        { "trigger": "Gtk.TextTag.props.language", "contents": "Gtk.TextTag.props.language" },
        { "trigger": "Gtk.TextTag.props.language_set", "contents": "Gtk.TextTag.props.language_set" },
        { "trigger": "Gtk.TextTag.props.left_margin", "contents": "Gtk.TextTag.props.left_margin" },
        { "trigger": "Gtk.TextTag.props.left_margin_set", "contents": "Gtk.TextTag.props.left_margin_set" },
        { "trigger": "Gtk.TextTag.props.letter_spacing", "contents": "Gtk.TextTag.props.letter_spacing" },
        { "trigger": "Gtk.TextTag.props.letter_spacing_set", "contents": "Gtk.TextTag.props.letter_spacing_set" },
        { "trigger": "Gtk.TextTag.props.name", "contents": "Gtk.TextTag.props.name" },
        { "trigger": "Gtk.TextTag.props.paragraph_background", "contents": "Gtk.TextTag.props.paragraph_background" },
        { "trigger": "Gtk.TextTag.props.paragraph_background_gdk", "contents": "Gtk.TextTag.props.paragraph_background_gdk" },
        { "trigger": "Gtk.TextTag.props.paragraph_background_rgba", "contents": "Gtk.TextTag.props.paragraph_background_rgba" },
        { "trigger": "Gtk.TextTag.props.paragraph_background_set", "contents": "Gtk.TextTag.props.paragraph_background_set" },
        { "trigger": "Gtk.TextTag.props.pixels_above_lines", "contents": "Gtk.TextTag.props.pixels_above_lines" },
        { "trigger": "Gtk.TextTag.props.pixels_above_lines_set", "contents": "Gtk.TextTag.props.pixels_above_lines_set" },
        { "trigger": "Gtk.TextTag.props.pixels_below_lines", "contents": "Gtk.TextTag.props.pixels_below_lines" },
        { "trigger": "Gtk.TextTag.props.pixels_below_lines_set", "contents": "Gtk.TextTag.props.pixels_below_lines_set" },
        { "trigger": "Gtk.TextTag.props.pixels_inside_wrap", "contents": "Gtk.TextTag.props.pixels_inside_wrap" },
        { "trigger": "Gtk.TextTag.props.pixels_inside_wrap_set", "contents": "Gtk.TextTag.props.pixels_inside_wrap_set" },
        { "trigger": "Gtk.TextTag.props.right_margin", "contents": "Gtk.TextTag.props.right_margin" },
        { "trigger": "Gtk.TextTag.props.right_margin_set", "contents": "Gtk.TextTag.props.right_margin_set" },
        { "trigger": "Gtk.TextTag.props.rise", "contents": "Gtk.TextTag.props.rise" },
        { "trigger": "Gtk.TextTag.props.rise_set", "contents": "Gtk.TextTag.props.rise_set" },
        { "trigger": "Gtk.TextTag.props.scale", "contents": "Gtk.TextTag.props.scale" },
        { "trigger": "Gtk.TextTag.props.scale_set", "contents": "Gtk.TextTag.props.scale_set" },
        { "trigger": "Gtk.TextTag.props.size", "contents": "Gtk.TextTag.props.size" },
        { "trigger": "Gtk.TextTag.props.size_points", "contents": "Gtk.TextTag.props.size_points" },
        { "trigger": "Gtk.TextTag.props.size_set", "contents": "Gtk.TextTag.props.size_set" },
        { "trigger": "Gtk.TextTag.props.stretch", "contents": "Gtk.TextTag.props.stretch" },
        { "trigger": "Gtk.TextTag.props.stretch_set", "contents": "Gtk.TextTag.props.stretch_set" },
        { "trigger": "Gtk.TextTag.props.strikethrough", "contents": "Gtk.TextTag.props.strikethrough" },
        { "trigger": "Gtk.TextTag.props.strikethrough_rgba", "contents": "Gtk.TextTag.props.strikethrough_rgba" },
        { "trigger": "Gtk.TextTag.props.strikethrough_rgba_set", "contents": "Gtk.TextTag.props.strikethrough_rgba_set" },
        { "trigger": "Gtk.TextTag.props.strikethrough_set", "contents": "Gtk.TextTag.props.strikethrough_set" },
        { "trigger": "Gtk.TextTag.props.style", "contents": "Gtk.TextTag.props.style" },
        { "trigger": "Gtk.TextTag.props.style_set", "contents": "Gtk.TextTag.props.style_set" },
        { "trigger": "Gtk.TextTag.props.tabs", "contents": "Gtk.TextTag.props.tabs" },
        { "trigger": "Gtk.TextTag.props.tabs_set", "contents": "Gtk.TextTag.props.tabs_set" },
        { "trigger": "Gtk.TextTag.props.underline", "contents": "Gtk.TextTag.props.underline" },
        { "trigger": "Gtk.TextTag.props.underline_rgba", "contents": "Gtk.TextTag.props.underline_rgba" },
        { "trigger": "Gtk.TextTag.props.underline_rgba_set", "contents": "Gtk.TextTag.props.underline_rgba_set" },
        { "trigger": "Gtk.TextTag.props.underline_set", "contents": "Gtk.TextTag.props.underline_set" },
        { "trigger": "Gtk.TextTag.props.variant", "contents": "Gtk.TextTag.props.variant" },
        { "trigger": "Gtk.TextTag.props.variant_set", "contents": "Gtk.TextTag.props.variant_set" },
        { "trigger": "Gtk.TextTag.props.weight", "contents": "Gtk.TextTag.props.weight" },
        { "trigger": "Gtk.TextTag.props.weight_set", "contents": "Gtk.TextTag.props.weight_set" },
        { "trigger": "Gtk.TextTag.props.wrap_mode", "contents": "Gtk.TextTag.props.wrap_mode" },
        { "trigger": "Gtk.TextTag.props.wrap_mode_set", "contents": "Gtk.TextTag.props.wrap_mode_set" },
        { "trigger": "Gtk.TextTagTable", "contents": "Gtk.TextTagTable(**kwargs)" },
        { "trigger": "Gtk.TextTagTable.new", "contents": "Gtk.TextTagTable.new()" },
        { "trigger": "Gtk.TextTagTable.add", "contents": "Gtk.TextTagTable.add(tag)" },
        { "trigger": "Gtk.TextTagTable.foreach", "contents": "Gtk.TextTagTable.foreach(func, *data)" },
        { "trigger": "Gtk.TextTagTable.get_size", "contents": "Gtk.TextTagTable.get_size()" },
        { "trigger": "Gtk.TextTagTable.lookup", "contents": "Gtk.TextTagTable.lookup(name)" },
        { "trigger": "Gtk.TextTagTable.remove", "contents": "Gtk.TextTagTable.remove(tag)" },
        { "trigger": "Gtk.TextTagTable.do_tag_added", "contents": "Gtk.TextTagTable.do_tag_added(tag)" },
        { "trigger": "Gtk.TextTagTable.do_tag_changed", "contents": "Gtk.TextTagTable.do_tag_changed(tag, size_changed)" },
        { "trigger": "Gtk.TextTagTable.do_tag_removed", "contents": "Gtk.TextTagTable.do_tag_removed(tag)" },
        { "trigger": "Gtk.TextTagTable.signals.tag_added", "contents": "Gtk.TextTagTable.signals.tag_added(text_tag_table, tag)" },
        { "trigger": "Gtk.TextTagTable.signals.tag_changed", "contents": "Gtk.TextTagTable.signals.tag_changed(text_tag_table, tag, size_changed)" },
        { "trigger": "Gtk.TextTagTable.signals.tag_removed", "contents": "Gtk.TextTagTable.signals.tag_removed(text_tag_table, tag)" },
        { "trigger": "Gtk.TextViewAccessible", "contents": "Gtk.TextViewAccessible(**kwargs)" },
        { "trigger": "Gtk.TextView", "contents": "Gtk.TextView(**kwargs)" },
        { "trigger": "Gtk.TextView.new", "contents": "Gtk.TextView.new()" },
        { "trigger": "Gtk.TextView.new_with_buffer", "contents": "Gtk.TextView.new_with_buffer(buffer)" },
        { "trigger": "Gtk.TextView.add_child_at_anchor", "contents": "Gtk.TextView.add_child_at_anchor(child, anchor)" },
        { "trigger": "Gtk.TextView.add_child_in_window", "contents": "Gtk.TextView.add_child_in_window(child, which_window, xpos, ypos)" },
        { "trigger": "Gtk.TextView.backward_display_line", "contents": "Gtk.TextView.backward_display_line(iter)" },
        { "trigger": "Gtk.TextView.backward_display_line_start", "contents": "Gtk.TextView.backward_display_line_start(iter)" },
        { "trigger": "Gtk.TextView.buffer_to_window_coords", "contents": "Gtk.TextView.buffer_to_window_coords(win, buffer_x, buffer_y)" },
        { "trigger": "Gtk.TextView.forward_display_line", "contents": "Gtk.TextView.forward_display_line(iter)" },
        { "trigger": "Gtk.TextView.forward_display_line_end", "contents": "Gtk.TextView.forward_display_line_end(iter)" },
        { "trigger": "Gtk.TextView.get_accepts_tab", "contents": "Gtk.TextView.get_accepts_tab()" },
        { "trigger": "Gtk.TextView.get_border_window_size", "contents": "Gtk.TextView.get_border_window_size(type)" },
        { "trigger": "Gtk.TextView.get_bottom_margin", "contents": "Gtk.TextView.get_bottom_margin()" },
        { "trigger": "Gtk.TextView.get_buffer", "contents": "Gtk.TextView.get_buffer()" },
        { "trigger": "Gtk.TextView.get_cursor_locations", "contents": "Gtk.TextView.get_cursor_locations(iter)" },
        { "trigger": "Gtk.TextView.get_cursor_visible", "contents": "Gtk.TextView.get_cursor_visible()" },
        { "trigger": "Gtk.TextView.get_default_attributes", "contents": "Gtk.TextView.get_default_attributes()" },
        { "trigger": "Gtk.TextView.get_editable", "contents": "Gtk.TextView.get_editable()" },
        { "trigger": "Gtk.TextView.get_hadjustment", "contents": "Gtk.TextView.get_hadjustment()" },
        { "trigger": "Gtk.TextView.get_indent", "contents": "Gtk.TextView.get_indent()" },
        { "trigger": "Gtk.TextView.get_input_hints", "contents": "Gtk.TextView.get_input_hints()" },
        { "trigger": "Gtk.TextView.get_input_purpose", "contents": "Gtk.TextView.get_input_purpose()" },
        { "trigger": "Gtk.TextView.get_iter_at_location", "contents": "Gtk.TextView.get_iter_at_location(x, y)" },
        { "trigger": "Gtk.TextView.get_iter_at_position", "contents": "Gtk.TextView.get_iter_at_position(x, y)" },
        { "trigger": "Gtk.TextView.get_iter_location", "contents": "Gtk.TextView.get_iter_location(iter)" },
        { "trigger": "Gtk.TextView.get_justification", "contents": "Gtk.TextView.get_justification()" },
        { "trigger": "Gtk.TextView.get_left_margin", "contents": "Gtk.TextView.get_left_margin()" },
        { "trigger": "Gtk.TextView.get_line_at_y", "contents": "Gtk.TextView.get_line_at_y(y)" },
        { "trigger": "Gtk.TextView.get_line_yrange", "contents": "Gtk.TextView.get_line_yrange(iter)" },
        { "trigger": "Gtk.TextView.get_monospace", "contents": "Gtk.TextView.get_monospace()" },
        { "trigger": "Gtk.TextView.get_overwrite", "contents": "Gtk.TextView.get_overwrite()" },
        { "trigger": "Gtk.TextView.get_pixels_above_lines", "contents": "Gtk.TextView.get_pixels_above_lines()" },
        { "trigger": "Gtk.TextView.get_pixels_below_lines", "contents": "Gtk.TextView.get_pixels_below_lines()" },
        { "trigger": "Gtk.TextView.get_pixels_inside_wrap", "contents": "Gtk.TextView.get_pixels_inside_wrap()" },
        { "trigger": "Gtk.TextView.get_right_margin", "contents": "Gtk.TextView.get_right_margin()" },
        { "trigger": "Gtk.TextView.get_tabs", "contents": "Gtk.TextView.get_tabs()" },
        { "trigger": "Gtk.TextView.get_top_margin", "contents": "Gtk.TextView.get_top_margin()" },
        { "trigger": "Gtk.TextView.get_vadjustment", "contents": "Gtk.TextView.get_vadjustment()" },
        { "trigger": "Gtk.TextView.get_visible_rect", "contents": "Gtk.TextView.get_visible_rect()" },
        { "trigger": "Gtk.TextView.get_window", "contents": "Gtk.TextView.get_window(win)" },
        { "trigger": "Gtk.TextView.get_window_type", "contents": "Gtk.TextView.get_window_type(window)" },
        { "trigger": "Gtk.TextView.get_wrap_mode", "contents": "Gtk.TextView.get_wrap_mode()" },
        { "trigger": "Gtk.TextView.im_context_filter_keypress", "contents": "Gtk.TextView.im_context_filter_keypress(event)" },
        { "trigger": "Gtk.TextView.move_child", "contents": "Gtk.TextView.move_child(child, xpos, ypos)" },
        { "trigger": "Gtk.TextView.move_mark_onscreen", "contents": "Gtk.TextView.move_mark_onscreen(mark)" },
        { "trigger": "Gtk.TextView.move_visually", "contents": "Gtk.TextView.move_visually(iter, count)" },
        { "trigger": "Gtk.TextView.place_cursor_onscreen", "contents": "Gtk.TextView.place_cursor_onscreen()" },
        { "trigger": "Gtk.TextView.reset_im_context", "contents": "Gtk.TextView.reset_im_context()" },
        { "trigger": "Gtk.TextView.scroll_mark_onscreen", "contents": "Gtk.TextView.scroll_mark_onscreen(mark)" },
        { "trigger": "Gtk.TextView.scroll_to_iter", "contents": "Gtk.TextView.scroll_to_iter(iter, within_margin, use_align, xalign, yalign)" },
        { "trigger": "Gtk.TextView.scroll_to_mark", "contents": "Gtk.TextView.scroll_to_mark(mark, within_margin, use_align, xalign, yalign)" },
        { "trigger": "Gtk.TextView.set_accepts_tab", "contents": "Gtk.TextView.set_accepts_tab(accepts_tab)" },
        { "trigger": "Gtk.TextView.set_border_window_size", "contents": "Gtk.TextView.set_border_window_size(type, size)" },
        { "trigger": "Gtk.TextView.set_bottom_margin", "contents": "Gtk.TextView.set_bottom_margin(bottom_margin)" },
        { "trigger": "Gtk.TextView.set_buffer", "contents": "Gtk.TextView.set_buffer(buffer)" },
        { "trigger": "Gtk.TextView.set_cursor_visible", "contents": "Gtk.TextView.set_cursor_visible(setting)" },
        { "trigger": "Gtk.TextView.set_editable", "contents": "Gtk.TextView.set_editable(setting)" },
        { "trigger": "Gtk.TextView.set_indent", "contents": "Gtk.TextView.set_indent(indent)" },
        { "trigger": "Gtk.TextView.set_input_hints", "contents": "Gtk.TextView.set_input_hints(hints)" },
        { "trigger": "Gtk.TextView.set_input_purpose", "contents": "Gtk.TextView.set_input_purpose(purpose)" },
        { "trigger": "Gtk.TextView.set_justification", "contents": "Gtk.TextView.set_justification(justification)" },
        { "trigger": "Gtk.TextView.set_left_margin", "contents": "Gtk.TextView.set_left_margin(left_margin)" },
        { "trigger": "Gtk.TextView.set_monospace", "contents": "Gtk.TextView.set_monospace(monospace)" },
        { "trigger": "Gtk.TextView.set_overwrite", "contents": "Gtk.TextView.set_overwrite(overwrite)" },
        { "trigger": "Gtk.TextView.set_pixels_above_lines", "contents": "Gtk.TextView.set_pixels_above_lines(pixels_above_lines)" },
        { "trigger": "Gtk.TextView.set_pixels_below_lines", "contents": "Gtk.TextView.set_pixels_below_lines(pixels_below_lines)" },
        { "trigger": "Gtk.TextView.set_pixels_inside_wrap", "contents": "Gtk.TextView.set_pixels_inside_wrap(pixels_inside_wrap)" },
        { "trigger": "Gtk.TextView.set_right_margin", "contents": "Gtk.TextView.set_right_margin(right_margin)" },
        { "trigger": "Gtk.TextView.set_tabs", "contents": "Gtk.TextView.set_tabs(tabs)" },
        { "trigger": "Gtk.TextView.set_top_margin", "contents": "Gtk.TextView.set_top_margin(top_margin)" },
        { "trigger": "Gtk.TextView.set_wrap_mode", "contents": "Gtk.TextView.set_wrap_mode(wrap_mode)" },
        { "trigger": "Gtk.TextView.starts_display_line", "contents": "Gtk.TextView.starts_display_line(iter)" },
        { "trigger": "Gtk.TextView.window_to_buffer_coords", "contents": "Gtk.TextView.window_to_buffer_coords(win, window_x, window_y)" },
        { "trigger": "Gtk.TextView.do_backspace", "contents": "Gtk.TextView.do_backspace()" },
        { "trigger": "Gtk.TextView.do_copy_clipboard", "contents": "Gtk.TextView.do_copy_clipboard()" },
        { "trigger": "Gtk.TextView.do_cut_clipboard", "contents": "Gtk.TextView.do_cut_clipboard()" },
        { "trigger": "Gtk.TextView.do_delete_from_cursor", "contents": "Gtk.TextView.do_delete_from_cursor(type, count)" },
        { "trigger": "Gtk.TextView.do_draw_layer", "contents": "Gtk.TextView.do_draw_layer(layer, cr)" },
        { "trigger": "Gtk.TextView.do_extend_selection", "contents": "Gtk.TextView.do_extend_selection(granularity, location, start, end)" },
        { "trigger": "Gtk.TextView.do_insert_at_cursor", "contents": "Gtk.TextView.do_insert_at_cursor(str)" },
        { "trigger": "Gtk.TextView.do_move_cursor", "contents": "Gtk.TextView.do_move_cursor(step, count, extend_selection)" },
        { "trigger": "Gtk.TextView.do_paste_clipboard", "contents": "Gtk.TextView.do_paste_clipboard()" },
        { "trigger": "Gtk.TextView.do_populate_popup", "contents": "Gtk.TextView.do_populate_popup(popup)" },
        { "trigger": "Gtk.TextView.do_set_anchor", "contents": "Gtk.TextView.do_set_anchor()" },
        { "trigger": "Gtk.TextView.do_toggle_overwrite", "contents": "Gtk.TextView.do_toggle_overwrite()" },
        { "trigger": "Gtk.TextView.signals.backspace", "contents": "Gtk.TextView.signals.backspace(text_view)" },
        { "trigger": "Gtk.TextView.signals.copy_clipboard", "contents": "Gtk.TextView.signals.copy_clipboard(text_view)" },
        { "trigger": "Gtk.TextView.signals.cut_clipboard", "contents": "Gtk.TextView.signals.cut_clipboard(text_view)" },
        { "trigger": "Gtk.TextView.signals.delete_from_cursor", "contents": "Gtk.TextView.signals.delete_from_cursor(text_view, type, count)" },
        { "trigger": "Gtk.TextView.signals.extend_selection", "contents": "Gtk.TextView.signals.extend_selection(text_view, granularity, location, start, end)" },
        { "trigger": "Gtk.TextView.signals.insert_at_cursor", "contents": "Gtk.TextView.signals.insert_at_cursor(text_view, string)" },
        { "trigger": "Gtk.TextView.signals.move_cursor", "contents": "Gtk.TextView.signals.move_cursor(text_view, step, count, extend_selection)" },
        { "trigger": "Gtk.TextView.signals.move_viewport", "contents": "Gtk.TextView.signals.move_viewport(text_view, step, count)" },
        { "trigger": "Gtk.TextView.signals.paste_clipboard", "contents": "Gtk.TextView.signals.paste_clipboard(text_view)" },
        { "trigger": "Gtk.TextView.signals.populate_popup", "contents": "Gtk.TextView.signals.populate_popup(text_view, popup)" },
        { "trigger": "Gtk.TextView.signals.preedit_changed", "contents": "Gtk.TextView.signals.preedit_changed(text_view, preedit)" },
        { "trigger": "Gtk.TextView.signals.select_all", "contents": "Gtk.TextView.signals.select_all(text_view, select)" },
        { "trigger": "Gtk.TextView.signals.set_anchor", "contents": "Gtk.TextView.signals.set_anchor(text_view)" },
        { "trigger": "Gtk.TextView.signals.toggle_cursor_visible", "contents": "Gtk.TextView.signals.toggle_cursor_visible(text_view)" },
        { "trigger": "Gtk.TextView.signals.toggle_overwrite", "contents": "Gtk.TextView.signals.toggle_overwrite(text_view)" },
        { "trigger": "Gtk.TextView.props.accepts_tab", "contents": "Gtk.TextView.props.accepts_tab" },
        { "trigger": "Gtk.TextView.props.bottom_margin", "contents": "Gtk.TextView.props.bottom_margin" },
        { "trigger": "Gtk.TextView.props.buffer", "contents": "Gtk.TextView.props.buffer" },
        { "trigger": "Gtk.TextView.props.cursor_visible", "contents": "Gtk.TextView.props.cursor_visible" },
        { "trigger": "Gtk.TextView.props.editable", "contents": "Gtk.TextView.props.editable" },
        { "trigger": "Gtk.TextView.props.im_module", "contents": "Gtk.TextView.props.im_module" },
        { "trigger": "Gtk.TextView.props.indent", "contents": "Gtk.TextView.props.indent" },
        { "trigger": "Gtk.TextView.props.input_hints", "contents": "Gtk.TextView.props.input_hints" },
        { "trigger": "Gtk.TextView.props.input_purpose", "contents": "Gtk.TextView.props.input_purpose" },
        { "trigger": "Gtk.TextView.props.justification", "contents": "Gtk.TextView.props.justification" },
        { "trigger": "Gtk.TextView.props.left_margin", "contents": "Gtk.TextView.props.left_margin" },
        { "trigger": "Gtk.TextView.props.monospace", "contents": "Gtk.TextView.props.monospace" },
        { "trigger": "Gtk.TextView.props.overwrite", "contents": "Gtk.TextView.props.overwrite" },
        { "trigger": "Gtk.TextView.props.pixels_above_lines", "contents": "Gtk.TextView.props.pixels_above_lines" },
        { "trigger": "Gtk.TextView.props.pixels_below_lines", "contents": "Gtk.TextView.props.pixels_below_lines" },
        { "trigger": "Gtk.TextView.props.pixels_inside_wrap", "contents": "Gtk.TextView.props.pixels_inside_wrap" },
        { "trigger": "Gtk.TextView.props.populate_all", "contents": "Gtk.TextView.props.populate_all" },
        { "trigger": "Gtk.TextView.props.right_margin", "contents": "Gtk.TextView.props.right_margin" },
        { "trigger": "Gtk.TextView.props.tabs", "contents": "Gtk.TextView.props.tabs" },
        { "trigger": "Gtk.TextView.props.top_margin", "contents": "Gtk.TextView.props.top_margin" },
        { "trigger": "Gtk.TextView.props.wrap_mode", "contents": "Gtk.TextView.props.wrap_mode" },
        { "trigger": "Gtk.ThemingEngine", "contents": "Gtk.ThemingEngine(**kwargs)" },
        { "trigger": "Gtk.ThemingEngine.load", "contents": "Gtk.ThemingEngine.load(name)" },
        { "trigger": "Gtk.ThemingEngine.get_background_color", "contents": "Gtk.ThemingEngine.get_background_color(state)" },
        { "trigger": "Gtk.ThemingEngine.get_border", "contents": "Gtk.ThemingEngine.get_border(state)" },
        { "trigger": "Gtk.ThemingEngine.get_border_color", "contents": "Gtk.ThemingEngine.get_border_color(state)" },
        { "trigger": "Gtk.ThemingEngine.get_color", "contents": "Gtk.ThemingEngine.get_color(state)" },
        { "trigger": "Gtk.ThemingEngine.get_direction", "contents": "Gtk.ThemingEngine.get_direction()" },
        { "trigger": "Gtk.ThemingEngine.get_font", "contents": "Gtk.ThemingEngine.get_font(state)" },
        { "trigger": "Gtk.ThemingEngine.get_junction_sides", "contents": "Gtk.ThemingEngine.get_junction_sides()" },
        { "trigger": "Gtk.ThemingEngine.get_margin", "contents": "Gtk.ThemingEngine.get_margin(state)" },
        { "trigger": "Gtk.ThemingEngine.get_padding", "contents": "Gtk.ThemingEngine.get_padding(state)" },
        { "trigger": "Gtk.ThemingEngine.get_path", "contents": "Gtk.ThemingEngine.get_path()" },
        { "trigger": "Gtk.ThemingEngine.get_property", "contents": "Gtk.ThemingEngine.get_property(property, state)" },
        { "trigger": "Gtk.ThemingEngine.get_screen", "contents": "Gtk.ThemingEngine.get_screen()" },
        { "trigger": "Gtk.ThemingEngine.get_state", "contents": "Gtk.ThemingEngine.get_state()" },
        { "trigger": "Gtk.ThemingEngine.get_style_property", "contents": "Gtk.ThemingEngine.get_style_property(property_name)" },
        { "trigger": "Gtk.ThemingEngine.has_class", "contents": "Gtk.ThemingEngine.has_class(style_class)" },
        { "trigger": "Gtk.ThemingEngine.has_region", "contents": "Gtk.ThemingEngine.has_region(style_region)" },
        { "trigger": "Gtk.ThemingEngine.lookup_color", "contents": "Gtk.ThemingEngine.lookup_color(color_name)" },
        { "trigger": "Gtk.ThemingEngine.state_is_running", "contents": "Gtk.ThemingEngine.state_is_running(state)" },
        { "trigger": "Gtk.ThemingEngine.do_render_activity", "contents": "Gtk.ThemingEngine.do_render_activity(cr, x, y, width, height)" },
        { "trigger": "Gtk.ThemingEngine.do_render_arrow", "contents": "Gtk.ThemingEngine.do_render_arrow(cr, angle, x, y, size)" },
        { "trigger": "Gtk.ThemingEngine.do_render_background", "contents": "Gtk.ThemingEngine.do_render_background(cr, x, y, width, height)" },
        { "trigger": "Gtk.ThemingEngine.do_render_check", "contents": "Gtk.ThemingEngine.do_render_check(cr, x, y, width, height)" },
        { "trigger": "Gtk.ThemingEngine.do_render_expander", "contents": "Gtk.ThemingEngine.do_render_expander(cr, x, y, width, height)" },
        { "trigger": "Gtk.ThemingEngine.do_render_extension", "contents": "Gtk.ThemingEngine.do_render_extension(cr, x, y, width, height, gap_side)" },
        { "trigger": "Gtk.ThemingEngine.do_render_focus", "contents": "Gtk.ThemingEngine.do_render_focus(cr, x, y, width, height)" },
        { "trigger": "Gtk.ThemingEngine.do_render_frame", "contents": "Gtk.ThemingEngine.do_render_frame(cr, x, y, width, height)" },
        { "trigger": "Gtk.ThemingEngine.do_render_frame_gap", "contents": "Gtk.ThemingEngine.do_render_frame_gap(cr, x, y, width, height, gap_side, xy0_gap, xy1_gap)" },
        { "trigger": "Gtk.ThemingEngine.do_render_handle", "contents": "Gtk.ThemingEngine.do_render_handle(cr, x, y, width, height)" },
        { "trigger": "Gtk.ThemingEngine.do_render_icon", "contents": "Gtk.ThemingEngine.do_render_icon(cr, pixbuf, x, y)" },
        { "trigger": "Gtk.ThemingEngine.do_render_icon_surface", "contents": "Gtk.ThemingEngine.do_render_icon_surface(cr, surface, x, y)" },
        { "trigger": "Gtk.ThemingEngine.do_render_layout", "contents": "Gtk.ThemingEngine.do_render_layout(cr, x, y, layout)" },
        { "trigger": "Gtk.ThemingEngine.do_render_line", "contents": "Gtk.ThemingEngine.do_render_line(cr, x0, y0, x1, y1)" },
        { "trigger": "Gtk.ThemingEngine.do_render_option", "contents": "Gtk.ThemingEngine.do_render_option(cr, x, y, width, height)" },
        { "trigger": "Gtk.ThemingEngine.do_render_slider", "contents": "Gtk.ThemingEngine.do_render_slider(cr, x, y, width, height, orientation)" },
        { "trigger": "Gtk.ThemingEngine.props.name", "contents": "Gtk.ThemingEngine.props.name" },
        { "trigger": "Gtk.ToggleAction", "contents": "Gtk.ToggleAction(*args, **kwargs)" },
        { "trigger": "Gtk.ToggleAction.new", "contents": "Gtk.ToggleAction.new(name, label, tooltip, stock_id)" },
        { "trigger": "Gtk.ToggleAction.get_active", "contents": "Gtk.ToggleAction.get_active()" },
        { "trigger": "Gtk.ToggleAction.get_draw_as_radio", "contents": "Gtk.ToggleAction.get_draw_as_radio()" },
        { "trigger": "Gtk.ToggleAction.set_active", "contents": "Gtk.ToggleAction.set_active(is_active)" },
        { "trigger": "Gtk.ToggleAction.set_draw_as_radio", "contents": "Gtk.ToggleAction.set_draw_as_radio(draw_as_radio)" },
        { "trigger": "Gtk.ToggleAction.toggled", "contents": "Gtk.ToggleAction.toggled()" },
        { "trigger": "Gtk.ToggleAction.do_toggled", "contents": "Gtk.ToggleAction.do_toggled()" },
        { "trigger": "Gtk.ToggleAction.signals.toggled", "contents": "Gtk.ToggleAction.signals.toggled(toggle_action)" },
        { "trigger": "Gtk.ToggleAction.props.active", "contents": "Gtk.ToggleAction.props.active" },
        { "trigger": "Gtk.ToggleAction.props.draw_as_radio", "contents": "Gtk.ToggleAction.props.draw_as_radio" },
        { "trigger": "Gtk.ToggleButtonAccessible", "contents": "Gtk.ToggleButtonAccessible(**kwargs)" },
        { "trigger": "Gtk.ToggleButton", "contents": "Gtk.ToggleButton(*args, **kwargs)" },
        { "trigger": "Gtk.ToggleButton.new", "contents": "Gtk.ToggleButton.new()" },
        { "trigger": "Gtk.ToggleButton.new_with_label", "contents": "Gtk.ToggleButton.new_with_label(label)" },
        { "trigger": "Gtk.ToggleButton.new_with_mnemonic", "contents": "Gtk.ToggleButton.new_with_mnemonic(label)" },
        { "trigger": "Gtk.ToggleButton.get_active", "contents": "Gtk.ToggleButton.get_active()" },
        { "trigger": "Gtk.ToggleButton.get_inconsistent", "contents": "Gtk.ToggleButton.get_inconsistent()" },
        { "trigger": "Gtk.ToggleButton.get_mode", "contents": "Gtk.ToggleButton.get_mode()" },
        { "trigger": "Gtk.ToggleButton.set_active", "contents": "Gtk.ToggleButton.set_active(is_active)" },
        { "trigger": "Gtk.ToggleButton.set_inconsistent", "contents": "Gtk.ToggleButton.set_inconsistent(setting)" },
        { "trigger": "Gtk.ToggleButton.set_mode", "contents": "Gtk.ToggleButton.set_mode(draw_indicator)" },
        { "trigger": "Gtk.ToggleButton.toggled", "contents": "Gtk.ToggleButton.toggled()" },
        { "trigger": "Gtk.ToggleButton.do_toggled", "contents": "Gtk.ToggleButton.do_toggled()" },
        { "trigger": "Gtk.ToggleButton.signals.toggled", "contents": "Gtk.ToggleButton.signals.toggled(toggle_button)" },
        { "trigger": "Gtk.ToggleButton.props.active", "contents": "Gtk.ToggleButton.props.active" },
        { "trigger": "Gtk.ToggleButton.props.draw_indicator", "contents": "Gtk.ToggleButton.props.draw_indicator" },
        { "trigger": "Gtk.ToggleButton.props.inconsistent", "contents": "Gtk.ToggleButton.props.inconsistent" },
        { "trigger": "Gtk.ToggleToolButton", "contents": "Gtk.ToggleToolButton(*args, **kwargs)" },
        { "trigger": "Gtk.ToggleToolButton.new", "contents": "Gtk.ToggleToolButton.new()" },
        { "trigger": "Gtk.ToggleToolButton.new_from_stock", "contents": "Gtk.ToggleToolButton.new_from_stock(stock_id)" },
        { "trigger": "Gtk.ToggleToolButton.get_active", "contents": "Gtk.ToggleToolButton.get_active()" },
        { "trigger": "Gtk.ToggleToolButton.set_active", "contents": "Gtk.ToggleToolButton.set_active(is_active)" },
        { "trigger": "Gtk.ToggleToolButton.do_toggled", "contents": "Gtk.ToggleToolButton.do_toggled()" },
        { "trigger": "Gtk.ToggleToolButton.signals.toggled", "contents": "Gtk.ToggleToolButton.signals.toggled(toggle_tool_button)" },
        { "trigger": "Gtk.ToggleToolButton.props.active", "contents": "Gtk.ToggleToolButton.props.active" },
        { "trigger": "Gtk.Toolbar", "contents": "Gtk.Toolbar(**kwargs)" },
        { "trigger": "Gtk.Toolbar.new", "contents": "Gtk.Toolbar.new()" },
        { "trigger": "Gtk.Toolbar.get_drop_index", "contents": "Gtk.Toolbar.get_drop_index(x, y)" },
        { "trigger": "Gtk.Toolbar.get_icon_size", "contents": "Gtk.Toolbar.get_icon_size()" },
        { "trigger": "Gtk.Toolbar.get_item_index", "contents": "Gtk.Toolbar.get_item_index(item)" },
        { "trigger": "Gtk.Toolbar.get_n_items", "contents": "Gtk.Toolbar.get_n_items()" },
        { "trigger": "Gtk.Toolbar.get_nth_item", "contents": "Gtk.Toolbar.get_nth_item(n)" },
        { "trigger": "Gtk.Toolbar.get_relief_style", "contents": "Gtk.Toolbar.get_relief_style()" },
        { "trigger": "Gtk.Toolbar.get_show_arrow", "contents": "Gtk.Toolbar.get_show_arrow()" },
        { "trigger": "Gtk.Toolbar.get_style", "contents": "Gtk.Toolbar.get_style()" },
        { "trigger": "Gtk.Toolbar.insert", "contents": "Gtk.Toolbar.insert(item, pos)" },
        { "trigger": "Gtk.Toolbar.set_drop_highlight_item", "contents": "Gtk.Toolbar.set_drop_highlight_item(tool_item, index_)" },
        { "trigger": "Gtk.Toolbar.set_icon_size", "contents": "Gtk.Toolbar.set_icon_size(icon_size)" },
        { "trigger": "Gtk.Toolbar.set_show_arrow", "contents": "Gtk.Toolbar.set_show_arrow(show_arrow)" },
        { "trigger": "Gtk.Toolbar.set_style", "contents": "Gtk.Toolbar.set_style(style)" },
        { "trigger": "Gtk.Toolbar.unset_icon_size", "contents": "Gtk.Toolbar.unset_icon_size()" },
        { "trigger": "Gtk.Toolbar.unset_style", "contents": "Gtk.Toolbar.unset_style()" },
        { "trigger": "Gtk.Toolbar.do_orientation_changed", "contents": "Gtk.Toolbar.do_orientation_changed(orientation)" },
        { "trigger": "Gtk.Toolbar.do_popup_context_menu", "contents": "Gtk.Toolbar.do_popup_context_menu(x, y, button_number)" },
        { "trigger": "Gtk.Toolbar.do_style_changed", "contents": "Gtk.Toolbar.do_style_changed(style)" },
        { "trigger": "Gtk.Toolbar.signals.focus_home_or_end", "contents": "Gtk.Toolbar.signals.focus_home_or_end(toolbar, focus_home)" },
        { "trigger": "Gtk.Toolbar.signals.orientation_changed", "contents": "Gtk.Toolbar.signals.orientation_changed(toolbar, orientation)" },
        { "trigger": "Gtk.Toolbar.signals.popup_context_menu", "contents": "Gtk.Toolbar.signals.popup_context_menu(toolbar, x, y, button)" },
        { "trigger": "Gtk.Toolbar.signals.style_changed", "contents": "Gtk.Toolbar.signals.style_changed(toolbar, style)" },
        { "trigger": "Gtk.Toolbar.props.icon_size", "contents": "Gtk.Toolbar.props.icon_size" },
        { "trigger": "Gtk.Toolbar.props.icon_size_set", "contents": "Gtk.Toolbar.props.icon_size_set" },
        { "trigger": "Gtk.Toolbar.props.show_arrow", "contents": "Gtk.Toolbar.props.show_arrow" },
        { "trigger": "Gtk.Toolbar.props.toolbar_style", "contents": "Gtk.Toolbar.props.toolbar_style" },
        { "trigger": "Gtk.ToolButton", "contents": "Gtk.ToolButton(*args, **kwargs)" },
        { "trigger": "Gtk.ToolButton.new", "contents": "Gtk.ToolButton.new(icon_widget, label)" },
        { "trigger": "Gtk.ToolButton.new_from_stock", "contents": "Gtk.ToolButton.new_from_stock(stock_id)" },
        { "trigger": "Gtk.ToolButton.get_icon_name", "contents": "Gtk.ToolButton.get_icon_name()" },
        { "trigger": "Gtk.ToolButton.get_icon_widget", "contents": "Gtk.ToolButton.get_icon_widget()" },
        { "trigger": "Gtk.ToolButton.get_label", "contents": "Gtk.ToolButton.get_label()" },
        { "trigger": "Gtk.ToolButton.get_label_widget", "contents": "Gtk.ToolButton.get_label_widget()" },
        { "trigger": "Gtk.ToolButton.get_stock_id", "contents": "Gtk.ToolButton.get_stock_id()" },
        { "trigger": "Gtk.ToolButton.get_use_underline", "contents": "Gtk.ToolButton.get_use_underline()" },
        { "trigger": "Gtk.ToolButton.set_icon_name", "contents": "Gtk.ToolButton.set_icon_name(icon_name)" },
        { "trigger": "Gtk.ToolButton.set_icon_widget", "contents": "Gtk.ToolButton.set_icon_widget(icon_widget)" },
        { "trigger": "Gtk.ToolButton.set_label", "contents": "Gtk.ToolButton.set_label(label)" },
        { "trigger": "Gtk.ToolButton.set_label_widget", "contents": "Gtk.ToolButton.set_label_widget(label_widget)" },
        { "trigger": "Gtk.ToolButton.set_stock_id", "contents": "Gtk.ToolButton.set_stock_id(stock_id)" },
        { "trigger": "Gtk.ToolButton.set_use_underline", "contents": "Gtk.ToolButton.set_use_underline(use_underline)" },
        { "trigger": "Gtk.ToolButton.do_clicked", "contents": "Gtk.ToolButton.do_clicked()" },
        { "trigger": "Gtk.ToolButton.signals.clicked", "contents": "Gtk.ToolButton.signals.clicked(tool_button)" },
        { "trigger": "Gtk.ToolButton.props.icon_name", "contents": "Gtk.ToolButton.props.icon_name" },
        { "trigger": "Gtk.ToolButton.props.icon_widget", "contents": "Gtk.ToolButton.props.icon_widget" },
        { "trigger": "Gtk.ToolButton.props.label", "contents": "Gtk.ToolButton.props.label" },
        { "trigger": "Gtk.ToolButton.props.label_widget", "contents": "Gtk.ToolButton.props.label_widget" },
        { "trigger": "Gtk.ToolButton.props.stock_id", "contents": "Gtk.ToolButton.props.stock_id" },
        { "trigger": "Gtk.ToolButton.props.use_underline", "contents": "Gtk.ToolButton.props.use_underline" },
        { "trigger": "Gtk.ToolItemGroup", "contents": "Gtk.ToolItemGroup(**kwargs)" },
        { "trigger": "Gtk.ToolItemGroup.new", "contents": "Gtk.ToolItemGroup.new(label)" },
        { "trigger": "Gtk.ToolItemGroup.get_collapsed", "contents": "Gtk.ToolItemGroup.get_collapsed()" },
        { "trigger": "Gtk.ToolItemGroup.get_drop_item", "contents": "Gtk.ToolItemGroup.get_drop_item(x, y)" },
        { "trigger": "Gtk.ToolItemGroup.get_ellipsize", "contents": "Gtk.ToolItemGroup.get_ellipsize()" },
        { "trigger": "Gtk.ToolItemGroup.get_header_relief", "contents": "Gtk.ToolItemGroup.get_header_relief()" },
        { "trigger": "Gtk.ToolItemGroup.get_item_position", "contents": "Gtk.ToolItemGroup.get_item_position(item)" },
        { "trigger": "Gtk.ToolItemGroup.get_label", "contents": "Gtk.ToolItemGroup.get_label()" },
        { "trigger": "Gtk.ToolItemGroup.get_label_widget", "contents": "Gtk.ToolItemGroup.get_label_widget()" },
        { "trigger": "Gtk.ToolItemGroup.get_n_items", "contents": "Gtk.ToolItemGroup.get_n_items()" },
        { "trigger": "Gtk.ToolItemGroup.get_nth_item", "contents": "Gtk.ToolItemGroup.get_nth_item(index)" },
        { "trigger": "Gtk.ToolItemGroup.insert", "contents": "Gtk.ToolItemGroup.insert(item, position)" },
        { "trigger": "Gtk.ToolItemGroup.set_collapsed", "contents": "Gtk.ToolItemGroup.set_collapsed(collapsed)" },
        { "trigger": "Gtk.ToolItemGroup.set_ellipsize", "contents": "Gtk.ToolItemGroup.set_ellipsize(ellipsize)" },
        { "trigger": "Gtk.ToolItemGroup.set_header_relief", "contents": "Gtk.ToolItemGroup.set_header_relief(style)" },
        { "trigger": "Gtk.ToolItemGroup.set_item_position", "contents": "Gtk.ToolItemGroup.set_item_position(item, position)" },
        { "trigger": "Gtk.ToolItemGroup.set_label", "contents": "Gtk.ToolItemGroup.set_label(label)" },
        { "trigger": "Gtk.ToolItemGroup.set_label_widget", "contents": "Gtk.ToolItemGroup.set_label_widget(label_widget)" },
        { "trigger": "Gtk.ToolItemGroup.props.collapsed", "contents": "Gtk.ToolItemGroup.props.collapsed" },
        { "trigger": "Gtk.ToolItemGroup.props.ellipsize", "contents": "Gtk.ToolItemGroup.props.ellipsize" },
        { "trigger": "Gtk.ToolItemGroup.props.header_relief", "contents": "Gtk.ToolItemGroup.props.header_relief" },
        { "trigger": "Gtk.ToolItemGroup.props.label", "contents": "Gtk.ToolItemGroup.props.label" },
        { "trigger": "Gtk.ToolItemGroup.props.label_widget", "contents": "Gtk.ToolItemGroup.props.label_widget" },
        { "trigger": "Gtk.ToolItem", "contents": "Gtk.ToolItem(**kwargs)" },
        { "trigger": "Gtk.ToolItem.new", "contents": "Gtk.ToolItem.new()" },
        { "trigger": "Gtk.ToolItem.get_ellipsize_mode", "contents": "Gtk.ToolItem.get_ellipsize_mode()" },
        { "trigger": "Gtk.ToolItem.get_expand", "contents": "Gtk.ToolItem.get_expand()" },
        { "trigger": "Gtk.ToolItem.get_homogeneous", "contents": "Gtk.ToolItem.get_homogeneous()" },
        { "trigger": "Gtk.ToolItem.get_icon_size", "contents": "Gtk.ToolItem.get_icon_size()" },
        { "trigger": "Gtk.ToolItem.get_is_important", "contents": "Gtk.ToolItem.get_is_important()" },
        { "trigger": "Gtk.ToolItem.get_orientation", "contents": "Gtk.ToolItem.get_orientation()" },
        { "trigger": "Gtk.ToolItem.get_proxy_menu_item", "contents": "Gtk.ToolItem.get_proxy_menu_item(menu_item_id)" },
        { "trigger": "Gtk.ToolItem.get_relief_style", "contents": "Gtk.ToolItem.get_relief_style()" },
        { "trigger": "Gtk.ToolItem.get_text_alignment", "contents": "Gtk.ToolItem.get_text_alignment()" },
        { "trigger": "Gtk.ToolItem.get_text_orientation", "contents": "Gtk.ToolItem.get_text_orientation()" },
        { "trigger": "Gtk.ToolItem.get_text_size_group", "contents": "Gtk.ToolItem.get_text_size_group()" },
        { "trigger": "Gtk.ToolItem.get_toolbar_style", "contents": "Gtk.ToolItem.get_toolbar_style()" },
        { "trigger": "Gtk.ToolItem.get_use_drag_window", "contents": "Gtk.ToolItem.get_use_drag_window()" },
        { "trigger": "Gtk.ToolItem.get_visible_horizontal", "contents": "Gtk.ToolItem.get_visible_horizontal()" },
        { "trigger": "Gtk.ToolItem.get_visible_vertical", "contents": "Gtk.ToolItem.get_visible_vertical()" },
        { "trigger": "Gtk.ToolItem.rebuild_menu", "contents": "Gtk.ToolItem.rebuild_menu()" },
        { "trigger": "Gtk.ToolItem.retrieve_proxy_menu_item", "contents": "Gtk.ToolItem.retrieve_proxy_menu_item()" },
        { "trigger": "Gtk.ToolItem.set_expand", "contents": "Gtk.ToolItem.set_expand(expand)" },
        { "trigger": "Gtk.ToolItem.set_homogeneous", "contents": "Gtk.ToolItem.set_homogeneous(homogeneous)" },
        { "trigger": "Gtk.ToolItem.set_is_important", "contents": "Gtk.ToolItem.set_is_important(is_important)" },
        { "trigger": "Gtk.ToolItem.set_proxy_menu_item", "contents": "Gtk.ToolItem.set_proxy_menu_item(menu_item_id, menu_item)" },
        { "trigger": "Gtk.ToolItem.set_tooltip_markup", "contents": "Gtk.ToolItem.set_tooltip_markup(markup)" },
        { "trigger": "Gtk.ToolItem.set_tooltip_text", "contents": "Gtk.ToolItem.set_tooltip_text(text)" },
        { "trigger": "Gtk.ToolItem.set_use_drag_window", "contents": "Gtk.ToolItem.set_use_drag_window(use_drag_window)" },
        { "trigger": "Gtk.ToolItem.set_visible_horizontal", "contents": "Gtk.ToolItem.set_visible_horizontal(visible_horizontal)" },
        { "trigger": "Gtk.ToolItem.set_visible_vertical", "contents": "Gtk.ToolItem.set_visible_vertical(visible_vertical)" },
        { "trigger": "Gtk.ToolItem.toolbar_reconfigured", "contents": "Gtk.ToolItem.toolbar_reconfigured()" },
        { "trigger": "Gtk.ToolItem.do_create_menu_proxy", "contents": "Gtk.ToolItem.do_create_menu_proxy()" },
        { "trigger": "Gtk.ToolItem.do_toolbar_reconfigured", "contents": "Gtk.ToolItem.do_toolbar_reconfigured()" },
        { "trigger": "Gtk.ToolItem.signals.create_menu_proxy", "contents": "Gtk.ToolItem.signals.create_menu_proxy(tool_item)" },
        { "trigger": "Gtk.ToolItem.signals.toolbar_reconfigured", "contents": "Gtk.ToolItem.signals.toolbar_reconfigured(tool_item)" },
        { "trigger": "Gtk.ToolItem.props.is_important", "contents": "Gtk.ToolItem.props.is_important" },
        { "trigger": "Gtk.ToolItem.props.visible_horizontal", "contents": "Gtk.ToolItem.props.visible_horizontal" },
        { "trigger": "Gtk.ToolItem.props.visible_vertical", "contents": "Gtk.ToolItem.props.visible_vertical" },
        { "trigger": "Gtk.ToolPalette", "contents": "Gtk.ToolPalette(**kwargs)" },
        { "trigger": "Gtk.ToolPalette.get_drag_target_group", "contents": "Gtk.ToolPalette.get_drag_target_group()" },
        { "trigger": "Gtk.ToolPalette.get_drag_target_item", "contents": "Gtk.ToolPalette.get_drag_target_item()" },
        { "trigger": "Gtk.ToolPalette.new", "contents": "Gtk.ToolPalette.new()" },
        { "trigger": "Gtk.ToolPalette.add_drag_dest", "contents": "Gtk.ToolPalette.add_drag_dest(widget, flags, targets, actions)" },
        { "trigger": "Gtk.ToolPalette.get_drag_item", "contents": "Gtk.ToolPalette.get_drag_item(selection)" },
        { "trigger": "Gtk.ToolPalette.get_drop_group", "contents": "Gtk.ToolPalette.get_drop_group(x, y)" },
        { "trigger": "Gtk.ToolPalette.get_drop_item", "contents": "Gtk.ToolPalette.get_drop_item(x, y)" },
        { "trigger": "Gtk.ToolPalette.get_exclusive", "contents": "Gtk.ToolPalette.get_exclusive(group)" },
        { "trigger": "Gtk.ToolPalette.get_expand", "contents": "Gtk.ToolPalette.get_expand(group)" },
        { "trigger": "Gtk.ToolPalette.get_group_position", "contents": "Gtk.ToolPalette.get_group_position(group)" },
        { "trigger": "Gtk.ToolPalette.get_hadjustment", "contents": "Gtk.ToolPalette.get_hadjustment()" },
        { "trigger": "Gtk.ToolPalette.get_icon_size", "contents": "Gtk.ToolPalette.get_icon_size()" },
        { "trigger": "Gtk.ToolPalette.get_style", "contents": "Gtk.ToolPalette.get_style()" },
        { "trigger": "Gtk.ToolPalette.get_vadjustment", "contents": "Gtk.ToolPalette.get_vadjustment()" },
        { "trigger": "Gtk.ToolPalette.set_drag_source", "contents": "Gtk.ToolPalette.set_drag_source(targets)" },
        { "trigger": "Gtk.ToolPalette.set_exclusive", "contents": "Gtk.ToolPalette.set_exclusive(group, exclusive)" },
        { "trigger": "Gtk.ToolPalette.set_expand", "contents": "Gtk.ToolPalette.set_expand(group, expand)" },
        { "trigger": "Gtk.ToolPalette.set_group_position", "contents": "Gtk.ToolPalette.set_group_position(group, position)" },
        { "trigger": "Gtk.ToolPalette.set_icon_size", "contents": "Gtk.ToolPalette.set_icon_size(icon_size)" },
        { "trigger": "Gtk.ToolPalette.set_style", "contents": "Gtk.ToolPalette.set_style(style)" },
        { "trigger": "Gtk.ToolPalette.unset_icon_size", "contents": "Gtk.ToolPalette.unset_icon_size()" },
        { "trigger": "Gtk.ToolPalette.unset_style", "contents": "Gtk.ToolPalette.unset_style()" },
        { "trigger": "Gtk.ToolPalette.props.icon_size", "contents": "Gtk.ToolPalette.props.icon_size" },
        { "trigger": "Gtk.ToolPalette.props.icon_size_set", "contents": "Gtk.ToolPalette.props.icon_size_set" },
        { "trigger": "Gtk.ToolPalette.props.toolbar_style", "contents": "Gtk.ToolPalette.props.toolbar_style" },
        { "trigger": "Gtk.Tooltip", "contents": "Gtk.Tooltip(**kwargs)" },
        { "trigger": "Gtk.Tooltip.trigger_tooltip_query", "contents": "Gtk.Tooltip.trigger_tooltip_query(display)" },
        { "trigger": "Gtk.Tooltip.set_custom", "contents": "Gtk.Tooltip.set_custom(custom_widget)" },
        { "trigger": "Gtk.Tooltip.set_icon", "contents": "Gtk.Tooltip.set_icon(pixbuf)" },
        { "trigger": "Gtk.Tooltip.set_icon_from_gicon", "contents": "Gtk.Tooltip.set_icon_from_gicon(gicon, size)" },
        { "trigger": "Gtk.Tooltip.set_icon_from_icon_name", "contents": "Gtk.Tooltip.set_icon_from_icon_name(icon_name, size)" },
        { "trigger": "Gtk.Tooltip.set_icon_from_stock", "contents": "Gtk.Tooltip.set_icon_from_stock(stock_id, size)" },
        { "trigger": "Gtk.Tooltip.set_markup", "contents": "Gtk.Tooltip.set_markup(markup)" },
        { "trigger": "Gtk.Tooltip.set_text", "contents": "Gtk.Tooltip.set_text(text)" },
        { "trigger": "Gtk.Tooltip.set_tip_area", "contents": "Gtk.Tooltip.set_tip_area(rect)" },
        { "trigger": "Gtk.ToplevelAccessible", "contents": "Gtk.ToplevelAccessible(**kwargs)" },
        { "trigger": "Gtk.ToplevelAccessible.get_children", "contents": "Gtk.ToplevelAccessible.get_children()" },
        { "trigger": "Gtk.TreeModelFilter", "contents": "Gtk.TreeModelFilter(**kwargs)" },
        { "trigger": "Gtk.TreeModelFilter.clear_cache", "contents": "Gtk.TreeModelFilter.clear_cache()" },
        { "trigger": "Gtk.TreeModelFilter.convert_child_iter_to_iter", "contents": "Gtk.TreeModelFilter.convert_child_iter_to_iter(child_iter)" },
        { "trigger": "Gtk.TreeModelFilter.convert_child_path_to_path", "contents": "Gtk.TreeModelFilter.convert_child_path_to_path(child_path)" },
        { "trigger": "Gtk.TreeModelFilter.convert_iter_to_child_iter", "contents": "Gtk.TreeModelFilter.convert_iter_to_child_iter(filter_iter)" },
        { "trigger": "Gtk.TreeModelFilter.convert_path_to_child_path", "contents": "Gtk.TreeModelFilter.convert_path_to_child_path(filter_path)" },
        { "trigger": "Gtk.TreeModelFilter.get_model", "contents": "Gtk.TreeModelFilter.get_model()" },
        { "trigger": "Gtk.TreeModelFilter.refilter", "contents": "Gtk.TreeModelFilter.refilter()" },
        { "trigger": "Gtk.TreeModelFilter.set_modify_func", "contents": "Gtk.TreeModelFilter.set_modify_func(types, func, *data)" },
        { "trigger": "Gtk.TreeModelFilter.set_value", "contents": "Gtk.TreeModelFilter.set_value(iter, column, value)" },
        { "trigger": "Gtk.TreeModelFilter.set_visible_column", "contents": "Gtk.TreeModelFilter.set_visible_column(column)" },
        { "trigger": "Gtk.TreeModelFilter.set_visible_func", "contents": "Gtk.TreeModelFilter.set_visible_func(func, *data)" },
        { "trigger": "Gtk.TreeModelFilter.do_modify", "contents": "Gtk.TreeModelFilter.do_modify(child_model, iter, value, column)" },
        { "trigger": "Gtk.TreeModelFilter.do_visible", "contents": "Gtk.TreeModelFilter.do_visible(child_model, iter)" },
        { "trigger": "Gtk.TreeModelFilter.props.child_model", "contents": "Gtk.TreeModelFilter.props.child_model" },
        { "trigger": "Gtk.TreeModelFilter.props.virtual_root", "contents": "Gtk.TreeModelFilter.props.virtual_root" },
        { "trigger": "Gtk.TreeModelRow", "contents": "Gtk.TreeModelRow(model, iter_or_path)" },
        { "trigger": "Gtk.TreeModelRow.iter", "contents": "Gtk.TreeModelRow.iter" },
        { "trigger": "Gtk.TreeModelRow.model", "contents": "Gtk.TreeModelRow.model" },
        { "trigger": "Gtk.TreeModelRow.next", "contents": "Gtk.TreeModelRow.next" },
        { "trigger": "Gtk.TreeModelRow.parent", "contents": "Gtk.TreeModelRow.parent" },
        { "trigger": "Gtk.TreeModelRow.path", "contents": "Gtk.TreeModelRow.path" },
        { "trigger": "Gtk.TreeModelRow.previous", "contents": "Gtk.TreeModelRow.previous" },
        { "trigger": "Gtk.TreeModelRow.get_next", "contents": "Gtk.TreeModelRow.get_next()" },
        { "trigger": "Gtk.TreeModelRow.get_parent", "contents": "Gtk.TreeModelRow.get_parent()" },
        { "trigger": "Gtk.TreeModelRow.get_previous", "contents": "Gtk.TreeModelRow.get_previous()" },
        { "trigger": "Gtk.TreeModelRow.iterchildren", "contents": "Gtk.TreeModelRow.iterchildren()" },
        { "trigger": "Gtk.TreeModelRowIter", "contents": "Gtk.TreeModelRowIter(model, aiter)" },
        { "trigger": "Gtk.TreeModelRowIter.next", "contents": "Gtk.TreeModelRowIter.next()" },
        { "trigger": "Gtk.TreeModelSort", "contents": "Gtk.TreeModelSort(*args, **kwargs)" },
        { "trigger": "Gtk.TreeModelSort.clear_cache", "contents": "Gtk.TreeModelSort.clear_cache()" },
        { "trigger": "Gtk.TreeModelSort.convert_child_iter_to_iter", "contents": "Gtk.TreeModelSort.convert_child_iter_to_iter(child_iter)" },
        { "trigger": "Gtk.TreeModelSort.convert_child_path_to_path", "contents": "Gtk.TreeModelSort.convert_child_path_to_path(child_path)" },
        { "trigger": "Gtk.TreeModelSort.convert_iter_to_child_iter", "contents": "Gtk.TreeModelSort.convert_iter_to_child_iter(sorted_iter)" },
        { "trigger": "Gtk.TreeModelSort.convert_path_to_child_path", "contents": "Gtk.TreeModelSort.convert_path_to_child_path(sorted_path)" },
        { "trigger": "Gtk.TreeModelSort.get_model", "contents": "Gtk.TreeModelSort.get_model()" },
        { "trigger": "Gtk.TreeModelSort.iter_is_valid", "contents": "Gtk.TreeModelSort.iter_is_valid(iter)" },
        { "trigger": "Gtk.TreeModelSort.reset_default_sort_func", "contents": "Gtk.TreeModelSort.reset_default_sort_func()" },
        { "trigger": "Gtk.TreeModelSort.props.model", "contents": "Gtk.TreeModelSort.props.model" },
        { "trigger": "Gtk.TreeSelection", "contents": "Gtk.TreeSelection(**kwargs)" },
        { "trigger": "Gtk.TreeSelection.count_selected_rows", "contents": "Gtk.TreeSelection.count_selected_rows()" },
        { "trigger": "Gtk.TreeSelection.get_mode", "contents": "Gtk.TreeSelection.get_mode()" },
        { "trigger": "Gtk.TreeSelection.get_selected", "contents": "Gtk.TreeSelection.get_selected()" },
        { "trigger": "Gtk.TreeSelection.get_selected_rows", "contents": "Gtk.TreeSelection.get_selected_rows()" },
        { "trigger": "Gtk.TreeSelection.get_tree_view", "contents": "Gtk.TreeSelection.get_tree_view()" },
        { "trigger": "Gtk.TreeSelection.iter_is_selected", "contents": "Gtk.TreeSelection.iter_is_selected(iter)" },
        { "trigger": "Gtk.TreeSelection.path_is_selected", "contents": "Gtk.TreeSelection.path_is_selected(path)" },
        { "trigger": "Gtk.TreeSelection.select_all", "contents": "Gtk.TreeSelection.select_all()" },
        { "trigger": "Gtk.TreeSelection.select_iter", "contents": "Gtk.TreeSelection.select_iter(iter)" },
        { "trigger": "Gtk.TreeSelection.select_path", "contents": "Gtk.TreeSelection.select_path(path)" },
        { "trigger": "Gtk.TreeSelection.select_range", "contents": "Gtk.TreeSelection.select_range(start_path, end_path)" },
        { "trigger": "Gtk.TreeSelection.selected_foreach", "contents": "Gtk.TreeSelection.selected_foreach(func, *data)" },
        { "trigger": "Gtk.TreeSelection.set_mode", "contents": "Gtk.TreeSelection.set_mode(type)" },
        { "trigger": "Gtk.TreeSelection.set_select_function", "contents": "Gtk.TreeSelection.set_select_function(func, *data)" },
        { "trigger": "Gtk.TreeSelection.unselect_all", "contents": "Gtk.TreeSelection.unselect_all()" },
        { "trigger": "Gtk.TreeSelection.unselect_iter", "contents": "Gtk.TreeSelection.unselect_iter(iter)" },
        { "trigger": "Gtk.TreeSelection.unselect_path", "contents": "Gtk.TreeSelection.unselect_path(path)" },
        { "trigger": "Gtk.TreeSelection.unselect_range", "contents": "Gtk.TreeSelection.unselect_range(start_path, end_path)" },
        { "trigger": "Gtk.TreeSelection.do_changed", "contents": "Gtk.TreeSelection.do_changed()" },
        { "trigger": "Gtk.TreeSelection.signals.changed", "contents": "Gtk.TreeSelection.signals.changed(tree_selection)" },
        { "trigger": "Gtk.TreeSelection.props.mode", "contents": "Gtk.TreeSelection.props.mode" },
        { "trigger": "Gtk.TreeStore", "contents": "Gtk.TreeStore(*column_types)" },
        { "trigger": "Gtk.TreeStore.new", "contents": "Gtk.TreeStore.new(types)" },
        { "trigger": "Gtk.TreeStore.append", "contents": "Gtk.TreeStore.append(parent, row=None)" },
        { "trigger": "Gtk.TreeStore.clear", "contents": "Gtk.TreeStore.clear()" },
        { "trigger": "Gtk.TreeStore.insert", "contents": "Gtk.TreeStore.insert(parent, position, row=None)" },
        { "trigger": "Gtk.TreeStore.insert_after", "contents": "Gtk.TreeStore.insert_after(parent, sibling)" },
        { "trigger": "Gtk.TreeStore.insert_before", "contents": "Gtk.TreeStore.insert_before(parent, sibling, row=None)" },
        { "trigger": "Gtk.TreeStore.insert_with_values", "contents": "Gtk.TreeStore.insert_with_values(parent, position, columns, values)" },
        { "trigger": "Gtk.TreeStore.is_ancestor", "contents": "Gtk.TreeStore.is_ancestor(iter, descendant)" },
        { "trigger": "Gtk.TreeStore.iter_depth", "contents": "Gtk.TreeStore.iter_depth(iter)" },
        { "trigger": "Gtk.TreeStore.iter_is_valid", "contents": "Gtk.TreeStore.iter_is_valid(iter)" },
        { "trigger": "Gtk.TreeStore.move_after", "contents": "Gtk.TreeStore.move_after(iter, position)" },
        { "trigger": "Gtk.TreeStore.move_before", "contents": "Gtk.TreeStore.move_before(iter, position)" },
        { "trigger": "Gtk.TreeStore.prepend", "contents": "Gtk.TreeStore.prepend(parent, row=None)" },
        { "trigger": "Gtk.TreeStore.remove", "contents": "Gtk.TreeStore.remove(iter)" },
        { "trigger": "Gtk.TreeStore.set", "contents": "Gtk.TreeStore.set(iter, columns, values)" },
        { "trigger": "Gtk.TreeStore.set_column_types", "contents": "Gtk.TreeStore.set_column_types(types)" },
        { "trigger": "Gtk.TreeStore.set_value", "contents": "Gtk.TreeStore.set_value(iter, column, value)" },
        { "trigger": "Gtk.TreeStore.swap", "contents": "Gtk.TreeStore.swap(a, b)" },
        { "trigger": "Gtk.TreeViewAccessible", "contents": "Gtk.TreeViewAccessible(**kwargs)" },
        { "trigger": "Gtk.TreeViewColumn", "contents": "Gtk.TreeViewColumn(title='', cell_renderer=None, **attributes)" },
        { "trigger": "Gtk.TreeViewColumn.new", "contents": "Gtk.TreeViewColumn.new()" },
        { "trigger": "Gtk.TreeViewColumn.new_with_area", "contents": "Gtk.TreeViewColumn.new_with_area(area)" },
        { "trigger": "Gtk.TreeViewColumn.add_attribute", "contents": "Gtk.TreeViewColumn.add_attribute(cell_renderer, attribute, column)" },
        { "trigger": "Gtk.TreeViewColumn.cell_get_position", "contents": "Gtk.TreeViewColumn.cell_get_position(cell_renderer)" },
        { "trigger": "Gtk.TreeViewColumn.cell_get_size", "contents": "Gtk.TreeViewColumn.cell_get_size(cell_area)" },
        { "trigger": "Gtk.TreeViewColumn.cell_is_visible", "contents": "Gtk.TreeViewColumn.cell_is_visible()" },
        { "trigger": "Gtk.TreeViewColumn.cell_set_cell_data", "contents": "Gtk.TreeViewColumn.cell_set_cell_data(tree_model, iter, is_expander, is_expanded)" },
        { "trigger": "Gtk.TreeViewColumn.clear", "contents": "Gtk.TreeViewColumn.clear()" },
        { "trigger": "Gtk.TreeViewColumn.clear_attributes", "contents": "Gtk.TreeViewColumn.clear_attributes(cell_renderer)" },
        { "trigger": "Gtk.TreeViewColumn.clicked", "contents": "Gtk.TreeViewColumn.clicked()" },
        { "trigger": "Gtk.TreeViewColumn.focus_cell", "contents": "Gtk.TreeViewColumn.focus_cell(cell)" },
        { "trigger": "Gtk.TreeViewColumn.get_alignment", "contents": "Gtk.TreeViewColumn.get_alignment()" },
        { "trigger": "Gtk.TreeViewColumn.get_button", "contents": "Gtk.TreeViewColumn.get_button()" },
        { "trigger": "Gtk.TreeViewColumn.get_clickable", "contents": "Gtk.TreeViewColumn.get_clickable()" },
        { "trigger": "Gtk.TreeViewColumn.get_expand", "contents": "Gtk.TreeViewColumn.get_expand()" },
        { "trigger": "Gtk.TreeViewColumn.get_fixed_width", "contents": "Gtk.TreeViewColumn.get_fixed_width()" },
        { "trigger": "Gtk.TreeViewColumn.get_max_width", "contents": "Gtk.TreeViewColumn.get_max_width()" },
        { "trigger": "Gtk.TreeViewColumn.get_min_width", "contents": "Gtk.TreeViewColumn.get_min_width()" },
        { "trigger": "Gtk.TreeViewColumn.get_reorderable", "contents": "Gtk.TreeViewColumn.get_reorderable()" },
        { "trigger": "Gtk.TreeViewColumn.get_resizable", "contents": "Gtk.TreeViewColumn.get_resizable()" },
        { "trigger": "Gtk.TreeViewColumn.get_sizing", "contents": "Gtk.TreeViewColumn.get_sizing()" },
        { "trigger": "Gtk.TreeViewColumn.get_sort_column_id", "contents": "Gtk.TreeViewColumn.get_sort_column_id()" },
        { "trigger": "Gtk.TreeViewColumn.get_sort_indicator", "contents": "Gtk.TreeViewColumn.get_sort_indicator()" },
        { "trigger": "Gtk.TreeViewColumn.get_sort_order", "contents": "Gtk.TreeViewColumn.get_sort_order()" },
        { "trigger": "Gtk.TreeViewColumn.get_spacing", "contents": "Gtk.TreeViewColumn.get_spacing()" },
        { "trigger": "Gtk.TreeViewColumn.get_title", "contents": "Gtk.TreeViewColumn.get_title()" },
        { "trigger": "Gtk.TreeViewColumn.get_tree_view", "contents": "Gtk.TreeViewColumn.get_tree_view()" },
        { "trigger": "Gtk.TreeViewColumn.get_visible", "contents": "Gtk.TreeViewColumn.get_visible()" },
        { "trigger": "Gtk.TreeViewColumn.get_widget", "contents": "Gtk.TreeViewColumn.get_widget()" },
        { "trigger": "Gtk.TreeViewColumn.get_width", "contents": "Gtk.TreeViewColumn.get_width()" },
        { "trigger": "Gtk.TreeViewColumn.get_x_offset", "contents": "Gtk.TreeViewColumn.get_x_offset()" },
        { "trigger": "Gtk.TreeViewColumn.pack_end", "contents": "Gtk.TreeViewColumn.pack_end(cell, expand)" },
        { "trigger": "Gtk.TreeViewColumn.pack_start", "contents": "Gtk.TreeViewColumn.pack_start(cell, expand)" },
        { "trigger": "Gtk.TreeViewColumn.queue_resize", "contents": "Gtk.TreeViewColumn.queue_resize()" },
        { "trigger": "Gtk.TreeViewColumn.set_alignment", "contents": "Gtk.TreeViewColumn.set_alignment(xalign)" },
        { "trigger": "Gtk.TreeViewColumn.set_attributes", "contents": "Gtk.TreeViewColumn.set_attributes(cell_renderer, **attributes)" },
        { "trigger": "Gtk.TreeViewColumn.set_cell_data_func", "contents": "Gtk.TreeViewColumn.set_cell_data_func(cell_renderer, func, *func_data)" },
        { "trigger": "Gtk.TreeViewColumn.set_clickable", "contents": "Gtk.TreeViewColumn.set_clickable(clickable)" },
        { "trigger": "Gtk.TreeViewColumn.set_expand", "contents": "Gtk.TreeViewColumn.set_expand(expand)" },
        { "trigger": "Gtk.TreeViewColumn.set_fixed_width", "contents": "Gtk.TreeViewColumn.set_fixed_width(fixed_width)" },
        { "trigger": "Gtk.TreeViewColumn.set_max_width", "contents": "Gtk.TreeViewColumn.set_max_width(max_width)" },
        { "trigger": "Gtk.TreeViewColumn.set_min_width", "contents": "Gtk.TreeViewColumn.set_min_width(min_width)" },
        { "trigger": "Gtk.TreeViewColumn.set_reorderable", "contents": "Gtk.TreeViewColumn.set_reorderable(reorderable)" },
        { "trigger": "Gtk.TreeViewColumn.set_resizable", "contents": "Gtk.TreeViewColumn.set_resizable(resizable)" },
        { "trigger": "Gtk.TreeViewColumn.set_sizing", "contents": "Gtk.TreeViewColumn.set_sizing(type)" },
        { "trigger": "Gtk.TreeViewColumn.set_sort_column_id", "contents": "Gtk.TreeViewColumn.set_sort_column_id(sort_column_id)" },
        { "trigger": "Gtk.TreeViewColumn.set_sort_indicator", "contents": "Gtk.TreeViewColumn.set_sort_indicator(setting)" },
        { "trigger": "Gtk.TreeViewColumn.set_sort_order", "contents": "Gtk.TreeViewColumn.set_sort_order(order)" },
        { "trigger": "Gtk.TreeViewColumn.set_spacing", "contents": "Gtk.TreeViewColumn.set_spacing(spacing)" },
        { "trigger": "Gtk.TreeViewColumn.set_title", "contents": "Gtk.TreeViewColumn.set_title(title)" },
        { "trigger": "Gtk.TreeViewColumn.set_visible", "contents": "Gtk.TreeViewColumn.set_visible(visible)" },
        { "trigger": "Gtk.TreeViewColumn.set_widget", "contents": "Gtk.TreeViewColumn.set_widget(widget)" },
        { "trigger": "Gtk.TreeViewColumn.do_clicked", "contents": "Gtk.TreeViewColumn.do_clicked()" },
        { "trigger": "Gtk.TreeViewColumn.signals.clicked", "contents": "Gtk.TreeViewColumn.signals.clicked(tree_view_column)" },
        { "trigger": "Gtk.TreeViewColumn.props.alignment", "contents": "Gtk.TreeViewColumn.props.alignment" },
        { "trigger": "Gtk.TreeViewColumn.props.cell_area", "contents": "Gtk.TreeViewColumn.props.cell_area" },
        { "trigger": "Gtk.TreeViewColumn.props.clickable", "contents": "Gtk.TreeViewColumn.props.clickable" },
        { "trigger": "Gtk.TreeViewColumn.props.expand", "contents": "Gtk.TreeViewColumn.props.expand" },
        { "trigger": "Gtk.TreeViewColumn.props.fixed_width", "contents": "Gtk.TreeViewColumn.props.fixed_width" },
        { "trigger": "Gtk.TreeViewColumn.props.max_width", "contents": "Gtk.TreeViewColumn.props.max_width" },
        { "trigger": "Gtk.TreeViewColumn.props.min_width", "contents": "Gtk.TreeViewColumn.props.min_width" },
        { "trigger": "Gtk.TreeViewColumn.props.reorderable", "contents": "Gtk.TreeViewColumn.props.reorderable" },
        { "trigger": "Gtk.TreeViewColumn.props.resizable", "contents": "Gtk.TreeViewColumn.props.resizable" },
        { "trigger": "Gtk.TreeViewColumn.props.sizing", "contents": "Gtk.TreeViewColumn.props.sizing" },
        { "trigger": "Gtk.TreeViewColumn.props.sort_column_id", "contents": "Gtk.TreeViewColumn.props.sort_column_id" },
        { "trigger": "Gtk.TreeViewColumn.props.sort_indicator", "contents": "Gtk.TreeViewColumn.props.sort_indicator" },
        { "trigger": "Gtk.TreeViewColumn.props.sort_order", "contents": "Gtk.TreeViewColumn.props.sort_order" },
        { "trigger": "Gtk.TreeViewColumn.props.spacing", "contents": "Gtk.TreeViewColumn.props.spacing" },
        { "trigger": "Gtk.TreeViewColumn.props.title", "contents": "Gtk.TreeViewColumn.props.title" },
        { "trigger": "Gtk.TreeViewColumn.props.visible", "contents": "Gtk.TreeViewColumn.props.visible" },
        { "trigger": "Gtk.TreeViewColumn.props.widget", "contents": "Gtk.TreeViewColumn.props.widget" },
        { "trigger": "Gtk.TreeViewColumn.props.width", "contents": "Gtk.TreeViewColumn.props.width" },
        { "trigger": "Gtk.TreeViewColumn.props.x_offset", "contents": "Gtk.TreeViewColumn.props.x_offset" },
        { "trigger": "Gtk.TreeView", "contents": "Gtk.TreeView(*args, **kwargs)" },
        { "trigger": "Gtk.TreeView.new", "contents": "Gtk.TreeView.new()" },
        { "trigger": "Gtk.TreeView.new_with_model", "contents": "Gtk.TreeView.new_with_model(model)" },
        { "trigger": "Gtk.TreeView.append_column", "contents": "Gtk.TreeView.append_column(column)" },
        { "trigger": "Gtk.TreeView.collapse_all", "contents": "Gtk.TreeView.collapse_all()" },
        { "trigger": "Gtk.TreeView.collapse_row", "contents": "Gtk.TreeView.collapse_row(path)" },
        { "trigger": "Gtk.TreeView.columns_autosize", "contents": "Gtk.TreeView.columns_autosize()" },
        { "trigger": "Gtk.TreeView.convert_bin_window_to_tree_coords", "contents": "Gtk.TreeView.convert_bin_window_to_tree_coords(bx, by)" },
        { "trigger": "Gtk.TreeView.convert_bin_window_to_widget_coords", "contents": "Gtk.TreeView.convert_bin_window_to_widget_coords(bx, by)" },
        { "trigger": "Gtk.TreeView.convert_tree_to_bin_window_coords", "contents": "Gtk.TreeView.convert_tree_to_bin_window_coords(tx, ty)" },
        { "trigger": "Gtk.TreeView.convert_tree_to_widget_coords", "contents": "Gtk.TreeView.convert_tree_to_widget_coords(tx, ty)" },
        { "trigger": "Gtk.TreeView.convert_widget_to_bin_window_coords", "contents": "Gtk.TreeView.convert_widget_to_bin_window_coords(wx, wy)" },
        { "trigger": "Gtk.TreeView.convert_widget_to_tree_coords", "contents": "Gtk.TreeView.convert_widget_to_tree_coords(wx, wy)" },
        { "trigger": "Gtk.TreeView.create_row_drag_icon", "contents": "Gtk.TreeView.create_row_drag_icon(path)" },
        { "trigger": "Gtk.TreeView.enable_model_drag_dest", "contents": "Gtk.TreeView.enable_model_drag_dest(targets, actions)" },
        { "trigger": "Gtk.TreeView.enable_model_drag_source", "contents": "Gtk.TreeView.enable_model_drag_source(start_button_mask, targets, actions)" },
        { "trigger": "Gtk.TreeView.expand_all", "contents": "Gtk.TreeView.expand_all()" },
        { "trigger": "Gtk.TreeView.expand_row", "contents": "Gtk.TreeView.expand_row(path, open_all)" },
        { "trigger": "Gtk.TreeView.expand_to_path", "contents": "Gtk.TreeView.expand_to_path(path)" },
        { "trigger": "Gtk.TreeView.get_activate_on_single_click", "contents": "Gtk.TreeView.get_activate_on_single_click()" },
        { "trigger": "Gtk.TreeView.get_background_area", "contents": "Gtk.TreeView.get_background_area(path, column)" },
        { "trigger": "Gtk.TreeView.get_bin_window", "contents": "Gtk.TreeView.get_bin_window()" },
        { "trigger": "Gtk.TreeView.get_cell_area", "contents": "Gtk.TreeView.get_cell_area(path, column)" },
        { "trigger": "Gtk.TreeView.get_column", "contents": "Gtk.TreeView.get_column(n)" },
        { "trigger": "Gtk.TreeView.get_columns", "contents": "Gtk.TreeView.get_columns()" },
        { "trigger": "Gtk.TreeView.get_cursor", "contents": "Gtk.TreeView.get_cursor()" },
        { "trigger": "Gtk.TreeView.get_dest_row_at_pos", "contents": "Gtk.TreeView.get_dest_row_at_pos(drag_x, drag_y)" },
        { "trigger": "Gtk.TreeView.get_drag_dest_row", "contents": "Gtk.TreeView.get_drag_dest_row()" },
        { "trigger": "Gtk.TreeView.get_enable_search", "contents": "Gtk.TreeView.get_enable_search()" },
        { "trigger": "Gtk.TreeView.get_enable_tree_lines", "contents": "Gtk.TreeView.get_enable_tree_lines()" },
        { "trigger": "Gtk.TreeView.get_expander_column", "contents": "Gtk.TreeView.get_expander_column()" },
        { "trigger": "Gtk.TreeView.get_fixed_height_mode", "contents": "Gtk.TreeView.get_fixed_height_mode()" },
        { "trigger": "Gtk.TreeView.get_grid_lines", "contents": "Gtk.TreeView.get_grid_lines()" },
        { "trigger": "Gtk.TreeView.get_hadjustment", "contents": "Gtk.TreeView.get_hadjustment()" },
        { "trigger": "Gtk.TreeView.get_headers_clickable", "contents": "Gtk.TreeView.get_headers_clickable()" },
        { "trigger": "Gtk.TreeView.get_headers_visible", "contents": "Gtk.TreeView.get_headers_visible()" },
        { "trigger": "Gtk.TreeView.get_hover_expand", "contents": "Gtk.TreeView.get_hover_expand()" },
        { "trigger": "Gtk.TreeView.get_hover_selection", "contents": "Gtk.TreeView.get_hover_selection()" },
        { "trigger": "Gtk.TreeView.get_level_indentation", "contents": "Gtk.TreeView.get_level_indentation()" },
        { "trigger": "Gtk.TreeView.get_model", "contents": "Gtk.TreeView.get_model()" },
        { "trigger": "Gtk.TreeView.get_n_columns", "contents": "Gtk.TreeView.get_n_columns()" },
        { "trigger": "Gtk.TreeView.get_path_at_pos", "contents": "Gtk.TreeView.get_path_at_pos(x, y)" },
        { "trigger": "Gtk.TreeView.get_reorderable", "contents": "Gtk.TreeView.get_reorderable()" },
        { "trigger": "Gtk.TreeView.get_rubber_banding", "contents": "Gtk.TreeView.get_rubber_banding()" },
        { "trigger": "Gtk.TreeView.get_rules_hint", "contents": "Gtk.TreeView.get_rules_hint()" },
        { "trigger": "Gtk.TreeView.get_search_column", "contents": "Gtk.TreeView.get_search_column()" },
        { "trigger": "Gtk.TreeView.get_search_entry", "contents": "Gtk.TreeView.get_search_entry()" },
        { "trigger": "Gtk.TreeView.get_selection", "contents": "Gtk.TreeView.get_selection()" },
        { "trigger": "Gtk.TreeView.get_show_expanders", "contents": "Gtk.TreeView.get_show_expanders()" },
        { "trigger": "Gtk.TreeView.get_tooltip_column", "contents": "Gtk.TreeView.get_tooltip_column()" },
        { "trigger": "Gtk.TreeView.get_tooltip_context", "contents": "Gtk.TreeView.get_tooltip_context(x, y, keyboard_tip)" },
        { "trigger": "Gtk.TreeView.get_vadjustment", "contents": "Gtk.TreeView.get_vadjustment()" },
        { "trigger": "Gtk.TreeView.get_visible_range", "contents": "Gtk.TreeView.get_visible_range()" },
        { "trigger": "Gtk.TreeView.get_visible_rect", "contents": "Gtk.TreeView.get_visible_rect()" },
        { "trigger": "Gtk.TreeView.insert_column", "contents": "Gtk.TreeView.insert_column(column, position)" },
        { "trigger": "Gtk.TreeView.insert_column_with_attributes", "contents": "Gtk.TreeView.insert_column_with_attributes(position, title, cell, **kwargs)" },
        { "trigger": "Gtk.TreeView.insert_column_with_data_func", "contents": "Gtk.TreeView.insert_column_with_data_func(position, title, cell, func, *data)" },
        { "trigger": "Gtk.TreeView.is_blank_at_pos", "contents": "Gtk.TreeView.is_blank_at_pos(x, y)" },
        { "trigger": "Gtk.TreeView.is_rubber_banding_active", "contents": "Gtk.TreeView.is_rubber_banding_active()" },
        { "trigger": "Gtk.TreeView.map_expanded_rows", "contents": "Gtk.TreeView.map_expanded_rows(func, *data)" },
        { "trigger": "Gtk.TreeView.move_column_after", "contents": "Gtk.TreeView.move_column_after(column, base_column)" },
        { "trigger": "Gtk.TreeView.remove_column", "contents": "Gtk.TreeView.remove_column(column)" },
        { "trigger": "Gtk.TreeView.row_activated", "contents": "Gtk.TreeView.row_activated(path, column)" },
        { "trigger": "Gtk.TreeView.row_expanded", "contents": "Gtk.TreeView.row_expanded(path)" },
        { "trigger": "Gtk.TreeView.scroll_to_cell", "contents": "Gtk.TreeView.scroll_to_cell(path, column, use_align, row_align, col_align)" },
        { "trigger": "Gtk.TreeView.scroll_to_point", "contents": "Gtk.TreeView.scroll_to_point(tree_x, tree_y)" },
        { "trigger": "Gtk.TreeView.set_activate_on_single_click", "contents": "Gtk.TreeView.set_activate_on_single_click(single)" },
        { "trigger": "Gtk.TreeView.set_column_drag_function", "contents": "Gtk.TreeView.set_column_drag_function(func, *user_data)" },
        { "trigger": "Gtk.TreeView.set_cursor", "contents": "Gtk.TreeView.set_cursor(path, focus_column, start_editing)" },
        { "trigger": "Gtk.TreeView.set_cursor_on_cell", "contents": "Gtk.TreeView.set_cursor_on_cell(path, focus_column, focus_cell, start_editing)" },
        { "trigger": "Gtk.TreeView.set_destroy_count_func", "contents": "Gtk.TreeView.set_destroy_count_func(func, *data)" },
        { "trigger": "Gtk.TreeView.set_drag_dest_row", "contents": "Gtk.TreeView.set_drag_dest_row(path, pos)" },
        { "trigger": "Gtk.TreeView.set_enable_search", "contents": "Gtk.TreeView.set_enable_search(enable_search)" },
        { "trigger": "Gtk.TreeView.set_enable_tree_lines", "contents": "Gtk.TreeView.set_enable_tree_lines(enabled)" },
        { "trigger": "Gtk.TreeView.set_expander_column", "contents": "Gtk.TreeView.set_expander_column(column)" },
        { "trigger": "Gtk.TreeView.set_fixed_height_mode", "contents": "Gtk.TreeView.set_fixed_height_mode(enable)" },
        { "trigger": "Gtk.TreeView.set_grid_lines", "contents": "Gtk.TreeView.set_grid_lines(grid_lines)" },
        { "trigger": "Gtk.TreeView.set_hadjustment", "contents": "Gtk.TreeView.set_hadjustment(adjustment)" },
        { "trigger": "Gtk.TreeView.set_headers_clickable", "contents": "Gtk.TreeView.set_headers_clickable(setting)" },
        { "trigger": "Gtk.TreeView.set_headers_visible", "contents": "Gtk.TreeView.set_headers_visible(headers_visible)" },
        { "trigger": "Gtk.TreeView.set_hover_expand", "contents": "Gtk.TreeView.set_hover_expand(expand)" },
        { "trigger": "Gtk.TreeView.set_hover_selection", "contents": "Gtk.TreeView.set_hover_selection(hover)" },
        { "trigger": "Gtk.TreeView.set_level_indentation", "contents": "Gtk.TreeView.set_level_indentation(indentation)" },
        { "trigger": "Gtk.TreeView.set_model", "contents": "Gtk.TreeView.set_model(model)" },
        { "trigger": "Gtk.TreeView.set_reorderable", "contents": "Gtk.TreeView.set_reorderable(reorderable)" },
        { "trigger": "Gtk.TreeView.set_row_separator_func", "contents": "Gtk.TreeView.set_row_separator_func(func, *data)" },
        { "trigger": "Gtk.TreeView.set_rubber_banding", "contents": "Gtk.TreeView.set_rubber_banding(enable)" },
        { "trigger": "Gtk.TreeView.set_rules_hint", "contents": "Gtk.TreeView.set_rules_hint(setting)" },
        { "trigger": "Gtk.TreeView.set_search_column", "contents": "Gtk.TreeView.set_search_column(column)" },
        { "trigger": "Gtk.TreeView.set_search_entry", "contents": "Gtk.TreeView.set_search_entry(entry)" },
        { "trigger": "Gtk.TreeView.set_search_equal_func", "contents": "Gtk.TreeView.set_search_equal_func(search_equal_func, *search_user_data)" },
        { "trigger": "Gtk.TreeView.set_search_position_func", "contents": "Gtk.TreeView.set_search_position_func(func, *data)" },
        { "trigger": "Gtk.TreeView.set_show_expanders", "contents": "Gtk.TreeView.set_show_expanders(enabled)" },
        { "trigger": "Gtk.TreeView.set_tooltip_cell", "contents": "Gtk.TreeView.set_tooltip_cell(tooltip, path, column, cell)" },
        { "trigger": "Gtk.TreeView.set_tooltip_column", "contents": "Gtk.TreeView.set_tooltip_column(column)" },
        { "trigger": "Gtk.TreeView.set_tooltip_row", "contents": "Gtk.TreeView.set_tooltip_row(tooltip, path)" },
        { "trigger": "Gtk.TreeView.set_vadjustment", "contents": "Gtk.TreeView.set_vadjustment(adjustment)" },
        { "trigger": "Gtk.TreeView.unset_rows_drag_dest", "contents": "Gtk.TreeView.unset_rows_drag_dest()" },
        { "trigger": "Gtk.TreeView.unset_rows_drag_source", "contents": "Gtk.TreeView.unset_rows_drag_source()" },
        { "trigger": "Gtk.TreeView.do_columns_changed", "contents": "Gtk.TreeView.do_columns_changed()" },
        { "trigger": "Gtk.TreeView.do_cursor_changed", "contents": "Gtk.TreeView.do_cursor_changed()" },
        { "trigger": "Gtk.TreeView.do_expand_collapse_cursor_row", "contents": "Gtk.TreeView.do_expand_collapse_cursor_row(logical, expand, open_all)" },
        { "trigger": "Gtk.TreeView.do_move_cursor", "contents": "Gtk.TreeView.do_move_cursor(step, count)" },
        { "trigger": "Gtk.TreeView.do_row_activated", "contents": "Gtk.TreeView.do_row_activated(path, column)" },
        { "trigger": "Gtk.TreeView.do_row_collapsed", "contents": "Gtk.TreeView.do_row_collapsed(iter, path)" },
        { "trigger": "Gtk.TreeView.do_row_expanded", "contents": "Gtk.TreeView.do_row_expanded(iter, path)" },
        { "trigger": "Gtk.TreeView.do_select_all", "contents": "Gtk.TreeView.do_select_all()" },
        { "trigger": "Gtk.TreeView.do_select_cursor_parent", "contents": "Gtk.TreeView.do_select_cursor_parent()" },
        { "trigger": "Gtk.TreeView.do_select_cursor_row", "contents": "Gtk.TreeView.do_select_cursor_row(start_editing)" },
        { "trigger": "Gtk.TreeView.do_start_interactive_search", "contents": "Gtk.TreeView.do_start_interactive_search()" },
        { "trigger": "Gtk.TreeView.do_test_collapse_row", "contents": "Gtk.TreeView.do_test_collapse_row(iter, path)" },
        { "trigger": "Gtk.TreeView.do_test_expand_row", "contents": "Gtk.TreeView.do_test_expand_row(iter, path)" },
        { "trigger": "Gtk.TreeView.do_toggle_cursor_row", "contents": "Gtk.TreeView.do_toggle_cursor_row()" },
        { "trigger": "Gtk.TreeView.do_unselect_all", "contents": "Gtk.TreeView.do_unselect_all()" },
        { "trigger": "Gtk.TreeView.signals.columns_changed", "contents": "Gtk.TreeView.signals.columns_changed(tree_view)" },
        { "trigger": "Gtk.TreeView.signals.cursor_changed", "contents": "Gtk.TreeView.signals.cursor_changed(tree_view)" },
        { "trigger": "Gtk.TreeView.signals.expand_collapse_cursor_row", "contents": "Gtk.TreeView.signals.expand_collapse_cursor_row(tree_view, object, p0, p1)" },
        { "trigger": "Gtk.TreeView.signals.move_cursor", "contents": "Gtk.TreeView.signals.move_cursor(tree_view, step, direction)" },
        { "trigger": "Gtk.TreeView.signals.row_activated", "contents": "Gtk.TreeView.signals.row_activated(tree_view, path, column)" },
        { "trigger": "Gtk.TreeView.signals.row_collapsed", "contents": "Gtk.TreeView.signals.row_collapsed(tree_view, iter, path)" },
        { "trigger": "Gtk.TreeView.signals.row_expanded", "contents": "Gtk.TreeView.signals.row_expanded(tree_view, iter, path)" },
        { "trigger": "Gtk.TreeView.signals.select_all", "contents": "Gtk.TreeView.signals.select_all(tree_view)" },
        { "trigger": "Gtk.TreeView.signals.select_cursor_parent", "contents": "Gtk.TreeView.signals.select_cursor_parent(tree_view)" },
        { "trigger": "Gtk.TreeView.signals.select_cursor_row", "contents": "Gtk.TreeView.signals.select_cursor_row(tree_view, object)" },
        { "trigger": "Gtk.TreeView.signals.start_interactive_search", "contents": "Gtk.TreeView.signals.start_interactive_search(tree_view)" },
        { "trigger": "Gtk.TreeView.signals.test_collapse_row", "contents": "Gtk.TreeView.signals.test_collapse_row(tree_view, iter, path)" },
        { "trigger": "Gtk.TreeView.signals.test_expand_row", "contents": "Gtk.TreeView.signals.test_expand_row(tree_view, iter, path)" },
        { "trigger": "Gtk.TreeView.signals.toggle_cursor_row", "contents": "Gtk.TreeView.signals.toggle_cursor_row(tree_view)" },
        { "trigger": "Gtk.TreeView.signals.unselect_all", "contents": "Gtk.TreeView.signals.unselect_all(tree_view)" },
        { "trigger": "Gtk.TreeView.props.activate_on_single_click", "contents": "Gtk.TreeView.props.activate_on_single_click" },
        { "trigger": "Gtk.TreeView.props.enable_grid_lines", "contents": "Gtk.TreeView.props.enable_grid_lines" },
        { "trigger": "Gtk.TreeView.props.enable_search", "contents": "Gtk.TreeView.props.enable_search" },
        { "trigger": "Gtk.TreeView.props.enable_tree_lines", "contents": "Gtk.TreeView.props.enable_tree_lines" },
        { "trigger": "Gtk.TreeView.props.expander_column", "contents": "Gtk.TreeView.props.expander_column" },
        { "trigger": "Gtk.TreeView.props.fixed_height_mode", "contents": "Gtk.TreeView.props.fixed_height_mode" },
        { "trigger": "Gtk.TreeView.props.headers_clickable", "contents": "Gtk.TreeView.props.headers_clickable" },
        { "trigger": "Gtk.TreeView.props.headers_visible", "contents": "Gtk.TreeView.props.headers_visible" },
        { "trigger": "Gtk.TreeView.props.hover_expand", "contents": "Gtk.TreeView.props.hover_expand" },
        { "trigger": "Gtk.TreeView.props.hover_selection", "contents": "Gtk.TreeView.props.hover_selection" },
        { "trigger": "Gtk.TreeView.props.level_indentation", "contents": "Gtk.TreeView.props.level_indentation" },
        { "trigger": "Gtk.TreeView.props.model", "contents": "Gtk.TreeView.props.model" },
        { "trigger": "Gtk.TreeView.props.reorderable", "contents": "Gtk.TreeView.props.reorderable" },
        { "trigger": "Gtk.TreeView.props.rubber_banding", "contents": "Gtk.TreeView.props.rubber_banding" },
        { "trigger": "Gtk.TreeView.props.rules_hint", "contents": "Gtk.TreeView.props.rules_hint" },
        { "trigger": "Gtk.TreeView.props.search_column", "contents": "Gtk.TreeView.props.search_column" },
        { "trigger": "Gtk.TreeView.props.show_expanders", "contents": "Gtk.TreeView.props.show_expanders" },
        { "trigger": "Gtk.TreeView.props.tooltip_column", "contents": "Gtk.TreeView.props.tooltip_column" },
        { "trigger": "Gtk.UIManager", "contents": "Gtk.UIManager(**kwargs)" },
        { "trigger": "Gtk.UIManager.new", "contents": "Gtk.UIManager.new()" },
        { "trigger": "Gtk.UIManager.add_ui", "contents": "Gtk.UIManager.add_ui(merge_id, path, name, action, type, top)" },
        { "trigger": "Gtk.UIManager.add_ui_from_file", "contents": "Gtk.UIManager.add_ui_from_file(filename)" },
        { "trigger": "Gtk.UIManager.add_ui_from_resource", "contents": "Gtk.UIManager.add_ui_from_resource(resource_path)" },
        { "trigger": "Gtk.UIManager.add_ui_from_string", "contents": "Gtk.UIManager.add_ui_from_string(buffer, length=-1)" },
        { "trigger": "Gtk.UIManager.ensure_update", "contents": "Gtk.UIManager.ensure_update()" },
        { "trigger": "Gtk.UIManager.get_accel_group", "contents": "Gtk.UIManager.get_accel_group()" },
        { "trigger": "Gtk.UIManager.get_action", "contents": "Gtk.UIManager.get_action(path)" },
        { "trigger": "Gtk.UIManager.get_action_groups", "contents": "Gtk.UIManager.get_action_groups()" },
        { "trigger": "Gtk.UIManager.get_add_tearoffs", "contents": "Gtk.UIManager.get_add_tearoffs()" },
        { "trigger": "Gtk.UIManager.get_toplevels", "contents": "Gtk.UIManager.get_toplevels(types)" },
        { "trigger": "Gtk.UIManager.get_ui", "contents": "Gtk.UIManager.get_ui()" },
        { "trigger": "Gtk.UIManager.get_widget", "contents": "Gtk.UIManager.get_widget(path)" },
        { "trigger": "Gtk.UIManager.insert_action_group", "contents": "Gtk.UIManager.insert_action_group(action_group, pos)" },
        { "trigger": "Gtk.UIManager.new_merge_id", "contents": "Gtk.UIManager.new_merge_id()" },
        { "trigger": "Gtk.UIManager.remove_action_group", "contents": "Gtk.UIManager.remove_action_group(action_group)" },
        { "trigger": "Gtk.UIManager.remove_ui", "contents": "Gtk.UIManager.remove_ui(merge_id)" },
        { "trigger": "Gtk.UIManager.set_add_tearoffs", "contents": "Gtk.UIManager.set_add_tearoffs(add_tearoffs)" },
        { "trigger": "Gtk.UIManager.do_actions_changed", "contents": "Gtk.UIManager.do_actions_changed()" },
        { "trigger": "Gtk.UIManager.do_add_widget", "contents": "Gtk.UIManager.do_add_widget(widget)" },
        { "trigger": "Gtk.UIManager.do_connect_proxy", "contents": "Gtk.UIManager.do_connect_proxy(action, proxy)" },
        { "trigger": "Gtk.UIManager.do_disconnect_proxy", "contents": "Gtk.UIManager.do_disconnect_proxy(action, proxy)" },
        { "trigger": "Gtk.UIManager.do_get_action", "contents": "Gtk.UIManager.do_get_action(path)" },
        { "trigger": "Gtk.UIManager.do_get_widget", "contents": "Gtk.UIManager.do_get_widget(path)" },
        { "trigger": "Gtk.UIManager.do_post_activate", "contents": "Gtk.UIManager.do_post_activate(action)" },
        { "trigger": "Gtk.UIManager.do_pre_activate", "contents": "Gtk.UIManager.do_pre_activate(action)" },
        { "trigger": "Gtk.UIManager.signals.actions_changed", "contents": "Gtk.UIManager.signals.actions_changed(u_i_manager)" },
        { "trigger": "Gtk.UIManager.signals.add_widget", "contents": "Gtk.UIManager.signals.add_widget(u_i_manager, widget)" },
        { "trigger": "Gtk.UIManager.signals.connect_proxy", "contents": "Gtk.UIManager.signals.connect_proxy(u_i_manager, action, proxy)" },
        { "trigger": "Gtk.UIManager.signals.disconnect_proxy", "contents": "Gtk.UIManager.signals.disconnect_proxy(u_i_manager, action, proxy)" },
        { "trigger": "Gtk.UIManager.signals.post_activate", "contents": "Gtk.UIManager.signals.post_activate(u_i_manager, action)" },
        { "trigger": "Gtk.UIManager.signals.pre_activate", "contents": "Gtk.UIManager.signals.pre_activate(u_i_manager, action)" },
        { "trigger": "Gtk.UIManager.props.add_tearoffs", "contents": "Gtk.UIManager.props.add_tearoffs" },
        { "trigger": "Gtk.UIManager.props.ui", "contents": "Gtk.UIManager.props.ui" },
        { "trigger": "Gtk.VBox", "contents": "Gtk.VBox(*args, **kwargs)" },
        { "trigger": "Gtk.VBox.new", "contents": "Gtk.VBox.new(homogeneous, spacing)" },
        { "trigger": "Gtk.VButtonBox", "contents": "Gtk.VButtonBox(*args, **kwargs)" },
        { "trigger": "Gtk.VButtonBox.new", "contents": "Gtk.VButtonBox.new()" },
        { "trigger": "Gtk.Viewport", "contents": "Gtk.Viewport(*args, **kwargs)" },
        { "trigger": "Gtk.Viewport.new", "contents": "Gtk.Viewport.new(hadjustment, vadjustment)" },
        { "trigger": "Gtk.Viewport.get_bin_window", "contents": "Gtk.Viewport.get_bin_window()" },
        { "trigger": "Gtk.Viewport.get_hadjustment", "contents": "Gtk.Viewport.get_hadjustment()" },
        { "trigger": "Gtk.Viewport.get_shadow_type", "contents": "Gtk.Viewport.get_shadow_type()" },
        { "trigger": "Gtk.Viewport.get_vadjustment", "contents": "Gtk.Viewport.get_vadjustment()" },
        { "trigger": "Gtk.Viewport.get_view_window", "contents": "Gtk.Viewport.get_view_window()" },
        { "trigger": "Gtk.Viewport.set_hadjustment", "contents": "Gtk.Viewport.set_hadjustment(adjustment)" },
        { "trigger": "Gtk.Viewport.set_shadow_type", "contents": "Gtk.Viewport.set_shadow_type(type)" },
        { "trigger": "Gtk.Viewport.set_vadjustment", "contents": "Gtk.Viewport.set_vadjustment(adjustment)" },
        { "trigger": "Gtk.Viewport.props.shadow_type", "contents": "Gtk.Viewport.props.shadow_type" },
        { "trigger": "Gtk.VolumeButton", "contents": "Gtk.VolumeButton(*args, **kwargs)" },
        { "trigger": "Gtk.VolumeButton.new", "contents": "Gtk.VolumeButton.new()" },
        { "trigger": "Gtk.VolumeButton.props.use_symbolic", "contents": "Gtk.VolumeButton.props.use_symbolic" },
        { "trigger": "Gtk.VPaned", "contents": "Gtk.VPaned(**kwargs)" },
        { "trigger": "Gtk.VPaned.new", "contents": "Gtk.VPaned.new()" },
        { "trigger": "Gtk.VScale", "contents": "Gtk.VScale(**kwargs)" },
        { "trigger": "Gtk.VScale.new", "contents": "Gtk.VScale.new(adjustment)" },
        { "trigger": "Gtk.VScale.new_with_range", "contents": "Gtk.VScale.new_with_range(min, max, step)" },
        { "trigger": "Gtk.VScrollbar", "contents": "Gtk.VScrollbar(*args, **kwargs)" },
        { "trigger": "Gtk.VScrollbar.new", "contents": "Gtk.VScrollbar.new(adjustment)" },
        { "trigger": "Gtk.VSeparator", "contents": "Gtk.VSeparator(**kwargs)" },
        { "trigger": "Gtk.VSeparator.new", "contents": "Gtk.VSeparator.new()" },
        { "trigger": "Gtk.WidgetAccessible", "contents": "Gtk.WidgetAccessible(**kwargs)" },
        { "trigger": "Gtk.Widget", "contents": "Gtk.Widget(**kwargs)" },
        { "trigger": "Gtk.Widget.get_default_direction", "contents": "Gtk.Widget.get_default_direction()" },
        { "trigger": "Gtk.Widget.get_default_style", "contents": "Gtk.Widget.get_default_style()" },
        { "trigger": "Gtk.Widget.pop_composite_child", "contents": "Gtk.Widget.pop_composite_child()" },
        { "trigger": "Gtk.Widget.push_composite_child", "contents": "Gtk.Widget.push_composite_child()" },
        { "trigger": "Gtk.Widget.set_default_direction", "contents": "Gtk.Widget.set_default_direction(dir)" },
        { "trigger": "Gtk.Widget.activate", "contents": "Gtk.Widget.activate()" },
        { "trigger": "Gtk.Widget.add_accelerator", "contents": "Gtk.Widget.add_accelerator(accel_signal, accel_group, accel_key, accel_mods, accel_flags)" },
        { "trigger": "Gtk.Widget.add_device_events", "contents": "Gtk.Widget.add_device_events(device, events)" },
        { "trigger": "Gtk.Widget.add_events", "contents": "Gtk.Widget.add_events(events)" },
        { "trigger": "Gtk.Widget.add_mnemonic_label", "contents": "Gtk.Widget.add_mnemonic_label(label)" },
        { "trigger": "Gtk.Widget.add_tick_callback", "contents": "Gtk.Widget.add_tick_callback(callback, *user_data)" },
        { "trigger": "Gtk.Widget.can_activate_accel", "contents": "Gtk.Widget.can_activate_accel(signal_id)" },
        { "trigger": "Gtk.Widget.child_focus", "contents": "Gtk.Widget.child_focus(direction)" },
        { "trigger": "Gtk.Widget.child_notify", "contents": "Gtk.Widget.child_notify(child_property)" },
        { "trigger": "Gtk.Widget.class_path", "contents": "Gtk.Widget.class_path()" },
        { "trigger": "Gtk.Widget.compute_expand", "contents": "Gtk.Widget.compute_expand(orientation)" },
        { "trigger": "Gtk.Widget.create_pango_context", "contents": "Gtk.Widget.create_pango_context()" },
        { "trigger": "Gtk.Widget.create_pango_layout", "contents": "Gtk.Widget.create_pango_layout(text)" },
        { "trigger": "Gtk.Widget.destroy", "contents": "Gtk.Widget.destroy()" },
        { "trigger": "Gtk.Widget.destroyed", "contents": "Gtk.Widget.destroyed(widget_pointer)" },
        { "trigger": "Gtk.Widget.device_is_shadowed", "contents": "Gtk.Widget.device_is_shadowed(device)" },
        { "trigger": "Gtk.Widget.drag_begin", "contents": "Gtk.Widget.drag_begin(targets, actions, button, event)" },
        { "trigger": "Gtk.Widget.drag_begin_with_coordinates", "contents": "Gtk.Widget.drag_begin_with_coordinates(targets, actions, button, event, x, y)" },
        { "trigger": "Gtk.Widget.drag_check_threshold", "contents": "Gtk.Widget.drag_check_threshold(start_x, start_y, current_x, current_y)" },
        { "trigger": "Gtk.Widget.drag_dest_add_image_targets", "contents": "Gtk.Widget.drag_dest_add_image_targets()" },
        { "trigger": "Gtk.Widget.drag_dest_add_text_targets", "contents": "Gtk.Widget.drag_dest_add_text_targets()" },
        { "trigger": "Gtk.Widget.drag_dest_add_uri_targets", "contents": "Gtk.Widget.drag_dest_add_uri_targets()" },
        { "trigger": "Gtk.Widget.drag_dest_find_target", "contents": "Gtk.Widget.drag_dest_find_target(context, target_list)" },
        { "trigger": "Gtk.Widget.drag_dest_get_target_list", "contents": "Gtk.Widget.drag_dest_get_target_list()" },
        { "trigger": "Gtk.Widget.drag_dest_get_track_motion", "contents": "Gtk.Widget.drag_dest_get_track_motion()" },
        { "trigger": "Gtk.Widget.drag_dest_set", "contents": "Gtk.Widget.drag_dest_set(flags, targets, actions)" },
        { "trigger": "Gtk.Widget.drag_dest_set_proxy", "contents": "Gtk.Widget.drag_dest_set_proxy(proxy_window, protocol, use_coordinates)" },
        { "trigger": "Gtk.Widget.drag_dest_set_target_list", "contents": "Gtk.Widget.drag_dest_set_target_list(target_list)" },
        { "trigger": "Gtk.Widget.drag_dest_set_track_motion", "contents": "Gtk.Widget.drag_dest_set_track_motion(track_motion)" },
        { "trigger": "Gtk.Widget.drag_dest_unset", "contents": "Gtk.Widget.drag_dest_unset()" },
        { "trigger": "Gtk.Widget.drag_get_data", "contents": "Gtk.Widget.drag_get_data(context, target, time_)" },
        { "trigger": "Gtk.Widget.drag_highlight", "contents": "Gtk.Widget.drag_highlight()" },
        { "trigger": "Gtk.Widget.drag_source_add_image_targets", "contents": "Gtk.Widget.drag_source_add_image_targets()" },
        { "trigger": "Gtk.Widget.drag_source_add_text_targets", "contents": "Gtk.Widget.drag_source_add_text_targets()" },
        { "trigger": "Gtk.Widget.drag_source_add_uri_targets", "contents": "Gtk.Widget.drag_source_add_uri_targets()" },
        { "trigger": "Gtk.Widget.drag_source_get_target_list", "contents": "Gtk.Widget.drag_source_get_target_list()" },
        { "trigger": "Gtk.Widget.drag_source_set", "contents": "Gtk.Widget.drag_source_set(start_button_mask, targets, actions)" },
        { "trigger": "Gtk.Widget.drag_source_set_icon_gicon", "contents": "Gtk.Widget.drag_source_set_icon_gicon(icon)" },
        { "trigger": "Gtk.Widget.drag_source_set_icon_name", "contents": "Gtk.Widget.drag_source_set_icon_name(icon_name)" },
        { "trigger": "Gtk.Widget.drag_source_set_icon_pixbuf", "contents": "Gtk.Widget.drag_source_set_icon_pixbuf(pixbuf)" },
        { "trigger": "Gtk.Widget.drag_source_set_icon_stock", "contents": "Gtk.Widget.drag_source_set_icon_stock(stock_id)" },
        { "trigger": "Gtk.Widget.drag_source_set_target_list", "contents": "Gtk.Widget.drag_source_set_target_list(target_list)" },
        { "trigger": "Gtk.Widget.drag_source_unset", "contents": "Gtk.Widget.drag_source_unset()" },
        { "trigger": "Gtk.Widget.drag_unhighlight", "contents": "Gtk.Widget.drag_unhighlight()" },
        { "trigger": "Gtk.Widget.draw", "contents": "Gtk.Widget.draw(cr)" },
        { "trigger": "Gtk.Widget.ensure_style", "contents": "Gtk.Widget.ensure_style()" },
        { "trigger": "Gtk.Widget.error_bell", "contents": "Gtk.Widget.error_bell()" },
        { "trigger": "Gtk.Widget.event", "contents": "Gtk.Widget.event(event)" },
        { "trigger": "Gtk.Widget.freeze_child_notify", "contents": "Gtk.Widget.freeze_child_notify()" },
        { "trigger": "Gtk.Widget.get_accessible", "contents": "Gtk.Widget.get_accessible()" },
        { "trigger": "Gtk.Widget.get_action_group", "contents": "Gtk.Widget.get_action_group(prefix)" },
        { "trigger": "Gtk.Widget.get_allocated_baseline", "contents": "Gtk.Widget.get_allocated_baseline()" },
        { "trigger": "Gtk.Widget.get_allocated_height", "contents": "Gtk.Widget.get_allocated_height()" },
        { "trigger": "Gtk.Widget.get_allocated_width", "contents": "Gtk.Widget.get_allocated_width()" },
        { "trigger": "Gtk.Widget.get_allocation", "contents": "Gtk.Widget.get_allocation()" },
        { "trigger": "Gtk.Widget.get_ancestor", "contents": "Gtk.Widget.get_ancestor(widget_type)" },
        { "trigger": "Gtk.Widget.get_app_paintable", "contents": "Gtk.Widget.get_app_paintable()" },
        { "trigger": "Gtk.Widget.get_can_default", "contents": "Gtk.Widget.get_can_default()" },
        { "trigger": "Gtk.Widget.get_can_focus", "contents": "Gtk.Widget.get_can_focus()" },
        { "trigger": "Gtk.Widget.get_child_requisition", "contents": "Gtk.Widget.get_child_requisition()" },
        { "trigger": "Gtk.Widget.get_child_visible", "contents": "Gtk.Widget.get_child_visible()" },
        { "trigger": "Gtk.Widget.get_clip", "contents": "Gtk.Widget.get_clip()" },
        { "trigger": "Gtk.Widget.get_clipboard", "contents": "Gtk.Widget.get_clipboard(selection)" },
        { "trigger": "Gtk.Widget.get_composite_name", "contents": "Gtk.Widget.get_composite_name()" },
        { "trigger": "Gtk.Widget.get_device_enabled", "contents": "Gtk.Widget.get_device_enabled(device)" },
        { "trigger": "Gtk.Widget.get_device_events", "contents": "Gtk.Widget.get_device_events(device)" },
        { "trigger": "Gtk.Widget.get_direction", "contents": "Gtk.Widget.get_direction()" },
        { "trigger": "Gtk.Widget.get_display", "contents": "Gtk.Widget.get_display()" },
        { "trigger": "Gtk.Widget.get_double_buffered", "contents": "Gtk.Widget.get_double_buffered()" },
        { "trigger": "Gtk.Widget.get_events", "contents": "Gtk.Widget.get_events()" },
        { "trigger": "Gtk.Widget.get_font_map", "contents": "Gtk.Widget.get_font_map()" },
        { "trigger": "Gtk.Widget.get_font_options", "contents": "Gtk.Widget.get_font_options()" },
        { "trigger": "Gtk.Widget.get_frame_clock", "contents": "Gtk.Widget.get_frame_clock()" },
        { "trigger": "Gtk.Widget.get_halign", "contents": "Gtk.Widget.get_halign()" },
        { "trigger": "Gtk.Widget.get_has_tooltip", "contents": "Gtk.Widget.get_has_tooltip()" },
        { "trigger": "Gtk.Widget.get_has_window", "contents": "Gtk.Widget.get_has_window()" },
        { "trigger": "Gtk.Widget.get_hexpand", "contents": "Gtk.Widget.get_hexpand()" },
        { "trigger": "Gtk.Widget.get_hexpand_set", "contents": "Gtk.Widget.get_hexpand_set()" },
        { "trigger": "Gtk.Widget.get_mapped", "contents": "Gtk.Widget.get_mapped()" },
        { "trigger": "Gtk.Widget.get_margin_bottom", "contents": "Gtk.Widget.get_margin_bottom()" },
        { "trigger": "Gtk.Widget.get_margin_end", "contents": "Gtk.Widget.get_margin_end()" },
        { "trigger": "Gtk.Widget.get_margin_left", "contents": "Gtk.Widget.get_margin_left()" },
        { "trigger": "Gtk.Widget.get_margin_right", "contents": "Gtk.Widget.get_margin_right()" },
        { "trigger": "Gtk.Widget.get_margin_start", "contents": "Gtk.Widget.get_margin_start()" },
        { "trigger": "Gtk.Widget.get_margin_top", "contents": "Gtk.Widget.get_margin_top()" },
        { "trigger": "Gtk.Widget.get_modifier_mask", "contents": "Gtk.Widget.get_modifier_mask(intent)" },
        { "trigger": "Gtk.Widget.get_modifier_style", "contents": "Gtk.Widget.get_modifier_style()" },
        { "trigger": "Gtk.Widget.get_name", "contents": "Gtk.Widget.get_name()" },
        { "trigger": "Gtk.Widget.get_no_show_all", "contents": "Gtk.Widget.get_no_show_all()" },
        { "trigger": "Gtk.Widget.get_opacity", "contents": "Gtk.Widget.get_opacity()" },
        { "trigger": "Gtk.Widget.get_pango_context", "contents": "Gtk.Widget.get_pango_context()" },
        { "trigger": "Gtk.Widget.get_parent", "contents": "Gtk.Widget.get_parent()" },
        { "trigger": "Gtk.Widget.get_parent_window", "contents": "Gtk.Widget.get_parent_window()" },
        { "trigger": "Gtk.Widget.get_path", "contents": "Gtk.Widget.get_path()" },
        { "trigger": "Gtk.Widget.get_pointer", "contents": "Gtk.Widget.get_pointer()" },
        { "trigger": "Gtk.Widget.get_preferred_height", "contents": "Gtk.Widget.get_preferred_height()" },
        { "trigger": "Gtk.Widget.get_preferred_height_and_baseline_for_width", "contents": "Gtk.Widget.get_preferred_height_and_baseline_for_width(width)" },
        { "trigger": "Gtk.Widget.get_preferred_height_for_width", "contents": "Gtk.Widget.get_preferred_height_for_width(width)" },
        { "trigger": "Gtk.Widget.get_preferred_size", "contents": "Gtk.Widget.get_preferred_size()" },
        { "trigger": "Gtk.Widget.get_preferred_width", "contents": "Gtk.Widget.get_preferred_width()" },
        { "trigger": "Gtk.Widget.get_preferred_width_for_height", "contents": "Gtk.Widget.get_preferred_width_for_height(height)" },
        { "trigger": "Gtk.Widget.get_realized", "contents": "Gtk.Widget.get_realized()" },
        { "trigger": "Gtk.Widget.get_receives_default", "contents": "Gtk.Widget.get_receives_default()" },
        { "trigger": "Gtk.Widget.get_request_mode", "contents": "Gtk.Widget.get_request_mode()" },
        { "trigger": "Gtk.Widget.get_requisition", "contents": "Gtk.Widget.get_requisition()" },
        { "trigger": "Gtk.Widget.get_root_window", "contents": "Gtk.Widget.get_root_window()" },
        { "trigger": "Gtk.Widget.get_scale_factor", "contents": "Gtk.Widget.get_scale_factor()" },
        { "trigger": "Gtk.Widget.get_screen", "contents": "Gtk.Widget.get_screen()" },
        { "trigger": "Gtk.Widget.get_sensitive", "contents": "Gtk.Widget.get_sensitive()" },
        { "trigger": "Gtk.Widget.get_settings", "contents": "Gtk.Widget.get_settings()" },
        { "trigger": "Gtk.Widget.get_size_request", "contents": "Gtk.Widget.get_size_request()" },
        { "trigger": "Gtk.Widget.get_state", "contents": "Gtk.Widget.get_state()" },
        { "trigger": "Gtk.Widget.get_state_flags", "contents": "Gtk.Widget.get_state_flags()" },
        { "trigger": "Gtk.Widget.get_style", "contents": "Gtk.Widget.get_style()" },
        { "trigger": "Gtk.Widget.get_style_context", "contents": "Gtk.Widget.get_style_context()" },
        { "trigger": "Gtk.Widget.get_support_multidevice", "contents": "Gtk.Widget.get_support_multidevice()" },
        { "trigger": "Gtk.Widget.get_template_child", "contents": "Gtk.Widget.get_template_child(widget_type, name)" },
        { "trigger": "Gtk.Widget.get_tooltip_markup", "contents": "Gtk.Widget.get_tooltip_markup()" },
        { "trigger": "Gtk.Widget.get_tooltip_text", "contents": "Gtk.Widget.get_tooltip_text()" },
        { "trigger": "Gtk.Widget.get_tooltip_window", "contents": "Gtk.Widget.get_tooltip_window()" },
        { "trigger": "Gtk.Widget.get_toplevel", "contents": "Gtk.Widget.get_toplevel()" },
        { "trigger": "Gtk.Widget.get_valign", "contents": "Gtk.Widget.get_valign()" },
        { "trigger": "Gtk.Widget.get_valign_with_baseline", "contents": "Gtk.Widget.get_valign_with_baseline()" },
        { "trigger": "Gtk.Widget.get_vexpand", "contents": "Gtk.Widget.get_vexpand()" },
        { "trigger": "Gtk.Widget.get_vexpand_set", "contents": "Gtk.Widget.get_vexpand_set()" },
        { "trigger": "Gtk.Widget.get_visible", "contents": "Gtk.Widget.get_visible()" },
        { "trigger": "Gtk.Widget.get_visual", "contents": "Gtk.Widget.get_visual()" },
        { "trigger": "Gtk.Widget.get_window", "contents": "Gtk.Widget.get_window()" },
        { "trigger": "Gtk.Widget.grab_add", "contents": "Gtk.Widget.grab_add()" },
        { "trigger": "Gtk.Widget.grab_default", "contents": "Gtk.Widget.grab_default()" },
        { "trigger": "Gtk.Widget.grab_focus", "contents": "Gtk.Widget.grab_focus()" },
        { "trigger": "Gtk.Widget.grab_remove", "contents": "Gtk.Widget.grab_remove()" },
        { "trigger": "Gtk.Widget.has_default", "contents": "Gtk.Widget.has_default()" },
        { "trigger": "Gtk.Widget.has_focus", "contents": "Gtk.Widget.has_focus()" },
        { "trigger": "Gtk.Widget.has_grab", "contents": "Gtk.Widget.has_grab()" },
        { "trigger": "Gtk.Widget.has_rc_style", "contents": "Gtk.Widget.has_rc_style()" },
        { "trigger": "Gtk.Widget.has_screen", "contents": "Gtk.Widget.has_screen()" },
        { "trigger": "Gtk.Widget.has_visible_focus", "contents": "Gtk.Widget.has_visible_focus()" },
        { "trigger": "Gtk.Widget.hide", "contents": "Gtk.Widget.hide()" },
        { "trigger": "Gtk.Widget.hide_on_delete", "contents": "Gtk.Widget.hide_on_delete()" },
        { "trigger": "Gtk.Widget.in_destruction", "contents": "Gtk.Widget.in_destruction()" },
        { "trigger": "Gtk.Widget.init_template", "contents": "Gtk.Widget.init_template()" },
        { "trigger": "Gtk.Widget.input_shape_combine_region", "contents": "Gtk.Widget.input_shape_combine_region(region)" },
        { "trigger": "Gtk.Widget.insert_action_group", "contents": "Gtk.Widget.insert_action_group(name, group)" },
        { "trigger": "Gtk.Widget.intersect", "contents": "Gtk.Widget.intersect(area, intersection)" },
        { "trigger": "Gtk.Widget.is_ancestor", "contents": "Gtk.Widget.is_ancestor(ancestor)" },
        { "trigger": "Gtk.Widget.is_composited", "contents": "Gtk.Widget.is_composited()" },
        { "trigger": "Gtk.Widget.is_drawable", "contents": "Gtk.Widget.is_drawable()" },
        { "trigger": "Gtk.Widget.is_focus", "contents": "Gtk.Widget.is_focus()" },
        { "trigger": "Gtk.Widget.is_sensitive", "contents": "Gtk.Widget.is_sensitive()" },
        { "trigger": "Gtk.Widget.is_toplevel", "contents": "Gtk.Widget.is_toplevel()" },
        { "trigger": "Gtk.Widget.is_visible", "contents": "Gtk.Widget.is_visible()" },
        { "trigger": "Gtk.Widget.keynav_failed", "contents": "Gtk.Widget.keynav_failed(direction)" },
        { "trigger": "Gtk.Widget.list_accel_closures", "contents": "Gtk.Widget.list_accel_closures()" },
        { "trigger": "Gtk.Widget.list_action_prefixes", "contents": "Gtk.Widget.list_action_prefixes()" },
        { "trigger": "Gtk.Widget.list_mnemonic_labels", "contents": "Gtk.Widget.list_mnemonic_labels()" },
        { "trigger": "Gtk.Widget.map", "contents": "Gtk.Widget.map()" },
        { "trigger": "Gtk.Widget.mnemonic_activate", "contents": "Gtk.Widget.mnemonic_activate(group_cycling)" },
        { "trigger": "Gtk.Widget.modify_base", "contents": "Gtk.Widget.modify_base(state, color)" },
        { "trigger": "Gtk.Widget.modify_bg", "contents": "Gtk.Widget.modify_bg(state, color)" },
        { "trigger": "Gtk.Widget.modify_cursor", "contents": "Gtk.Widget.modify_cursor(primary, secondary)" },
        { "trigger": "Gtk.Widget.modify_fg", "contents": "Gtk.Widget.modify_fg(state, color)" },
        { "trigger": "Gtk.Widget.modify_font", "contents": "Gtk.Widget.modify_font(font_desc)" },
        { "trigger": "Gtk.Widget.modify_style", "contents": "Gtk.Widget.modify_style(style)" },
        { "trigger": "Gtk.Widget.modify_text", "contents": "Gtk.Widget.modify_text(state, color)" },
        { "trigger": "Gtk.Widget.override_background_color", "contents": "Gtk.Widget.override_background_color(state, color)" },
        { "trigger": "Gtk.Widget.override_color", "contents": "Gtk.Widget.override_color(state, color)" },
        { "trigger": "Gtk.Widget.override_cursor", "contents": "Gtk.Widget.override_cursor(cursor, secondary_cursor)" },
        { "trigger": "Gtk.Widget.override_font", "contents": "Gtk.Widget.override_font(font_desc)" },
        { "trigger": "Gtk.Widget.override_symbolic_color", "contents": "Gtk.Widget.override_symbolic_color(name, color)" },
        { "trigger": "Gtk.Widget.path", "contents": "Gtk.Widget.path()" },
        { "trigger": "Gtk.Widget.queue_compute_expand", "contents": "Gtk.Widget.queue_compute_expand()" },
        { "trigger": "Gtk.Widget.queue_draw", "contents": "Gtk.Widget.queue_draw()" },
        { "trigger": "Gtk.Widget.queue_draw_area", "contents": "Gtk.Widget.queue_draw_area(x, y, width, height)" },
        { "trigger": "Gtk.Widget.queue_draw_region", "contents": "Gtk.Widget.queue_draw_region(region)" },
        { "trigger": "Gtk.Widget.queue_resize", "contents": "Gtk.Widget.queue_resize()" },
        { "trigger": "Gtk.Widget.queue_resize_no_redraw", "contents": "Gtk.Widget.queue_resize_no_redraw()" },
        { "trigger": "Gtk.Widget.realize", "contents": "Gtk.Widget.realize()" },
        { "trigger": "Gtk.Widget.region_intersect", "contents": "Gtk.Widget.region_intersect(region)" },
        { "trigger": "Gtk.Widget.register_window", "contents": "Gtk.Widget.register_window(window)" },
        { "trigger": "Gtk.Widget.remove_accelerator", "contents": "Gtk.Widget.remove_accelerator(accel_group, accel_key, accel_mods)" },
        { "trigger": "Gtk.Widget.remove_mnemonic_label", "contents": "Gtk.Widget.remove_mnemonic_label(label)" },
        { "trigger": "Gtk.Widget.remove_tick_callback", "contents": "Gtk.Widget.remove_tick_callback(id)" },
        { "trigger": "Gtk.Widget.render_icon", "contents": "Gtk.Widget.render_icon(stock_id, size, detail)" },
        { "trigger": "Gtk.Widget.render_icon_pixbuf", "contents": "Gtk.Widget.render_icon_pixbuf(stock_id, size)" },
        { "trigger": "Gtk.Widget.reparent", "contents": "Gtk.Widget.reparent(new_parent)" },
        { "trigger": "Gtk.Widget.reset_rc_styles", "contents": "Gtk.Widget.reset_rc_styles()" },
        { "trigger": "Gtk.Widget.reset_style", "contents": "Gtk.Widget.reset_style()" },
        { "trigger": "Gtk.Widget.send_expose", "contents": "Gtk.Widget.send_expose(event)" },
        { "trigger": "Gtk.Widget.send_focus_change", "contents": "Gtk.Widget.send_focus_change(event)" },
        { "trigger": "Gtk.Widget.set_accel_path", "contents": "Gtk.Widget.set_accel_path(accel_path, accel_group)" },
        { "trigger": "Gtk.Widget.set_allocation", "contents": "Gtk.Widget.set_allocation(allocation)" },
        { "trigger": "Gtk.Widget.set_app_paintable", "contents": "Gtk.Widget.set_app_paintable(app_paintable)" },
        { "trigger": "Gtk.Widget.set_can_default", "contents": "Gtk.Widget.set_can_default(can_default)" },
        { "trigger": "Gtk.Widget.set_can_focus", "contents": "Gtk.Widget.set_can_focus(can_focus)" },
        { "trigger": "Gtk.Widget.set_child_visible", "contents": "Gtk.Widget.set_child_visible(is_visible)" },
        { "trigger": "Gtk.Widget.set_clip", "contents": "Gtk.Widget.set_clip(clip)" },
        { "trigger": "Gtk.Widget.set_composite_name", "contents": "Gtk.Widget.set_composite_name(name)" },
        { "trigger": "Gtk.Widget.set_device_enabled", "contents": "Gtk.Widget.set_device_enabled(device, enabled)" },
        { "trigger": "Gtk.Widget.set_device_events", "contents": "Gtk.Widget.set_device_events(device, events)" },
        { "trigger": "Gtk.Widget.set_direction", "contents": "Gtk.Widget.set_direction(dir)" },
        { "trigger": "Gtk.Widget.set_double_buffered", "contents": "Gtk.Widget.set_double_buffered(double_buffered)" },
        { "trigger": "Gtk.Widget.set_events", "contents": "Gtk.Widget.set_events(events)" },
        { "trigger": "Gtk.Widget.set_font_map", "contents": "Gtk.Widget.set_font_map(font_map)" },
        { "trigger": "Gtk.Widget.set_font_options", "contents": "Gtk.Widget.set_font_options(options)" },
        { "trigger": "Gtk.Widget.set_halign", "contents": "Gtk.Widget.set_halign(align)" },
        { "trigger": "Gtk.Widget.set_has_tooltip", "contents": "Gtk.Widget.set_has_tooltip(has_tooltip)" },
        { "trigger": "Gtk.Widget.set_has_window", "contents": "Gtk.Widget.set_has_window(has_window)" },
        { "trigger": "Gtk.Widget.set_hexpand", "contents": "Gtk.Widget.set_hexpand(expand)" },
        { "trigger": "Gtk.Widget.set_hexpand_set", "contents": "Gtk.Widget.set_hexpand_set(set)" },
        { "trigger": "Gtk.Widget.set_mapped", "contents": "Gtk.Widget.set_mapped(mapped)" },
        { "trigger": "Gtk.Widget.set_margin_bottom", "contents": "Gtk.Widget.set_margin_bottom(margin)" },
        { "trigger": "Gtk.Widget.set_margin_end", "contents": "Gtk.Widget.set_margin_end(margin)" },
        { "trigger": "Gtk.Widget.set_margin_left", "contents": "Gtk.Widget.set_margin_left(margin)" },
        { "trigger": "Gtk.Widget.set_margin_right", "contents": "Gtk.Widget.set_margin_right(margin)" },
        { "trigger": "Gtk.Widget.set_margin_start", "contents": "Gtk.Widget.set_margin_start(margin)" },
        { "trigger": "Gtk.Widget.set_margin_top", "contents": "Gtk.Widget.set_margin_top(margin)" },
        { "trigger": "Gtk.Widget.set_name", "contents": "Gtk.Widget.set_name(name)" },
        { "trigger": "Gtk.Widget.set_no_show_all", "contents": "Gtk.Widget.set_no_show_all(no_show_all)" },
        { "trigger": "Gtk.Widget.set_opacity", "contents": "Gtk.Widget.set_opacity(opacity)" },
        { "trigger": "Gtk.Widget.set_parent", "contents": "Gtk.Widget.set_parent(parent)" },
        { "trigger": "Gtk.Widget.set_parent_window", "contents": "Gtk.Widget.set_parent_window(parent_window)" },
        { "trigger": "Gtk.Widget.set_realized", "contents": "Gtk.Widget.set_realized(realized)" },
        { "trigger": "Gtk.Widget.set_receives_default", "contents": "Gtk.Widget.set_receives_default(receives_default)" },
        { "trigger": "Gtk.Widget.set_redraw_on_allocate", "contents": "Gtk.Widget.set_redraw_on_allocate(redraw_on_allocate)" },
        { "trigger": "Gtk.Widget.set_sensitive", "contents": "Gtk.Widget.set_sensitive(sensitive)" },
        { "trigger": "Gtk.Widget.set_size_request", "contents": "Gtk.Widget.set_size_request(width, height)" },
        { "trigger": "Gtk.Widget.set_state", "contents": "Gtk.Widget.set_state(state)" },
        { "trigger": "Gtk.Widget.set_state_flags", "contents": "Gtk.Widget.set_state_flags(flags, clear)" },
        { "trigger": "Gtk.Widget.set_style", "contents": "Gtk.Widget.set_style(style)" },
        { "trigger": "Gtk.Widget.set_support_multidevice", "contents": "Gtk.Widget.set_support_multidevice(support_multidevice)" },
        { "trigger": "Gtk.Widget.set_tooltip_markup", "contents": "Gtk.Widget.set_tooltip_markup(markup)" },
        { "trigger": "Gtk.Widget.set_tooltip_text", "contents": "Gtk.Widget.set_tooltip_text(text)" },
        { "trigger": "Gtk.Widget.set_tooltip_window", "contents": "Gtk.Widget.set_tooltip_window(custom_window)" },
        { "trigger": "Gtk.Widget.set_valign", "contents": "Gtk.Widget.set_valign(align)" },
        { "trigger": "Gtk.Widget.set_vexpand", "contents": "Gtk.Widget.set_vexpand(expand)" },
        { "trigger": "Gtk.Widget.set_vexpand_set", "contents": "Gtk.Widget.set_vexpand_set(set)" },
        { "trigger": "Gtk.Widget.set_visible", "contents": "Gtk.Widget.set_visible(visible)" },
        { "trigger": "Gtk.Widget.set_visual", "contents": "Gtk.Widget.set_visual(visual)" },
        { "trigger": "Gtk.Widget.set_window", "contents": "Gtk.Widget.set_window(window)" },
        { "trigger": "Gtk.Widget.shape_combine_region", "contents": "Gtk.Widget.shape_combine_region(region)" },
        { "trigger": "Gtk.Widget.show", "contents": "Gtk.Widget.show()" },
        { "trigger": "Gtk.Widget.show_all", "contents": "Gtk.Widget.show_all()" },
        { "trigger": "Gtk.Widget.show_now", "contents": "Gtk.Widget.show_now()" },
        { "trigger": "Gtk.Widget.size_allocate", "contents": "Gtk.Widget.size_allocate(allocation)" },
        { "trigger": "Gtk.Widget.size_allocate_with_baseline", "contents": "Gtk.Widget.size_allocate_with_baseline(allocation, baseline)" },
        { "trigger": "Gtk.Widget.size_request", "contents": "Gtk.Widget.size_request()" },
        { "trigger": "Gtk.Widget.style_attach", "contents": "Gtk.Widget.style_attach()" },
        { "trigger": "Gtk.Widget.style_get_property", "contents": "Gtk.Widget.style_get_property(property_name, value=None)" },
        { "trigger": "Gtk.Widget.thaw_child_notify", "contents": "Gtk.Widget.thaw_child_notify()" },
        { "trigger": "Gtk.Widget.translate_coordinates", "contents": "Gtk.Widget.translate_coordinates(dest_widget, src_x, src_y)" },
        { "trigger": "Gtk.Widget.trigger_tooltip_query", "contents": "Gtk.Widget.trigger_tooltip_query()" },
        { "trigger": "Gtk.Widget.unmap", "contents": "Gtk.Widget.unmap()" },
        { "trigger": "Gtk.Widget.unparent", "contents": "Gtk.Widget.unparent()" },
        { "trigger": "Gtk.Widget.unrealize", "contents": "Gtk.Widget.unrealize()" },
        { "trigger": "Gtk.Widget.unregister_window", "contents": "Gtk.Widget.unregister_window(window)" },
        { "trigger": "Gtk.Widget.unset_state_flags", "contents": "Gtk.Widget.unset_state_flags(flags)" },
        { "trigger": "Gtk.Widget.do_adjust_baseline_allocation", "contents": "Gtk.Widget.do_adjust_baseline_allocation(baseline)" },
        { "trigger": "Gtk.Widget.do_adjust_baseline_request", "contents": "Gtk.Widget.do_adjust_baseline_request(minimum_baseline, natural_baseline)" },
        { "trigger": "Gtk.Widget.do_adjust_size_allocation", "contents": "Gtk.Widget.do_adjust_size_allocation(orientation, minimum_size, natural_size, allocated_pos, allocated_size)" },
        { "trigger": "Gtk.Widget.do_adjust_size_request", "contents": "Gtk.Widget.do_adjust_size_request(orientation, minimum_size, natural_size)" },
        { "trigger": "Gtk.Widget.do_button_press_event", "contents": "Gtk.Widget.do_button_press_event(event)" },
        { "trigger": "Gtk.Widget.do_button_release_event", "contents": "Gtk.Widget.do_button_release_event(event)" },
        { "trigger": "Gtk.Widget.do_can_activate_accel", "contents": "Gtk.Widget.do_can_activate_accel(signal_id)" },
        { "trigger": "Gtk.Widget.do_child_notify", "contents": "Gtk.Widget.do_child_notify(child_property)" },
        { "trigger": "Gtk.Widget.do_composited_changed", "contents": "Gtk.Widget.do_composited_changed()" },
        { "trigger": "Gtk.Widget.do_compute_expand", "contents": "Gtk.Widget.do_compute_expand(hexpand_p, vexpand_p)" },
        { "trigger": "Gtk.Widget.do_configure_event", "contents": "Gtk.Widget.do_configure_event(event)" },
        { "trigger": "Gtk.Widget.do_damage_event", "contents": "Gtk.Widget.do_damage_event(event)" },
        { "trigger": "Gtk.Widget.do_delete_event", "contents": "Gtk.Widget.do_delete_event(event)" },
        { "trigger": "Gtk.Widget.do_destroy", "contents": "Gtk.Widget.do_destroy()" },
        { "trigger": "Gtk.Widget.do_destroy_event", "contents": "Gtk.Widget.do_destroy_event(event)" },
        { "trigger": "Gtk.Widget.do_direction_changed", "contents": "Gtk.Widget.do_direction_changed(previous_direction)" },
        { "trigger": "Gtk.Widget.do_dispatch_child_properties_changed", "contents": "Gtk.Widget.do_dispatch_child_properties_changed(n_pspecs, pspecs)" },
        { "trigger": "Gtk.Widget.do_drag_begin", "contents": "Gtk.Widget.do_drag_begin(context)" },
        { "trigger": "Gtk.Widget.do_drag_data_delete", "contents": "Gtk.Widget.do_drag_data_delete(context)" },
        { "trigger": "Gtk.Widget.do_drag_data_get", "contents": "Gtk.Widget.do_drag_data_get(context, selection_data, info, time_)" },
        { "trigger": "Gtk.Widget.do_drag_data_received", "contents": "Gtk.Widget.do_drag_data_received(context, x, y, selection_data, info, time_)" },
        { "trigger": "Gtk.Widget.do_drag_drop", "contents": "Gtk.Widget.do_drag_drop(context, x, y, time_)" },
        { "trigger": "Gtk.Widget.do_drag_end", "contents": "Gtk.Widget.do_drag_end(context)" },
        { "trigger": "Gtk.Widget.do_drag_failed", "contents": "Gtk.Widget.do_drag_failed(context, result)" },
        { "trigger": "Gtk.Widget.do_drag_leave", "contents": "Gtk.Widget.do_drag_leave(context, time_)" },
        { "trigger": "Gtk.Widget.do_drag_motion", "contents": "Gtk.Widget.do_drag_motion(context, x, y, time_)" },
        { "trigger": "Gtk.Widget.do_draw", "contents": "Gtk.Widget.do_draw(cr)" },
        { "trigger": "Gtk.Widget.do_enter_notify_event", "contents": "Gtk.Widget.do_enter_notify_event(event)" },
        { "trigger": "Gtk.Widget.do_event", "contents": "Gtk.Widget.do_event(event)" },
        { "trigger": "Gtk.Widget.do_focus", "contents": "Gtk.Widget.do_focus(direction)" },
        { "trigger": "Gtk.Widget.do_focus_in_event", "contents": "Gtk.Widget.do_focus_in_event(event)" },
        { "trigger": "Gtk.Widget.do_focus_out_event", "contents": "Gtk.Widget.do_focus_out_event(event)" },
        { "trigger": "Gtk.Widget.do_get_accessible", "contents": "Gtk.Widget.do_get_accessible()" },
        { "trigger": "Gtk.Widget.do_get_preferred_height", "contents": "Gtk.Widget.do_get_preferred_height()" },
        { "trigger": "Gtk.Widget.do_get_preferred_height_and_baseline_for_width", "contents": "Gtk.Widget.do_get_preferred_height_and_baseline_for_width(width)" },
        { "trigger": "Gtk.Widget.do_get_preferred_height_for_width", "contents": "Gtk.Widget.do_get_preferred_height_for_width(width)" },
        { "trigger": "Gtk.Widget.do_get_preferred_width", "contents": "Gtk.Widget.do_get_preferred_width()" },
        { "trigger": "Gtk.Widget.do_get_preferred_width_for_height", "contents": "Gtk.Widget.do_get_preferred_width_for_height(height)" },
        { "trigger": "Gtk.Widget.do_get_request_mode", "contents": "Gtk.Widget.do_get_request_mode()" },
        { "trigger": "Gtk.Widget.do_grab_broken_event", "contents": "Gtk.Widget.do_grab_broken_event(event)" },
        { "trigger": "Gtk.Widget.do_grab_focus", "contents": "Gtk.Widget.do_grab_focus()" },
        { "trigger": "Gtk.Widget.do_grab_notify", "contents": "Gtk.Widget.do_grab_notify(was_grabbed)" },
        { "trigger": "Gtk.Widget.do_hide", "contents": "Gtk.Widget.do_hide()" },
        { "trigger": "Gtk.Widget.do_hierarchy_changed", "contents": "Gtk.Widget.do_hierarchy_changed(previous_toplevel)" },
        { "trigger": "Gtk.Widget.do_key_press_event", "contents": "Gtk.Widget.do_key_press_event(event)" },
        { "trigger": "Gtk.Widget.do_key_release_event", "contents": "Gtk.Widget.do_key_release_event(event)" },
        { "trigger": "Gtk.Widget.do_keynav_failed", "contents": "Gtk.Widget.do_keynav_failed(direction)" },
        { "trigger": "Gtk.Widget.do_leave_notify_event", "contents": "Gtk.Widget.do_leave_notify_event(event)" },
        { "trigger": "Gtk.Widget.do_map", "contents": "Gtk.Widget.do_map()" },
        { "trigger": "Gtk.Widget.do_map_event", "contents": "Gtk.Widget.do_map_event(event)" },
        { "trigger": "Gtk.Widget.do_mnemonic_activate", "contents": "Gtk.Widget.do_mnemonic_activate(group_cycling)" },
        { "trigger": "Gtk.Widget.do_motion_notify_event", "contents": "Gtk.Widget.do_motion_notify_event(event)" },
        { "trigger": "Gtk.Widget.do_move_focus", "contents": "Gtk.Widget.do_move_focus(direction)" },
        { "trigger": "Gtk.Widget.do_parent_set", "contents": "Gtk.Widget.do_parent_set(previous_parent)" },
        { "trigger": "Gtk.Widget.do_popup_menu", "contents": "Gtk.Widget.do_popup_menu()" },
        { "trigger": "Gtk.Widget.do_property_notify_event", "contents": "Gtk.Widget.do_property_notify_event(event)" },
        { "trigger": "Gtk.Widget.do_proximity_in_event", "contents": "Gtk.Widget.do_proximity_in_event(event)" },
        { "trigger": "Gtk.Widget.do_proximity_out_event", "contents": "Gtk.Widget.do_proximity_out_event(event)" },
        { "trigger": "Gtk.Widget.do_query_tooltip", "contents": "Gtk.Widget.do_query_tooltip(x, y, keyboard_tooltip, tooltip)" },
        { "trigger": "Gtk.Widget.do_queue_draw_region", "contents": "Gtk.Widget.do_queue_draw_region(region)" },
        { "trigger": "Gtk.Widget.do_realize", "contents": "Gtk.Widget.do_realize()" },
        { "trigger": "Gtk.Widget.do_screen_changed", "contents": "Gtk.Widget.do_screen_changed(previous_screen)" },
        { "trigger": "Gtk.Widget.do_scroll_event", "contents": "Gtk.Widget.do_scroll_event(event)" },
        { "trigger": "Gtk.Widget.do_selection_clear_event", "contents": "Gtk.Widget.do_selection_clear_event(event)" },
        { "trigger": "Gtk.Widget.do_selection_get", "contents": "Gtk.Widget.do_selection_get(selection_data, info, time_)" },
        { "trigger": "Gtk.Widget.do_selection_notify_event", "contents": "Gtk.Widget.do_selection_notify_event(event)" },
        { "trigger": "Gtk.Widget.do_selection_received", "contents": "Gtk.Widget.do_selection_received(selection_data, time_)" },
        { "trigger": "Gtk.Widget.do_selection_request_event", "contents": "Gtk.Widget.do_selection_request_event(event)" },
        { "trigger": "Gtk.Widget.do_show", "contents": "Gtk.Widget.do_show()" },
        { "trigger": "Gtk.Widget.do_show_all", "contents": "Gtk.Widget.do_show_all()" },
        { "trigger": "Gtk.Widget.do_show_help", "contents": "Gtk.Widget.do_show_help(help_type)" },
        { "trigger": "Gtk.Widget.do_size_allocate", "contents": "Gtk.Widget.do_size_allocate(allocation)" },
        { "trigger": "Gtk.Widget.do_state_changed", "contents": "Gtk.Widget.do_state_changed(previous_state)" },
        { "trigger": "Gtk.Widget.do_state_flags_changed", "contents": "Gtk.Widget.do_state_flags_changed(previous_state_flags)" },
        { "trigger": "Gtk.Widget.do_style_set", "contents": "Gtk.Widget.do_style_set(previous_style)" },
        { "trigger": "Gtk.Widget.do_style_updated", "contents": "Gtk.Widget.do_style_updated()" },
        { "trigger": "Gtk.Widget.do_touch_event", "contents": "Gtk.Widget.do_touch_event(event)" },
        { "trigger": "Gtk.Widget.do_unmap", "contents": "Gtk.Widget.do_unmap()" },
        { "trigger": "Gtk.Widget.do_unmap_event", "contents": "Gtk.Widget.do_unmap_event(event)" },
        { "trigger": "Gtk.Widget.do_unrealize", "contents": "Gtk.Widget.do_unrealize()" },
        { "trigger": "Gtk.Widget.do_visibility_notify_event", "contents": "Gtk.Widget.do_visibility_notify_event(event)" },
        { "trigger": "Gtk.Widget.do_window_state_event", "contents": "Gtk.Widget.do_window_state_event(event)" },
        { "trigger": "Gtk.Widget.signals.accel_closures_changed", "contents": "Gtk.Widget.signals.accel_closures_changed(widget)" },
        { "trigger": "Gtk.Widget.signals.button_press_event", "contents": "Gtk.Widget.signals.button_press_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.button_release_event", "contents": "Gtk.Widget.signals.button_release_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.can_activate_accel", "contents": "Gtk.Widget.signals.can_activate_accel(widget, signal_id)" },
        { "trigger": "Gtk.Widget.signals.child_notify", "contents": "Gtk.Widget.signals.child_notify(widget, child_property)" },
        { "trigger": "Gtk.Widget.signals.composited_changed", "contents": "Gtk.Widget.signals.composited_changed(widget)" },
        { "trigger": "Gtk.Widget.signals.configure_event", "contents": "Gtk.Widget.signals.configure_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.damage_event", "contents": "Gtk.Widget.signals.damage_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.delete_event", "contents": "Gtk.Widget.signals.delete_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.destroy", "contents": "Gtk.Widget.signals.destroy(widget)" },
        { "trigger": "Gtk.Widget.signals.destroy_event", "contents": "Gtk.Widget.signals.destroy_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.direction_changed", "contents": "Gtk.Widget.signals.direction_changed(widget, previous_direction)" },
        { "trigger": "Gtk.Widget.signals.drag_begin", "contents": "Gtk.Widget.signals.drag_begin(widget, context)" },
        { "trigger": "Gtk.Widget.signals.drag_data_delete", "contents": "Gtk.Widget.signals.drag_data_delete(widget, context)" },
        { "trigger": "Gtk.Widget.signals.drag_data_get", "contents": "Gtk.Widget.signals.drag_data_get(widget, context, data, info, time)" },
        { "trigger": "Gtk.Widget.signals.drag_data_received", "contents": "Gtk.Widget.signals.drag_data_received(widget, context, x, y, data, info, time)" },
        { "trigger": "Gtk.Widget.signals.drag_drop", "contents": "Gtk.Widget.signals.drag_drop(widget, context, x, y, time)" },
        { "trigger": "Gtk.Widget.signals.drag_end", "contents": "Gtk.Widget.signals.drag_end(widget, context)" },
        { "trigger": "Gtk.Widget.signals.drag_failed", "contents": "Gtk.Widget.signals.drag_failed(widget, context, result)" },
        { "trigger": "Gtk.Widget.signals.drag_leave", "contents": "Gtk.Widget.signals.drag_leave(widget, context, time)" },
        { "trigger": "Gtk.Widget.signals.drag_motion", "contents": "Gtk.Widget.signals.drag_motion(widget, context, x, y, time)" },
        { "trigger": "Gtk.Widget.signals.draw", "contents": "Gtk.Widget.signals.draw(widget, cr)" },
        { "trigger": "Gtk.Widget.signals.enter_notify_event", "contents": "Gtk.Widget.signals.enter_notify_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.event", "contents": "Gtk.Widget.signals.event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.event_after", "contents": "Gtk.Widget.signals.event_after(widget, event)" },
        { "trigger": "Gtk.Widget.signals.focus", "contents": "Gtk.Widget.signals.focus(widget, direction)" },
        { "trigger": "Gtk.Widget.signals.focus_in_event", "contents": "Gtk.Widget.signals.focus_in_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.focus_out_event", "contents": "Gtk.Widget.signals.focus_out_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.grab_broken_event", "contents": "Gtk.Widget.signals.grab_broken_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.grab_focus", "contents": "Gtk.Widget.signals.grab_focus(widget)" },
        { "trigger": "Gtk.Widget.signals.grab_notify", "contents": "Gtk.Widget.signals.grab_notify(widget, was_grabbed)" },
        { "trigger": "Gtk.Widget.signals.hide", "contents": "Gtk.Widget.signals.hide(widget)" },
        { "trigger": "Gtk.Widget.signals.hierarchy_changed", "contents": "Gtk.Widget.signals.hierarchy_changed(widget, previous_toplevel)" },
        { "trigger": "Gtk.Widget.signals.key_press_event", "contents": "Gtk.Widget.signals.key_press_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.key_release_event", "contents": "Gtk.Widget.signals.key_release_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.keynav_failed", "contents": "Gtk.Widget.signals.keynav_failed(widget, direction)" },
        { "trigger": "Gtk.Widget.signals.leave_notify_event", "contents": "Gtk.Widget.signals.leave_notify_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.map", "contents": "Gtk.Widget.signals.map(widget)" },
        { "trigger": "Gtk.Widget.signals.map_event", "contents": "Gtk.Widget.signals.map_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.mnemonic_activate", "contents": "Gtk.Widget.signals.mnemonic_activate(widget, arg1)" },
        { "trigger": "Gtk.Widget.signals.motion_notify_event", "contents": "Gtk.Widget.signals.motion_notify_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.move_focus", "contents": "Gtk.Widget.signals.move_focus(widget, direction)" },
        { "trigger": "Gtk.Widget.signals.parent_set", "contents": "Gtk.Widget.signals.parent_set(widget, old_parent)" },
        { "trigger": "Gtk.Widget.signals.popup_menu", "contents": "Gtk.Widget.signals.popup_menu(widget)" },
        { "trigger": "Gtk.Widget.signals.property_notify_event", "contents": "Gtk.Widget.signals.property_notify_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.proximity_in_event", "contents": "Gtk.Widget.signals.proximity_in_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.proximity_out_event", "contents": "Gtk.Widget.signals.proximity_out_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.query_tooltip", "contents": "Gtk.Widget.signals.query_tooltip(widget, x, y, keyboard_mode, tooltip)" },
        { "trigger": "Gtk.Widget.signals.realize", "contents": "Gtk.Widget.signals.realize(widget)" },
        { "trigger": "Gtk.Widget.signals.screen_changed", "contents": "Gtk.Widget.signals.screen_changed(widget, previous_screen)" },
        { "trigger": "Gtk.Widget.signals.scroll_event", "contents": "Gtk.Widget.signals.scroll_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.selection_clear_event", "contents": "Gtk.Widget.signals.selection_clear_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.selection_get", "contents": "Gtk.Widget.signals.selection_get(widget, data, info, time)" },
        { "trigger": "Gtk.Widget.signals.selection_notify_event", "contents": "Gtk.Widget.signals.selection_notify_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.selection_received", "contents": "Gtk.Widget.signals.selection_received(widget, data, time)" },
        { "trigger": "Gtk.Widget.signals.selection_request_event", "contents": "Gtk.Widget.signals.selection_request_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.show", "contents": "Gtk.Widget.signals.show(widget)" },
        { "trigger": "Gtk.Widget.signals.show_help", "contents": "Gtk.Widget.signals.show_help(widget, help_type)" },
        { "trigger": "Gtk.Widget.signals.size_allocate", "contents": "Gtk.Widget.signals.size_allocate(widget, allocation)" },
        { "trigger": "Gtk.Widget.signals.state_changed", "contents": "Gtk.Widget.signals.state_changed(widget, state)" },
        { "trigger": "Gtk.Widget.signals.state_flags_changed", "contents": "Gtk.Widget.signals.state_flags_changed(widget, flags)" },
        { "trigger": "Gtk.Widget.signals.style_set", "contents": "Gtk.Widget.signals.style_set(widget, previous_style)" },
        { "trigger": "Gtk.Widget.signals.style_updated", "contents": "Gtk.Widget.signals.style_updated(widget)" },
        { "trigger": "Gtk.Widget.signals.touch_event", "contents": "Gtk.Widget.signals.touch_event(widget, object)" },
        { "trigger": "Gtk.Widget.signals.unmap", "contents": "Gtk.Widget.signals.unmap(widget)" },
        { "trigger": "Gtk.Widget.signals.unmap_event", "contents": "Gtk.Widget.signals.unmap_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.unrealize", "contents": "Gtk.Widget.signals.unrealize(widget)" },
        { "trigger": "Gtk.Widget.signals.visibility_notify_event", "contents": "Gtk.Widget.signals.visibility_notify_event(widget, event)" },
        { "trigger": "Gtk.Widget.signals.window_state_event", "contents": "Gtk.Widget.signals.window_state_event(widget, event)" },
        { "trigger": "Gtk.Widget.props.app_paintable", "contents": "Gtk.Widget.props.app_paintable" },
        { "trigger": "Gtk.Widget.props.can_default", "contents": "Gtk.Widget.props.can_default" },
        { "trigger": "Gtk.Widget.props.can_focus", "contents": "Gtk.Widget.props.can_focus" },
        { "trigger": "Gtk.Widget.props.composite_child", "contents": "Gtk.Widget.props.composite_child" },
        { "trigger": "Gtk.Widget.props.double_buffered", "contents": "Gtk.Widget.props.double_buffered" },
        { "trigger": "Gtk.Widget.props.events", "contents": "Gtk.Widget.props.events" },
        { "trigger": "Gtk.Widget.props.expand", "contents": "Gtk.Widget.props.expand" },
        { "trigger": "Gtk.Widget.props.halign", "contents": "Gtk.Widget.props.halign" },
        { "trigger": "Gtk.Widget.props.has_default", "contents": "Gtk.Widget.props.has_default" },
        { "trigger": "Gtk.Widget.props.has_focus", "contents": "Gtk.Widget.props.has_focus" },
        { "trigger": "Gtk.Widget.props.has_tooltip", "contents": "Gtk.Widget.props.has_tooltip" },
        { "trigger": "Gtk.Widget.props.height_request", "contents": "Gtk.Widget.props.height_request" },
        { "trigger": "Gtk.Widget.props.hexpand", "contents": "Gtk.Widget.props.hexpand" },
        { "trigger": "Gtk.Widget.props.hexpand_set", "contents": "Gtk.Widget.props.hexpand_set" },
        { "trigger": "Gtk.Widget.props.is_focus", "contents": "Gtk.Widget.props.is_focus" },
        { "trigger": "Gtk.Widget.props.margin", "contents": "Gtk.Widget.props.margin" },
        { "trigger": "Gtk.Widget.props.margin_bottom", "contents": "Gtk.Widget.props.margin_bottom" },
        { "trigger": "Gtk.Widget.props.margin_end", "contents": "Gtk.Widget.props.margin_end" },
        { "trigger": "Gtk.Widget.props.margin_left", "contents": "Gtk.Widget.props.margin_left" },
        { "trigger": "Gtk.Widget.props.margin_right", "contents": "Gtk.Widget.props.margin_right" },
        { "trigger": "Gtk.Widget.props.margin_start", "contents": "Gtk.Widget.props.margin_start" },
        { "trigger": "Gtk.Widget.props.margin_top", "contents": "Gtk.Widget.props.margin_top" },
        { "trigger": "Gtk.Widget.props.name", "contents": "Gtk.Widget.props.name" },
        { "trigger": "Gtk.Widget.props.no_show_all", "contents": "Gtk.Widget.props.no_show_all" },
        { "trigger": "Gtk.Widget.props.opacity", "contents": "Gtk.Widget.props.opacity" },
        { "trigger": "Gtk.Widget.props.parent", "contents": "Gtk.Widget.props.parent" },
        { "trigger": "Gtk.Widget.props.receives_default", "contents": "Gtk.Widget.props.receives_default" },
        { "trigger": "Gtk.Widget.props.scale_factor", "contents": "Gtk.Widget.props.scale_factor" },
        { "trigger": "Gtk.Widget.props.sensitive", "contents": "Gtk.Widget.props.sensitive" },
        { "trigger": "Gtk.Widget.props.style", "contents": "Gtk.Widget.props.style" },
        { "trigger": "Gtk.Widget.props.tooltip_markup", "contents": "Gtk.Widget.props.tooltip_markup" },
        { "trigger": "Gtk.Widget.props.tooltip_text", "contents": "Gtk.Widget.props.tooltip_text" },
        { "trigger": "Gtk.Widget.props.valign", "contents": "Gtk.Widget.props.valign" },
        { "trigger": "Gtk.Widget.props.vexpand", "contents": "Gtk.Widget.props.vexpand" },
        { "trigger": "Gtk.Widget.props.vexpand_set", "contents": "Gtk.Widget.props.vexpand_set" },
        { "trigger": "Gtk.Widget.props.visible", "contents": "Gtk.Widget.props.visible" },
        { "trigger": "Gtk.Widget.props.width_request", "contents": "Gtk.Widget.props.width_request" },
        { "trigger": "Gtk.Widget.props.window", "contents": "Gtk.Widget.props.window" },
        { "trigger": "Gtk.WindowAccessible", "contents": "Gtk.WindowAccessible(**kwargs)" },
        { "trigger": "Gtk.WindowGroup", "contents": "Gtk.WindowGroup(**kwargs)" },
        { "trigger": "Gtk.WindowGroup.new", "contents": "Gtk.WindowGroup.new()" },
        { "trigger": "Gtk.WindowGroup.add_window", "contents": "Gtk.WindowGroup.add_window(window)" },
        { "trigger": "Gtk.WindowGroup.get_current_device_grab", "contents": "Gtk.WindowGroup.get_current_device_grab(device)" },
        { "trigger": "Gtk.WindowGroup.get_current_grab", "contents": "Gtk.WindowGroup.get_current_grab()" },
        { "trigger": "Gtk.WindowGroup.list_windows", "contents": "Gtk.WindowGroup.list_windows()" },
        { "trigger": "Gtk.WindowGroup.remove_window", "contents": "Gtk.WindowGroup.remove_window(window)" },
        { "trigger": "Gtk.Window", "contents": "Gtk.Window(*args, **kwargs)" },
        { "trigger": "Gtk.Window.get_default_icon_list", "contents": "Gtk.Window.get_default_icon_list()" },
        { "trigger": "Gtk.Window.get_default_icon_name", "contents": "Gtk.Window.get_default_icon_name()" },
        { "trigger": "Gtk.Window.list_toplevels", "contents": "Gtk.Window.list_toplevels()" },
        { "trigger": "Gtk.Window.new", "contents": "Gtk.Window.new(type)" },
        { "trigger": "Gtk.Window.set_auto_startup_notification", "contents": "Gtk.Window.set_auto_startup_notification(setting)" },
        { "trigger": "Gtk.Window.set_default_icon", "contents": "Gtk.Window.set_default_icon(icon)" },
        { "trigger": "Gtk.Window.set_default_icon_from_file", "contents": "Gtk.Window.set_default_icon_from_file(filename)" },
        { "trigger": "Gtk.Window.set_default_icon_list", "contents": "Gtk.Window.set_default_icon_list(list)" },
        { "trigger": "Gtk.Window.set_default_icon_name", "contents": "Gtk.Window.set_default_icon_name(name)" },
        { "trigger": "Gtk.Window.set_interactive_debugging", "contents": "Gtk.Window.set_interactive_debugging(enable)" },
        { "trigger": "Gtk.Window.activate_default", "contents": "Gtk.Window.activate_default()" },
        { "trigger": "Gtk.Window.activate_focus", "contents": "Gtk.Window.activate_focus()" },
        { "trigger": "Gtk.Window.activate_key", "contents": "Gtk.Window.activate_key(event)" },
        { "trigger": "Gtk.Window.add_accel_group", "contents": "Gtk.Window.add_accel_group(accel_group)" },
        { "trigger": "Gtk.Window.add_mnemonic", "contents": "Gtk.Window.add_mnemonic(keyval, target)" },
        { "trigger": "Gtk.Window.begin_move_drag", "contents": "Gtk.Window.begin_move_drag(button, root_x, root_y, timestamp)" },
        { "trigger": "Gtk.Window.begin_resize_drag", "contents": "Gtk.Window.begin_resize_drag(edge, button, root_x, root_y, timestamp)" },
        { "trigger": "Gtk.Window.close", "contents": "Gtk.Window.close()" },
        { "trigger": "Gtk.Window.deiconify", "contents": "Gtk.Window.deiconify()" },
        { "trigger": "Gtk.Window.fullscreen", "contents": "Gtk.Window.fullscreen()" },
        { "trigger": "Gtk.Window.fullscreen_on_monitor", "contents": "Gtk.Window.fullscreen_on_monitor(screen, monitor)" },
        { "trigger": "Gtk.Window.get_accept_focus", "contents": "Gtk.Window.get_accept_focus()" },
        { "trigger": "Gtk.Window.get_application", "contents": "Gtk.Window.get_application()" },
        { "trigger": "Gtk.Window.get_attached_to", "contents": "Gtk.Window.get_attached_to()" },
        { "trigger": "Gtk.Window.get_decorated", "contents": "Gtk.Window.get_decorated()" },
        { "trigger": "Gtk.Window.get_default_size", "contents": "Gtk.Window.get_default_size()" },
        { "trigger": "Gtk.Window.get_default_widget", "contents": "Gtk.Window.get_default_widget()" },
        { "trigger": "Gtk.Window.get_deletable", "contents": "Gtk.Window.get_deletable()" },
        { "trigger": "Gtk.Window.get_destroy_with_parent", "contents": "Gtk.Window.get_destroy_with_parent()" },
        { "trigger": "Gtk.Window.get_focus", "contents": "Gtk.Window.get_focus()" },
        { "trigger": "Gtk.Window.get_focus_on_map", "contents": "Gtk.Window.get_focus_on_map()" },
        { "trigger": "Gtk.Window.get_focus_visible", "contents": "Gtk.Window.get_focus_visible()" },
        { "trigger": "Gtk.Window.get_gravity", "contents": "Gtk.Window.get_gravity()" },
        { "trigger": "Gtk.Window.get_group", "contents": "Gtk.Window.get_group()" },
        { "trigger": "Gtk.Window.get_has_resize_grip", "contents": "Gtk.Window.get_has_resize_grip()" },
        { "trigger": "Gtk.Window.get_hide_titlebar_when_maximized", "contents": "Gtk.Window.get_hide_titlebar_when_maximized()" },
        { "trigger": "Gtk.Window.get_icon", "contents": "Gtk.Window.get_icon()" },
        { "trigger": "Gtk.Window.get_icon_list", "contents": "Gtk.Window.get_icon_list()" },
        { "trigger": "Gtk.Window.get_icon_name", "contents": "Gtk.Window.get_icon_name()" },
        { "trigger": "Gtk.Window.get_mnemonic_modifier", "contents": "Gtk.Window.get_mnemonic_modifier()" },
        { "trigger": "Gtk.Window.get_mnemonics_visible", "contents": "Gtk.Window.get_mnemonics_visible()" },
        { "trigger": "Gtk.Window.get_modal", "contents": "Gtk.Window.get_modal()" },
        { "trigger": "Gtk.Window.get_opacity", "contents": "Gtk.Window.get_opacity()" },
        { "trigger": "Gtk.Window.get_position", "contents": "Gtk.Window.get_position()" },
        { "trigger": "Gtk.Window.get_resizable", "contents": "Gtk.Window.get_resizable()" },
        { "trigger": "Gtk.Window.get_resize_grip_area", "contents": "Gtk.Window.get_resize_grip_area()" },
        { "trigger": "Gtk.Window.get_role", "contents": "Gtk.Window.get_role()" },
        { "trigger": "Gtk.Window.get_screen", "contents": "Gtk.Window.get_screen()" },
        { "trigger": "Gtk.Window.get_size", "contents": "Gtk.Window.get_size()" },
        { "trigger": "Gtk.Window.get_skip_pager_hint", "contents": "Gtk.Window.get_skip_pager_hint()" },
        { "trigger": "Gtk.Window.get_skip_taskbar_hint", "contents": "Gtk.Window.get_skip_taskbar_hint()" },
        { "trigger": "Gtk.Window.get_title", "contents": "Gtk.Window.get_title()" },
        { "trigger": "Gtk.Window.get_titlebar", "contents": "Gtk.Window.get_titlebar()" },
        { "trigger": "Gtk.Window.get_transient_for", "contents": "Gtk.Window.get_transient_for()" },
        { "trigger": "Gtk.Window.get_type_hint", "contents": "Gtk.Window.get_type_hint()" },
        { "trigger": "Gtk.Window.get_urgency_hint", "contents": "Gtk.Window.get_urgency_hint()" },
        { "trigger": "Gtk.Window.get_window_type", "contents": "Gtk.Window.get_window_type()" },
        { "trigger": "Gtk.Window.has_group", "contents": "Gtk.Window.has_group()" },
        { "trigger": "Gtk.Window.has_toplevel_focus", "contents": "Gtk.Window.has_toplevel_focus()" },
        { "trigger": "Gtk.Window.iconify", "contents": "Gtk.Window.iconify()" },
        { "trigger": "Gtk.Window.is_active", "contents": "Gtk.Window.is_active()" },
        { "trigger": "Gtk.Window.is_maximized", "contents": "Gtk.Window.is_maximized()" },
        { "trigger": "Gtk.Window.maximize", "contents": "Gtk.Window.maximize()" },
        { "trigger": "Gtk.Window.mnemonic_activate", "contents": "Gtk.Window.mnemonic_activate(keyval, modifier)" },
        { "trigger": "Gtk.Window.move", "contents": "Gtk.Window.move(x, y)" },
        { "trigger": "Gtk.Window.parse_geometry", "contents": "Gtk.Window.parse_geometry(geometry)" },
        { "trigger": "Gtk.Window.present", "contents": "Gtk.Window.present()" },
        { "trigger": "Gtk.Window.present_with_time", "contents": "Gtk.Window.present_with_time(timestamp)" },
        { "trigger": "Gtk.Window.propagate_key_event", "contents": "Gtk.Window.propagate_key_event(event)" },
        { "trigger": "Gtk.Window.remove_accel_group", "contents": "Gtk.Window.remove_accel_group(accel_group)" },
        { "trigger": "Gtk.Window.remove_mnemonic", "contents": "Gtk.Window.remove_mnemonic(keyval, target)" },
        { "trigger": "Gtk.Window.reshow_with_initial_size", "contents": "Gtk.Window.reshow_with_initial_size()" },
        { "trigger": "Gtk.Window.resize", "contents": "Gtk.Window.resize(width, height)" },
        { "trigger": "Gtk.Window.resize_grip_is_visible", "contents": "Gtk.Window.resize_grip_is_visible()" },
        { "trigger": "Gtk.Window.resize_to_geometry", "contents": "Gtk.Window.resize_to_geometry(width, height)" },
        { "trigger": "Gtk.Window.set_accept_focus", "contents": "Gtk.Window.set_accept_focus(setting)" },
        { "trigger": "Gtk.Window.set_application", "contents": "Gtk.Window.set_application(application)" },
        { "trigger": "Gtk.Window.set_attached_to", "contents": "Gtk.Window.set_attached_to(attach_widget)" },
        { "trigger": "Gtk.Window.set_decorated", "contents": "Gtk.Window.set_decorated(setting)" },
        { "trigger": "Gtk.Window.set_default", "contents": "Gtk.Window.set_default(default_widget)" },
        { "trigger": "Gtk.Window.set_default_geometry", "contents": "Gtk.Window.set_default_geometry(width, height)" },
        { "trigger": "Gtk.Window.set_default_size", "contents": "Gtk.Window.set_default_size(width, height)" },
        { "trigger": "Gtk.Window.set_deletable", "contents": "Gtk.Window.set_deletable(setting)" },
        { "trigger": "Gtk.Window.set_destroy_with_parent", "contents": "Gtk.Window.set_destroy_with_parent(setting)" },
        { "trigger": "Gtk.Window.set_focus", "contents": "Gtk.Window.set_focus(focus)" },
        { "trigger": "Gtk.Window.set_focus_on_map", "contents": "Gtk.Window.set_focus_on_map(setting)" },
        { "trigger": "Gtk.Window.set_focus_visible", "contents": "Gtk.Window.set_focus_visible(setting)" },
        { "trigger": "Gtk.Window.set_geometry_hints", "contents": "Gtk.Window.set_geometry_hints(geometry_widget, geometry, geom_mask)" },
        { "trigger": "Gtk.Window.set_gravity", "contents": "Gtk.Window.set_gravity(gravity)" },
        { "trigger": "Gtk.Window.set_has_resize_grip", "contents": "Gtk.Window.set_has_resize_grip(value)" },
        { "trigger": "Gtk.Window.set_has_user_ref_count", "contents": "Gtk.Window.set_has_user_ref_count(setting)" },
        { "trigger": "Gtk.Window.set_hide_titlebar_when_maximized", "contents": "Gtk.Window.set_hide_titlebar_when_maximized(setting)" },
        { "trigger": "Gtk.Window.set_icon", "contents": "Gtk.Window.set_icon(icon)" },
        { "trigger": "Gtk.Window.set_icon_from_file", "contents": "Gtk.Window.set_icon_from_file(filename)" },
        { "trigger": "Gtk.Window.set_icon_list", "contents": "Gtk.Window.set_icon_list(list)" },
        { "trigger": "Gtk.Window.set_icon_name", "contents": "Gtk.Window.set_icon_name(name)" },
        { "trigger": "Gtk.Window.set_keep_above", "contents": "Gtk.Window.set_keep_above(setting)" },
        { "trigger": "Gtk.Window.set_keep_below", "contents": "Gtk.Window.set_keep_below(setting)" },
        { "trigger": "Gtk.Window.set_mnemonic_modifier", "contents": "Gtk.Window.set_mnemonic_modifier(modifier)" },
        { "trigger": "Gtk.Window.set_mnemonics_visible", "contents": "Gtk.Window.set_mnemonics_visible(setting)" },
        { "trigger": "Gtk.Window.set_modal", "contents": "Gtk.Window.set_modal(modal)" },
        { "trigger": "Gtk.Window.set_opacity", "contents": "Gtk.Window.set_opacity(opacity)" },
        { "trigger": "Gtk.Window.set_position", "contents": "Gtk.Window.set_position(position)" },
        { "trigger": "Gtk.Window.set_resizable", "contents": "Gtk.Window.set_resizable(resizable)" },
        { "trigger": "Gtk.Window.set_role", "contents": "Gtk.Window.set_role(role)" },
        { "trigger": "Gtk.Window.set_screen", "contents": "Gtk.Window.set_screen(screen)" },
        { "trigger": "Gtk.Window.set_skip_pager_hint", "contents": "Gtk.Window.set_skip_pager_hint(setting)" },
        { "trigger": "Gtk.Window.set_skip_taskbar_hint", "contents": "Gtk.Window.set_skip_taskbar_hint(setting)" },
        { "trigger": "Gtk.Window.set_startup_id", "contents": "Gtk.Window.set_startup_id(startup_id)" },
        { "trigger": "Gtk.Window.set_title", "contents": "Gtk.Window.set_title(title)" },
        { "trigger": "Gtk.Window.set_titlebar", "contents": "Gtk.Window.set_titlebar(titlebar)" },
        { "trigger": "Gtk.Window.set_transient_for", "contents": "Gtk.Window.set_transient_for(parent)" },
        { "trigger": "Gtk.Window.set_type_hint", "contents": "Gtk.Window.set_type_hint(hint)" },
        { "trigger": "Gtk.Window.set_urgency_hint", "contents": "Gtk.Window.set_urgency_hint(setting)" },
        { "trigger": "Gtk.Window.set_wmclass", "contents": "Gtk.Window.set_wmclass(wmclass_name, wmclass_class)" },
        { "trigger": "Gtk.Window.stick", "contents": "Gtk.Window.stick()" },
        { "trigger": "Gtk.Window.unfullscreen", "contents": "Gtk.Window.unfullscreen()" },
        { "trigger": "Gtk.Window.unmaximize", "contents": "Gtk.Window.unmaximize()" },
        { "trigger": "Gtk.Window.unstick", "contents": "Gtk.Window.unstick()" },
        { "trigger": "Gtk.Window.do_activate_default", "contents": "Gtk.Window.do_activate_default()" },
        { "trigger": "Gtk.Window.do_activate_focus", "contents": "Gtk.Window.do_activate_focus()" },
        { "trigger": "Gtk.Window.do_enable_debugging", "contents": "Gtk.Window.do_enable_debugging(toggle)" },
        { "trigger": "Gtk.Window.do_keys_changed", "contents": "Gtk.Window.do_keys_changed()" },
        { "trigger": "Gtk.Window.do_set_focus", "contents": "Gtk.Window.do_set_focus(focus)" },
        { "trigger": "Gtk.Window.signals.activate_default", "contents": "Gtk.Window.signals.activate_default(window)" },
        { "trigger": "Gtk.Window.signals.activate_focus", "contents": "Gtk.Window.signals.activate_focus(window)" },
        { "trigger": "Gtk.Window.signals.enable_debugging", "contents": "Gtk.Window.signals.enable_debugging(window, toggle)" },
        { "trigger": "Gtk.Window.signals.keys_changed", "contents": "Gtk.Window.signals.keys_changed(window)" },
        { "trigger": "Gtk.Window.signals.set_focus", "contents": "Gtk.Window.signals.set_focus(window, object)" },
        { "trigger": "Gtk.Window.props.accept_focus", "contents": "Gtk.Window.props.accept_focus" },
        { "trigger": "Gtk.Window.props.application", "contents": "Gtk.Window.props.application" },
        { "trigger": "Gtk.Window.props.attached_to", "contents": "Gtk.Window.props.attached_to" },
        { "trigger": "Gtk.Window.props.decorated", "contents": "Gtk.Window.props.decorated" },
        { "trigger": "Gtk.Window.props.default_height", "contents": "Gtk.Window.props.default_height" },
        { "trigger": "Gtk.Window.props.default_width", "contents": "Gtk.Window.props.default_width" },
        { "trigger": "Gtk.Window.props.deletable", "contents": "Gtk.Window.props.deletable" },
        { "trigger": "Gtk.Window.props.destroy_with_parent", "contents": "Gtk.Window.props.destroy_with_parent" },
        { "trigger": "Gtk.Window.props.focus_on_map", "contents": "Gtk.Window.props.focus_on_map" },
        { "trigger": "Gtk.Window.props.focus_visible", "contents": "Gtk.Window.props.focus_visible" },
        { "trigger": "Gtk.Window.props.gravity", "contents": "Gtk.Window.props.gravity" },
        { "trigger": "Gtk.Window.props.has_resize_grip", "contents": "Gtk.Window.props.has_resize_grip" },
        { "trigger": "Gtk.Window.props.has_toplevel_focus", "contents": "Gtk.Window.props.has_toplevel_focus" },
        { "trigger": "Gtk.Window.props.hide_titlebar_when_maximized", "contents": "Gtk.Window.props.hide_titlebar_when_maximized" },
        { "trigger": "Gtk.Window.props.icon", "contents": "Gtk.Window.props.icon" },
        { "trigger": "Gtk.Window.props.icon_name", "contents": "Gtk.Window.props.icon_name" },
        { "trigger": "Gtk.Window.props.is_active", "contents": "Gtk.Window.props.is_active" },
        { "trigger": "Gtk.Window.props.is_maximized", "contents": "Gtk.Window.props.is_maximized" },
        { "trigger": "Gtk.Window.props.mnemonics_visible", "contents": "Gtk.Window.props.mnemonics_visible" },
        { "trigger": "Gtk.Window.props.modal", "contents": "Gtk.Window.props.modal" },
        { "trigger": "Gtk.Window.props.resizable", "contents": "Gtk.Window.props.resizable" },
        { "trigger": "Gtk.Window.props.resize_grip_visible", "contents": "Gtk.Window.props.resize_grip_visible" },
        { "trigger": "Gtk.Window.props.role", "contents": "Gtk.Window.props.role" },
        { "trigger": "Gtk.Window.props.screen", "contents": "Gtk.Window.props.screen" },
        { "trigger": "Gtk.Window.props.skip_pager_hint", "contents": "Gtk.Window.props.skip_pager_hint" },
        { "trigger": "Gtk.Window.props.skip_taskbar_hint", "contents": "Gtk.Window.props.skip_taskbar_hint" },
        { "trigger": "Gtk.Window.props.startup_id", "contents": "Gtk.Window.props.startup_id" },
        { "trigger": "Gtk.Window.props.title", "contents": "Gtk.Window.props.title" },
        { "trigger": "Gtk.Window.props.transient_for", "contents": "Gtk.Window.props.transient_for" },
        { "trigger": "Gtk.Window.props.type", "contents": "Gtk.Window.props.type" },
        { "trigger": "Gtk.Window.props.type_hint", "contents": "Gtk.Window.props.type_hint" },
        { "trigger": "Gtk.Window.props.urgency_hint", "contents": "Gtk.Window.props.urgency_hint" },
        { "trigger": "Gtk.Window.props.window_position", "contents": "Gtk.Window.props.window_position" }
    ]
}
